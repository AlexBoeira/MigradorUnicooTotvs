        1   /* CG0311X - CRIA PROPOSTAS E TABELAS RELACIONADAS */
        2   
        3   /********************************************************************************
        4   ** Copyright DATASUL S.A. (1997)
        5   ** Todos os Direitos Reservados.
        6   **
        7   ** Este fonte e de propriedade exclusiva da DATASUL, sua reproducao
        8   ** parcial ou total por qualquer meio, so podera ser feita mediante
        9   ** autorizacao expressa.
       10   *******************************************************************************/
       11   /* Begin_Include: i_version_extract */
       12   def new global shared var v_cod_arq
       13       as char  
       14       format 'x(60)'
       15       no-undo.
       16   def new global shared var v_cod_tip_prog
       17       as character
       18       format 'x(8)'
       19       no-undo.
       20   
       21   def stream s-arq.
       22   
       23   def var c_prg_vrs as char init "" no-undo.
       24   assign c_prg_vrs = "2.00.00.022".
       25   
       26   /* LS */
       27   /* DEF VAR c_id_modulo_ls   AS CHAR NO-UNDO.  */
       28   /* DEF VAR c_desc_modulo_ls AS CHAR NO-UNDO.  */
       29   /* FIM LS */
       30   
       31   if  v_cod_arq <> '' and v_cod_arq <> ?
       32   then do:
       33       /*Exemplo de chamada do EMS5
       34       run pi_version_extract ('api_login':U, 'prgtec/btb/btapi910za.py':U, '1.00.00.008':U, 'pro':U).
       35       */
       36       run pi_version_extract ('':U, 'CG0311X':U, '2.00.00.022':U, '':U).
       37   end /* if */.
       38   /* End_Include: i_version_extract */
       39   
       40   /*****************************************************************************
       41   ** Procedure Interna.....: pi_version_extract
       42   ** Descricao.............: pi_version_extract
       43   ** Criado por............: jaison
       44   ** Criado em.............: 31/07/1998 09:33:22
       45   ** Alterado por..........: tech14013
       46   ** Alterado em...........: 05/01/2005 19:27:44
       47   *****************************************************************************/
       48   PROCEDURE pi_version_extract:
       49   
       50       /************************ Parameter Definition Begin ************************/
       51   
       52       def Input param p_cod_program
       53           as character
       54           format "x(08)"
       55           no-undo.
       56       def Input param p_cod_program_ext
       57           as character
       58           format "x(8)"
       59           no-undo.
       60       def Input param p_cod_version
       61           as character
       62           format "x(8)"
       63           no-undo.
       64       def Input param p_cod_program_type
       65           as character
       66           format "x(8)"
       67           no-undo.
       68   
       69   
       70       /************************* Parameter Definition End *************************/
       71   
       72       /************************* Variable Definition Begin ************************/
       73   
       74       def var v_cod_event_dic
       75           as character
       76           format "x(20)":U
       77           label "Evento"
       78           column-label "Evento"
       79           no-undo.
       80       def var v_cod_tabela
       81           as character
       82           format "x(28)":U
       83           label "Tabela"
       84           column-label "Tabela"
       85           no-undo.
       86   
       87   
       88       /************************** Variable Definition End *************************/
       89       IF p_cod_program_type = "" OR p_cod_program_type = ? THEN DO:
       90           ASSIGN p_cod_program_type = "pro".
       91       END.
       92   
       93   
       94       if  can-do(v_cod_tip_prog, p_cod_program_type)
       95       then do:
       96           if p_cod_program_type = 'dic' then 
       97              assign p_cod_program_ext = replace(p_cod_program_ext, 'database/', '').
       98   
       99           output stream s-arq to value(v_cod_arq) append.
      100   
      101           
      102   
      103           put stream s-arq unformatted
      104               p_cod_program            at 1 
      105               p_cod_program_ext        at 43 
      106               p_cod_version            at 69 
      107               today                    at 84 
      108               string(time, 'HH:MM:SS') at 94 skip.
      109   
      110           if  p_cod_program_type = 'pro' then do:
      111               
      112           end.
      113   
      114           if  p_cod_program_type = 'dic' then do:
      115               
      116           end.
      117   
      118           output stream s-arq close.
      119       end /* if */.
      120   
      121   END PROCEDURE. /* pi_version_extract */
      122     /*** 010022 ***/
      123   
      124   
      125   
      126   /******************************************************************************
      127   *      Programa .....: CG0311X.p                                              *
      128   *      Data .........: 29 de Janeiro de 2015                                  *
      129   *      Autor ........: TOTVS                                                  *
      130   *      Sistema ......: CG - Cadastros Gerais                                  *
      131   *      Programador ..: Ja¡ne Marin                                            *
      132   *      Objetivo .....: Importacao de Propostas                                *
      133   *                                                                             *
      134   *                    - Rotina de Inclusao                                     *
      135   *                                                                             *
      136   *******************************************************************************
      137   *     VERSAO     DATA       RESPONSAVEL    MOTIVO                             *
      138   *     C.00.000  29/01/2015  Ja¡ne Marin    Desenvolvimento                    *
      139   ******************************************************************************/
      140   /******************************************************************************
      141   *      Programa .....: hdsistem.i                                             *
      142   *      Data .........: 13 de Janeiro de 2004                                  *
      143   *      Autor ........: DZSET SOLUCOES E SISTEMAS LTDA.                        *
      144   *      Sistema ......: hd - include padrao                                    *
      145   *      Programador ..: Luis Fernando                                          *
      146   *      Objetivo .....: Definicao do pre processos                             *
      147   *-----------------------------------------------------------------------------*
      148   *      VERSAO    DATA        RESPONSAVEL    MOTIVO                            *
      149   *      7.00.000  13/01/2004  Luis           Conversao Ems505                  *
      150   ******************************************************************************/
      151   /* magnus ou ems ou ems504 ou ems505 *//* normal ou oracle *//* sim ou nao *//* ------------------------------------------------------------------------- */
      152   
      153   
      154   def shared var lg-registro-modulos      as log  no-undo.
      155   def shared var lg-registro-faixa        as log  no-undo. 
      156   def shared var lg-registro-negociacao   as log  no-undo.
      157   def shared var lg-registro-cobertura    as log  no-undo.
      158   def shared var lg-registro-especifico   as log  no-undo.
      159   def shared var lg-registro-procedimento as log  no-undo.
      160   def shared var lg-ver-imp8              as log  no-undo.
      161   def shared var lg-ver-imp9              as log  no-undo.
      162   def shared var in-classif               as int  no-undo.
      163   DEF SHARED VAR lg-gerar-termo-aux             AS LOG INIT NO                       NO-UNDO.
      164   DEF SHARED VAR dt-minima-termo-aux      AS DATE                               NO-UNDO.
      165   
      166   def var lg-relat-erro            as logi                               no-undo.
      167   def var nr-proposta-anterior-aux like propost.nr-proposta-anterior     no-undo.
      168   def var lg-passou                as log initial no                     no-undo.
      169   def var qt-car-ele-aux           like pro-pla.qt-caren-eletiva         no-undo.
      170   def var qt-car-urg-aux           like pro-pla.qt-caren-urgencia        no-undo.
      171   def var c-versao                 as char                               no-undo.
      172   def var c-data                   as char                               no-undo.
      173   def var c-hora                   as char                               no-undo.
      174   def var lg-achou                 as logi                               no-undo.
      175   def var lg-critica               as logi                               no-undo.
      176   def var dt-inclu                 like usuario.dt-inclusao-plano        no-undo.
      177   def var ct-codigo                like usuario.cd-usuario               no-undo.
      178   def var lg-formato-livre-aux     as log                                no-undo.
      179   def var ix-cont-aux              as int                                no-undo.
      180   def var nr-cgc-cpf-aux           like contrat.nr-cgc-cpf               no-undo.
      181   def var nr-proposta-aux          like usuario.nr-proposta              no-undo.
      182   DEF VAR lg-medocup-aux           AS LOG                                NO-UNDO.
      183   def var cd-senha-aux           as int format 999999                     no-undo.
      184   def var lg-erro-rtsenha-aux    as log                                   no-undo.
      185   def var ds-erro-rtsenha-aux            as char                                  no-undo.
      186   
      187   def var lg-tem-proposta-aux      as   log       initial no             no-undo.
      188   def var cd-plano-ans-aux         as int                                no-undo.
      189   DEF VAR lg-relat-erro-aux        AS LOG                                NO-UNDO.
      190   def var lg-retorna               as log init no                        no-undo.
      191   DEF VAR lg-modulo-erro           AS LOG                                NO-UNDO.
      192   def var nro-seq-aux              as int initial 0                      no-undo.
      193   def var h-bosaueventualuser-aux  as handle                             no-undo.
      194   
      195   DEF SHARED TEMP-TABLE tt-import-propost NO-UNDO
      196       FIELD rowid-import-prop AS ROWID
      197       FIELD nr-proposta       AS INT
      198       FIELD nr-insc-contrat   like contrat.nr-insc-contratante 
      199       INDEX ID rowid-import-prop.
      200   
      201   def buffer b-propost         for propost.
      202   def buffer b-contrat         for contrat.
      203   def buffer b-import-propost  FOR import-propost.
      204   def buffer bb-import-propost FOR import-propost.
      205   def buffer bbb-import-propost FOR import-propost.
      206   
      207   FUNCTION proximaseqregra RETURNS DECIMAL (): 
      208   
      209       DEF VAR prox-seq-par AS DEC INITIAL 0 NO-UNDO.
      210   
      211       SELECT MAX(cdd-seq) INTO prox-seq-par FROM regra-menslid-propost.
      212           
      213       RETURN (prox-seq-par + 1).
      214   
      215   END FUNCTION.
      216   
      217   /* --- DECLARACAO DE VARIAVEIS UTILIZADAS POR HDRUNPERSIS E HDDELPERSIS --- */
      218   /*{hdp/hdrunpersis.iv}*/
      219   def var h-handle-aux              as handle no-undo.
      220   def var h-handle2-aux             as handle no-undo.
      221   
      222   def new shared var id-requisicao-handle-aux as char init "" no-undo.
      223   
      224   def new global shared var v_cod_usuar_corren as char no-undo.
      225   
      226   
      227   /*----------------------------------------------------------------------------*/
      228   find first paramecp no-lock no-error.
      229   if   not avail paramecp
      230   then do:
      231          message "Parametros gerais do sistema nao cadastrados."
      232                  view-as alert-box title " Atencao !!! ".
      233          return.
      234        end.
      235   
      236   /* --------------------------------------------------------------------------*/
      237    
      238   c-versao = "7.15.000".
      239   /******************************************************************************
      240       Programa .....: hdlog.i
      241       Data .........: 01/11/2005
      242       Sistema ......:
      243       Empresa ......: DZSET SOLUCOES E SISTEMAS
      244       Cliente ......:
      245       Programador ..: NORA
      246       Objetivo .....: Rotina que gera o log de versao
      247   *-----------------------------------------------------------------------------*
      248       Versao     DATA         RESPONSAVEL
      249       7.00.000   01/11/2005   NORA
      250   ******************************************************************************/
      251   /* --- IMPLEMENTADO UMA CHAMADA A PROGRAMA POIS ESTAVA ESTOURANDO 
      252          O SEGMENTO DOS PROGRAMAS                                          --- */
      253   def new global shared var v_cod_usuar_corren as character
      254                             format "x(12)":U label "Usu rio Corrente"
      255                                           column-label "Usu rio Corrente" no-undo.       
      256   def new global shared var in-origem-chamada-menu as character format "x(12)"    
      257                                                                           no-undo.
      258   /* ----------------------------- testa se Serious 7.0 ou GESTAO DE PLANOS ---*/
      259   /* ------------- CASO FOR GESTÃO DE PLANOS RETORNA A VERSÃO DO ROUNTABLE --- */
      260   if in-origem-chamada-menu <> "TEMENU70"
      261   then assign c-versao      = c_prg_vrs. 
      262   
      263   if session:multitasking-interval = 1
      264   then do:
      265          run rtp/rthdlog.p (input c-versao,
      266                             input program-name(1)).
      267        end.
      268       
      269   
      270   /*
      271   Copyright (c) 2007, DATASUL S/A. Todos os direitos reservados.
      272   
      273   Os Programas desta Aplicação (que incluem tanto o software quanto a sua
      274   documentação) contém informações proprietárias da DATASUL S/A; eles são
      275   licenciados de acordo com um contrato de licença contendo restrições de uso e
      276   confidencialidade, e são também protegidos pela Lei 9609/98 e 9610/98,
      277   respectivamente Lei do Software e Lei dos Direitos Autorais. Engenharia
      278   reversa, descompilação e desmontagem dos programas são proibidos. Nenhuma
      279   parte destes programas pode ser reproduzida ou transmitida de nenhuma forma e
      280   por nenhum meio, eletrônico ou mecânico, por motivo algum, sem a permissão
      281   escrita da DATASUL S/A.
      282   */
      283   
      284   /******************************************************************************
      285       Programa .....: rtrowerror.i
      286       Data .........: 31/05/2010
      287       Sistema ......:
      288       Empresa ......: DATASUL Saude
      289       Cliente ......:
      290       Programador ..: Alex Boeira
      291       Objetivo .....: Declaracao da temp-table rowErrors e de todos os metodos
      292                       para sua manipulacao atraves das BOs do produto.
      293                       Essa temp-table trafega entre a camada de negocio (Progress)
      294                       e camada de apresentacao (Flex/Java) atraves do Appserver.
      295   ******************************************************************************/
      296   
      297   define temp-table rowErrors no-undo
      298           field errorSequence    as integer              /* --- GERA INTERNAMENTE --- */
      299           field errorNumber      as integer              /* --- NUMERO DA MENSAGEM DE ERRO, CASO NAO VENHA DA MENSISTE --- */
      300           field errorDescription as char format "x(500)" /* --- SE PREENCHER, CONSIDERA. SENAO BUSCA --- */
      301           field errorParameters  as char format "x(500)" /* --- LIVRE. CHAVE DO REGISTRO, ETC... --- */
      302           field errorType        as char format "x(10)"  /* --- PROGRESS / GP / OUTROS --- */
      303           field errorHelp        as char format "x(500)" /* --- SE PREENCHER, CONSIDERA. SENAO MENSISTE.DS-MENSAGEM-DETALHADA --- */
      304           field errorSubType     aS char format "x(12)" /* --- ERROR, WARNING ou INFORMATION --- */
      305           
      306           index rowErrors1
      307             errorSubType
      308   
      309           index rowErrors2
      310             errorNumber.
      311   
      312   /**
      313    * Verifica se na rowErrors existe uma mensagem qualquer do tipo "ERROR".
      314    * Returna true se existir e false caso contr rio.
      315    */
      316   function containsAnyError returns logical private (input table rowErrors).
      317   
      318       if can-find(first rowErrors where rowErrors.errorSubType = "ERROR" use-index rowErrors1) 
      319       then return yes.
      320       else return no.
      321   
      322   end function.
      323   
      324   /**
      325    * Verifica se existe um erro na rowErros com o c¢digo informado.
      326    */
      327   function containsError returns logical private (input table rowErrors,
      328                                                   input pErrorNumber as int).
      329   
      330       if can-find(first rowErrors where rowErrors.errorNumber = pErrorNumber) 
      331       then return yes.
      332       else return no.
      333   
      334   end function.
      335   
      336   /**
      337    * Remove o error passado por parmetro da rowErros.
      338    * Retorna true se um erro foi removido e false caso contr rio.
      339    */
      340   function removeError returns logical private (input-output table rowErrors,
      341                                                 input pErrorNumber as int). 
      342   
      343       find first rowErrors where rowErrors.errorNumber = pErrorNumber.
      344   
      345       if avail rowErrors
      346       then do:
      347              delete rowErrors.       
      348              return yes.
      349            end.
      350       else 
      351            do:
      352              return no.
      353            end.
      354   
      355   end function.
      356   
      357   procedure insertErrorProgress private:
      358       def input parameter pErrorParameters  as character no-undo.
      359       def input parameter pErrorHelp        as character no-undo.
      360   
      361       def input-output parameter table for rowErrors.
      362   
      363       def var iErrorSequence           as integer   no-undo.
      364       def var iErrors                  as integer   no-undo.
      365   
      366       if index (pErrorHelp, "/n", 1) <> 0 
      367       then do:
      368               assign pErrorHelp = replace (pErrorHelp, "/n", "\n").   
      369            end.
      370   
      371       if index(pErrorHelp, "/r", 1) <> 0
      372       then do:
      373               assign pErrorHelp = replace (pErrorHelp, "/r", "\r").
      374            end.
      375   
      376       if index(pErrorHelp, "/t", 1) <> 0
      377       then do:
      378               assign pErrorHelp = replace (pErrorHelp, "/t", "\t").
      379            end.
      380   
      381       do iErrors = 1 to error-status:num-messages:
      382           if can-find(last rowErrors) 
      383           then do:
      384                  find last rowErrors.
      385                  assign iErrorSequence = rowErrors.errorSequence + 1.
      386                end.
      387           else assign iErrorSequence = iErrorSequence + 1.
      388                   
      389           create rowErrors.
      390           assign rowErrors.errorSequence    = iErrorSequence
      391                  rowErrors.errorNumber      = ERROR-STATUS:GET-NUMBER(iErrors)
      392                  rowErrors.errorType        = "PROGRESS"
      393                  rowErrors.errorSubType     = "ERROR"
      394                  rowErrors.errorDescription = ERROR-STATUS:GET-MESSAGE(iErrors)
      395                  rowErrors.errorHelp        = pErrorHelp
      396                  rowErrors.errorParameters  = pErrorParameters.
      397   
      398           /**
      399            * Tratamento para nunca permitir que errorNumber fique com o valor zero, pois o Framework
      400            * provoca erro e perda de conexao com o appserver.
      401            */
      402           if rowErrors.errorNumber = 0
      403           then assign rowErrors.errorNumber = 1.
      404       end.
      405           
      406   end procedure.
      407   
      408   procedure insertErrorGP private:
      409       def input parameter pErrorNumber      as integer   no-undo.
      410       def input parameter pErrorParameters  as character no-undo.
      411       def input parameter pErrorHelp        as character no-undo.
      412   
      413       def input-output parameter table for rowErrors.
      414   
      415       def var iErrorSequence           as integer   no-undo.
      416       def var iErrors                  as integer   no-undo.
      417       def var errorDescription         as character no-undo.
      418       def var errorHelp                as character no-undo.
      419       def var errorSubType             as character no-undo.
      420   
      421       if index (pErrorHelp, "/n", 1) <> 0 
      422       then do:
      423               assign pErrorHelp = replace (pErrorHelp, "/n", "\n").   
      424            end.
      425   
      426       if index(pErrorHelp, "/r", 1) <> 0
      427       then do:
      428               assign pErrorHelp = replace (pErrorHelp, "/r", "\r").
      429            end.
      430   
      431       if index(pErrorHelp, "/t", 1) <> 0
      432       then do:
      433               assign pErrorHelp = replace (pErrorHelp, "/t", "\t").
      434            end.
      435   
      436       if pErrorNumber > 0
      437       then do:
      438              find mensiste
      439                   where mensiste.cd-mensagem = pErrorNumber
      440                         no-lock no-error.
      441              if   avail mensiste
      442              then do:
      443                     assign errorDescription = mensiste.ds-mensagem-sistema
      444                            errorHelp        = mensiste.ds-mensagem-detalhada
      445                            errorSubType     = mensiste.in-tipo-mensagem.
      446                   end.
      447              else do:
      448                     assign errorDescription   = "Mensagem nao cadastrada."
      449                            errorSubType       = "E".
      450                   end.
      451            end.
      452       else assign errorDescription   = ""
      453                   errorSubType       = "E".
      454   
      455       if can-find(last rowErrors) 
      456       then do:
      457              find last rowErrors.
      458              assign iErrorSequence = rowErrors.ErrorSequence + 1.
      459            end.
      460       else assign iErrorSequence = iErrorSequence + 1.
      461       
      462       create rowErrors.
      463       assign rowErrors.errorSequence    = iErrorSequence
      464              rowErrors.errorNumber      = pErrorNumber
      465              rowErrors.errorType        = "GP"
      466              rowErrors.errorSubType     = "ERROR"
      467              rowErrors.errorDescription = errorDescription
      468              rowErrors.errorParameters  = pErrorParameters.
      469   
      470       /**
      471        * Tratamento para nunca permitir que errorNumber fique com o valor zero, pois o Framework
      472        * provoca erro e perdade conexao com o appserver.
      473        */
      474       if rowErrors.errorNumber = 0
      475       then assign rowErrors.errorNumber = 1.
      476   
      477       if trim(pErrorHelp) <> "" 
      478       then assign rowErrors.errorHelp = pErrorHelp.
      479       else assign rowErrors.errorHelp = ErrorHelp.
      480   
      481       if rowErrors.errorHelp <> ""
      482       then rowErrors.errorHelp = rowErrors.errorHelp + chr(10).
      483   
      484       rowErrors.errorHelp = rowErrors.errorHelp + rowErrors.errorParameters.
      485   
      486   end procedure.
      487   
      488   procedure insertWarningGP private:
      489       def input parameter pErrorNumber      as integer   no-undo.
      490       def input parameter pErrorParameters  as character no-undo.
      491       def input parameter pErrorHelp        as character no-undo.
      492   
      493       def input-output parameter table for rowErrors.
      494   
      495       def var iErrorSequence           as integer   no-undo.
      496       def var iErrors                  as integer   no-undo.
      497       def var errorDescription         as character no-undo.
      498       def var errorHelp                as character no-undo.
      499       def var errorSubType             as character no-undo.
      500   
      501       find mensiste
      502            where mensiste.cd-mensagem = pErrorNumber
      503                  no-lock no-error.
      504       if   avail mensiste
      505       then do:
      506              assign errorDescription = mensiste.ds-mensagem-sistema
      507                     errorHelp        = mensiste.ds-mensagem-detalhada
      508                     errorSubType     = mensiste.in-tipo-mensagem.
      509            end.
      510       else do:
      511              assign errorDescription   = "Mensagem nao cadastrada."
      512                     errorSubType       = "W".
      513            end.
      514   
      515       if can-find(last rowErrors) 
      516       then do:
      517              find last rowErrors.
      518              assign iErrorSequence = rowErrors.ErrorSequence + 1.
      519            end.
      520       else assign iErrorSequence = iErrorSequence + 1.
      521       
      522       create rowErrors.
      523       assign rowErrors.errorSequence    = iErrorSequence
      524              rowErrors.errorNumber      = pErrorNumber
      525              rowErrors.errorType        = "GP"
      526              rowErrors.errorSubType     = "WARNING"
      527              rowErrors.errorDescription = errorDescription
      528              rowErrors.errorParameters  = pErrorParameters.
      529   
      530       /**
      531        * Tratamento para nunca permitir que errorNumber fique com o valor zero, pois o Framework
      532        * provoca erro e perdade conexao com o appserver.
      533        */
      534       if rowErrors.errorNumber = 0
      535       then assign rowErrors.errorNumber = 1.
      536   
      537       if trim(pErrorHelp) <> "" 
      538       then assign rowErrors.errorHelp = pErrorHelp.
      539       else assign rowErrors.errorHelp = ErrorHelp.
      540   
      541       if rowErrors.errorHelp <> ""
      542       then rowErrors.errorHelp = rowErrors.errorHelp + chr(10).
      543   
      544       rowErrors.errorHelp = rowErrors.errorHelp + rowErrors.errorParameters.
      545   
      546   end procedure.
      547   
      548   procedure insertInfoGP private:
      549       def input parameter pErrorNumber      as integer   no-undo.
      550       def input parameter pErrorParameters  as character no-undo.
      551       def input parameter pErrorHelp        as character no-undo.
      552   
      553       def input-output parameter table for rowErrors.
      554   
      555       def var iErrorSequence           as integer   no-undo.
      556       def var iErrors                  as integer   no-undo.
      557       def var errorDescription         as character no-undo.
      558       def var errorHelp                as character no-undo.
      559       def var errorSubType             as character no-undo.
      560   
      561       find mensiste
      562            where mensiste.cd-mensagem = pErrorNumber
      563                  no-lock no-error.
      564       if   avail mensiste
      565       then do:
      566              assign errorDescription = mensiste.ds-mensagem-sistema
      567                     errorHelp        = mensiste.ds-mensagem-detalhada
      568                     errorSubType     = mensiste.in-tipo-mensagem.
      569            end.
      570       else do:
      571              assign errorDescription   = "Mensagem nao cadastrada."
      572                     errorSubType       = "I".
      573            end.
      574   
      575       if can-find(last rowErrors) 
      576       then do:
      577              find last rowErrors.
      578              assign iErrorSequence = rowErrors.ErrorSequence + 1.
      579            end.
      580       else assign iErrorSequence = iErrorSequence + 1.
      581       
      582       create rowErrors.
      583       assign rowErrors.errorSequence    = iErrorSequence
      584              rowErrors.errorNumber      = pErrorNumber
      585              rowErrors.errorType        = "GP"
      586              rowErrors.errorSubType     = "INFORMATION"
      587              rowErrors.errorDescription = errorDescription
      588              rowErrors.errorParameters  = pErrorParameters.
      589   
      590       /**
      591        * Tratamento para nunca permitir que errorNumber fique com o valor zero, pois o Framework
      592        * provoca erro e perdade conexao com o appserver.
      593        */
      594       if rowErrors.errorNumber = 0
      595       then assign rowErrors.errorNumber = 1.
      596   
      597       if trim(pErrorHelp) <> "" 
      598       then assign rowErrors.errorHelp = pErrorHelp.
      599       else assign rowErrors.errorHelp = ErrorHelp.
      600   
      601       if rowErrors.errorHelp <> ""
      602       then rowErrors.errorHelp = rowErrors.errorHelp + chr(10).
      603   
      604       rowErrors.errorHelp = rowErrors.errorHelp + rowErrors.errorParameters.
      605   
      606   end procedure.
      607   
      608   procedure insertOtherError private:
      609   
      610       def input parameter pErrorNumber      as integer   no-undo.
      611       def input parameter pErrorDescription as character no-undo.
      612       def input parameter pErrorParameters  as character no-undo.
      613       def input parameter pErrorType        as character no-undo.
      614       def input parameter pErrorSubType     as character no-undo.
      615       def input parameter pErrorHelp        as character no-undo.
      616   
      617       def input-output parameter table for rowErrors.
      618       
      619       def var iErrorSequence           as integer   no-undo.
      620   
      621       if can-find(last rowErrors) 
      622       then do:
      623              find last rowErrors.
      624              assign iErrorSequence = rowErrors.ErrorSequence + 1.
      625            end.
      626       else do:
      627              assign iErrorSequence = iErrorSequence + 1.
      628            end.
      629       
      630       create rowErrors.
      631       assign rowErrors.errorSequence    = iErrorSequence
      632              rowErrors.errorNumber      = pErrorNumber
      633              rowErrors.errorType        = pErrorType
      634              rowErrors.errorSubType     = pErrorSubType
      635              rowErrors.errorDescription = pErrorDescription
      636              rowErrors.errorHelp        = pErrorHelp
      637              rowErrors.errorParameters  = pErrorParameters.
      638   
      639       /**
      640        * Tratamento para nunca permitir que errorNumber fique com o valor zero, pois o Framework
      641        * provoca erro e perdade conexao com o appserver.
      642        */
      643       if rowErrors.errorNumber = 0
      644       then assign rowErrors.errorNumber = 1.
      645   
      646       if rowErrors.errorHelp <> ""
      647       then rowErrors.errorHelp = rowErrors.errorHelp + chr(10).
      648   
      649       rowErrors.errorHelp = rowErrors.errorHelp + rowErrors.errorParameters.
      650   
      651       return "OK".
      652   
      653   end procedure.
      654   
      655   
      656   /**
      657    * Verifica todas as mensagem inclu¡das na rowErros que possuem o c¢digo do
      658    * erro informada e que possuem o subtipo igual a 'ERROR' e troca o mesmo
      659    * para 'WARNING' evitando dessa forma que o processamento seja interrompido
      660    * e nenhum informaÆo seja retornada ao usu rio.
      661    */
      662   procedure changeErrorToWarning private:
      663       def input parameter pErrorNumber      as integer   no-undo.
      664       def input-output parameter table for rowErrors.
      665   
      666       for each rowErrors where rowErrors.errorNumber = pErrorNumber 
      667                            and rowErrors.errorSubType = "ERROR" 
      668                                exclusive-lock:
      669   
      670           assign rowErrors.errorSubType = "WARNING".
      671       end.
      672           
      673   end procedure.
      674   
      675   
      676   /**
      677    * Transforma todos os erros em warnings
      678    */
      679   procedure changeAllErrorsToWarnings private:
      680       def input-output parameter table for rowErrors.
      681   
      682       for each rowErrors where rowErrors.errorSubType = "ERROR" 
      683                                exclusive-lock:
      684           assign rowErrors.errorSubType = "WARNING".
      685       end.
      686           
      687   end procedure.
      688   
      689   /**
      690    * Verifica todas as mensagem inclu¡das na rowErros que possuem o c¢digo do
      691    * erro informada e que possuem o subtipo igual a 'ERROR' e troca o mesmo
      692    * para 'INFORMATION' evitando dessa forma que o processamento seja 
      693    * interrompido e nenhum informaÆo seja retornada ao usu rio.
      694    */
      695   procedure changeErrorToInformation private:
      696       def input parameter pErrorNumber      as integer   no-undo.
      697       def input-output parameter table for rowErrors.
      698   
      699       for each rowErrors where rowErrors.errorNumber = pErrorNumber 
      700                            and rowErrors.errorSubType = "ERROR" 
      701                                exclusive-lock:
      702   
      703           assign rowErrors.errorSubType = "INFORMATION".
      704       end.
      705           
      706           
      707   end procedure.
      708   
      709   /**
      710    * Metodo chamado pelo modulo Auditoria Medica, que foi incorporado ao produto.
      711    */
      712   procedure insertError private:
      713   
      714       def input parameter pErrorNumber      as integer   no-undo.
      715       def input parameter pErrorDescription as character no-undo.
      716       def input parameter pErrorParameters  as character no-undo.
      717       def input parameter pErrorType        as character no-undo.
      718       def input parameter pErrorSubType     as character no-undo.
      719       def input parameter pErrorHelp        as character no-undo.
      720   
      721       def input-output parameter table for rowErrors.
      722       
      723       def var iErrorSequence           as integer   no-undo.
      724       def var iErrors                  as integer   no-undo.
      725       def var errorDescription         as character no-undo.
      726       def var errorSubType             as character no-undo.
      727   
      728       case pErrorType:
      729           
      730           when "PROGRESS" 
      731           then run insertErrorProgress(input pErrorParameters,
      732                                        input pErrorHelp,
      733                                        input-output table rowErrors).
      734   
      735           when "GP"
      736           then run insertErrorGP(input pErrorNumber,
      737                                  input pErrorParameters,
      738                                  input pErrorHelp,
      739                                  input-output table rowErrors).
      740   
      741           otherwise run insertOtherError(input pErrorNumber,
      742                                          input pErrorDescription,
      743                                          input pErrorParameters,
      744                                          input pErrorType,
      745                                          input pErrorSubType,
      746                                          input pErrorHelp,
      747                                          input-output table rowErrors).
      748       end.
      749       
      750       return "OK".
      751   
      752   end procedure.
      753   
      754   /* ------------------------------------------------------------------ EOF ----------------------- */
      755   
      756   DEF     SHARED VAR qt-cont-sair-aux AS INT NO-UNDO.
      757   
      758   /* ------------------------------------------------------------------------------------------------------ */
      759   PROCEDURE cria-registros:
      760   
      761       FOR FIRST paravpmc NO-LOCK:
      762       END.
      763       IF NOT AVAIL paravpmc
      764       THEN DO:
      765              run pi-grava-erro ("Parametros VP/MC nao cadastrados").
      766              lg-relat-erro-aux = YES.
      767            END.
      768   
      769       l-inclusao:
      770       do on error undo, retry:
      771       
      772          FOR EACH tt-import-propost EXCLUSIVE-LOCK,
      773             FIRST b-import-propost WHERE ROWID (b-import-propost) = tt-import-propost.rowid-import-prop EXCLUSIVE-LOCK:
      774   
      775              ASSIGN nro-seq-aux       = 0
      776                     lg-relat-erro-aux = NO.
      777       
      778              FOR FIRST bbb-import-propost
      779                   where bbb-import-propost.ind-sit-import     = "RP"
      780                     and bbb-import-propost.cd-modalidade      = b-import-propost.cd-modalidade
      781                     and bbb-import-propost.nr-contrato-antigo = b-import-propost.nr-contrato-antigo
      782                         exclusive-lock: 
      783              END.
      784              if avail bbb-import-propost
      785              then do:
      786                     assign nr-proposta-aux = int(bbb-import-propost.cod-livre-6).
      787                     delete bbb-import-propost.
      788                   end.
      789              else do:
      790                     /**
      791                      * 23/03/2016 - Alex Boeira
      792                      * Se num-livre-10 estiver preenchido, usar para nr-proposta.
      793                      * Caso contrario, gerar normalmente pela regra antiga.
      794                      */
      795                     ASSIGN nr-proposta-aux = 0.
      796   
      797                     IF  b-import-propost.num-livre-10 <> 0
      798                     AND b-import-propost.num-livre-10 <> ?
      799                     THEN do:
      800                            ASSIGN nr-proposta-aux = b-import-propost.num-livre-10.
      801                            IF CAN-FIND(FIRST b-propost
      802                                        WHERE b-propost.cd-modalidade = b-import-propost.cd-modalidade
      803                                          AND b-propost.nr-proposta   = nr-proposta-aux)
      804                            THEN DO:
      805                                   run pi-grava-erro ("Ja existe proposta com Modalidade " + string(b-import-propost.cd-modalidade) +
      806                                                      " e Nr.Proposta " + STRING(nr-proposta-aux)).
      807                                   lg-relat-erro-aux = YES.
      808                                   NEXT.
      809                                 END.
      810                          END.
      811   
      812                     /**
      813                      * 21/03/2016 - Alex Boeira
      814                      * Retirei deste ponto a logica de geracao do nr da proposta
      815                      * e implementei dentro do metodo cria-proposta, pois estava
      816                      * causando erro de tentativa de duplicar a chave ao executar
      817                      * esse processo em mais de uma sessao simultanea.
      818                      
      819                             for last b-propost fields (nr-proposta) use-index propos2 
      820                            where b-propost.cd-modalidade = b-import-propost.cd-modalidade exclusive-lock:
      821                             end.
      822                             if   available b-propost
      823                             then assign nr-proposta-aux = b-propost.nr-proposta + 1.
      824                             else assign nr-proposta-aux = 1.
      825                     */
      826                   end.
      827              
      828              ASSIGN qt-cont-sair-aux = qt-cont-sair-aux + 1.
      829   
      830              IF lg-relat-erro-aux
      831              THEN do:
      832                     DELETE tt-import-propost.
      833                     NEXT.
      834                   END.
      835   
      836              RUN cria-proposta.
      837       
      838              IF lg-relat-erro-aux
      839              THEN do:
      840                     RUN remover.
      841                     DELETE tt-import-propost.
      842                     NEXT.
      843                   END.
      844   
      845              /* --- MODULOS PROPOSTA ---------------------------------- */
      846              ASSIGN lg-relat-erro-aux = NO.
      847       
      848              IF lg-registro-modulos
      849              THEN RUN cria-modulos.
      850       
      851              IF lg-relat-erro-aux
      852              THEN do:
      853                     RUN remover.
      854                     DELETE tt-import-propost.
      855                     NEXT.
      856                   END.
      857       
      858              /* --- FAIXAS PROPOSTA ----------------------------------- */
      859              ASSIGN lg-relat-erro-aux = NO.
      860                  
      861              IF  lg-registro-faixa
      862              AND b-import-propost.ind-faixa-etaria-especial <> "N"
      863              THEN RUN cria-faixas.
      864   
      865              RUN cria-lotacao.
      866   
      867              IF lg-relat-erro-aux
      868              THEN do:
      869                     RUN remover.
      870                     DELETE tt-import-propost.
      871                     NEXT.
      872                   END.
      873       
      874              /* --- NEGOCIACOES REPASSE ------------------------------- */
      875              IF lg-registro-negociacao
      876              THEN RUN cria-negoc-repas.
      877       
      878              /* --- COBERTURA PROPOSTA -------------------------------- */
      879              IF lg-registro-cobertura
      880              THEN RUN cria-cobertura.
      881       
      882              /* --- CAMPOS ESPECIFICOS -------------------------------- */
      883              IF lg-registro-especifico
      884              THEN RUN cria-campos-espec.
      885       
      886              /* --- PROCEDIMENTOS PROPOSTA ---------------------------- */
      887              ASSIGN lg-relat-erro-aux = NO.
      888       
      889              IF lg-registro-procedimento
      890              THEN RUN cria-proced-propost.
      891       
      892              IF lg-relat-erro-aux
      893              THEN do:
      894                     RUN remover.
      895                     DELETE tt-import-propost.
      896                     NEXT.
      897                   END.
      898       
      899              /* --- MEDICINA OCUPACIONAL ------------------------------ */
      900              IF lg-ver-imp8
      901              THEN RUN cria-mo.
      902       
      903              /* --- MEDICINA OCUPACIONAL FUNCAO------------------------ */
      904              IF lg-ver-imp9
      905              THEN RUN cria-mo-funcao.
      906       
      907              ASSIGN b-import-propost.ind-sit-import = "IT".
      908                     
      909              VALIDATE b-import-propost.
      910              RELEASE  b-import-propost.
      911              
      912              DELETE tt-import-propost.
      913       
      914          END.
      915       END.
      916   
      917   
      918   END PROCEDURE.
      919   
      920   /* ------------------------------------------------------------------------------------------- */
      921   /*
      922   procedure modulo-padrao.
      923   
      924       if   b-import-propost.cd-forma-pagto = 1
      925       or   b-import-propost.cd-forma-pagto = 2
      926       then do:
      927              for each pla-mod where pla-mod.cd-modalidade = b-import-propost.cd-modalidade
      928                                 and pla-mod.cd-plano      = b-import-propost.cd-plano
      929                                 and pla-mod.cd-tipo-plano = b-import-propost.cd-tipo-plano
      930                                     no-lock:
      931                  if   pla-mod.lg-obrigatorio
      932                  then do:
      933                         find first pro-pla use-index pro-pla3
      934                              where pro-pla.cd-modalidade = b-import-propost.cd-modalidade
      935                                and pro-pla.nr-proposta = nr-proposta-aux
      936                                and pro-pla.cd-modulo   = pla-mod.cd-modulo
      937                                    no-lock no-error.
      938                         if   not avail pro-pla
      939                         then do:
      940                                find tabpremo where tabpremo.cd-modalidade = b-import-propost.cd-modalidade
      941                                                and tabpremo.cd-plano      = b-import-propost.cd-plano
      942                                                and tabpremo.cd-tipo-plano = b-import-propost.cd-tipo-plano
      943                                                and tabpremo.cd-modulo     = pla-mod.cd-modulo
      944                                                and tabpremo.cd-tab-preco  = b-import-propost.cd-tab-preco
      945                                                    no-lock no-error.
      946                                if   not avail tabpremo
      947                                then do:
      948                                       assign lg-relat-erro = yes
      949                                              lg-retorna    = yes.
      950                                       run pi-grava-erro (input b-import-propost.num-seqcial-control,
      951                                                          input "PR -b-import-propost",
      952                                                          input "Tabela de Preco dos modulos nao cadastrada " + substring(b-import-propost.cd-tab-preco,1,3) + 
      953                                                                "/" + substring(b-import-propost.cd-tab-preco,4,2)  + 
      954                                                                "Mod: "    + string(b-import-propost.cd-modalidade) + 
      955                                                                "Plano: "  + string(b-import-propost.cd-plano)      + 
      956                                                                "Tipo: "   + string(b-import-propost.cd-tipo-plano) + 
      957                                                                "Modulo: " + string(pla-mod.cd-modulo),
      958                                                          input "ER").
      959                                       return.
      960                                     end.
      961                                find mod-cob where mod-cob.cd-modulo = pla-mod.cd-modulo no-lock no-error.
      962                                if not avail mod-cob
      963                                then do:
      964                                       assign lg-relat-erro = yes
      965                                              lg-retorna    = yes.
      966                                       run pi-grava-erro (input b-import-propost.num-seqcial-control,
      967                                                          input "PR -b-import-propost",
      968                                                          input "Modulo nao Cadastrado - Modulo: " + string(pro-pla.cd-modulo,"999"),
      969                                                          input "ER").
      970                                       return.
      971                                     end.                                  
      972              
      973                                create pro-pla.
      974                                assign pro-pla.cd-modalidade           = b-import-propost.cd-modalidade
      975                                       pro-pla.cd-plano                = b-import-propost.cd-plano
      976                                       pro-pla.cd-tipo-plano           = b-import-propost.cd-tipo-plano
      977                                       pro-pla.cd-modulo               = pla-mod.cd-modulo
      978                                       pro-pla.nr-proposta             = nr-proposta-aux
      979                                       pro-pla.cd-forma-pagto          = b-import-propost.cd-forma-pagto
      980                                       pro-pla.lg-carencia             = yes
      981                                       pro-pla.lg-cobertura-obrigato   = yes
      982                                       pro-pla.in-ctrl-carencia-proced = mod-cob.in-ctrl-carencia-proced
      983                                       pro-pla.in-ctrl-carencia-insumo = mod-cob.in-ctrl-carencia-insumo
      984                                       pro-pla.dt-inicio               = b-import-propost.dat-propost
      985                                       pro-pla.dt-cancelamento         = b-import-propost.dat-fim-propost
      986                                       pro-pla.dt-fim                  = b-import-propost.dat-fim-propost
      987                                       pro-pla.in-cobra-participacao   = pla-mod.in-cobra-participacao
      988                                       pro-pla.in-responsavel-autori   = pla-mod.in-responsavel-autorizacao
      989                                       pro-pla.dt-atualizacao          = today
      990                                       pro-pla.cd-userid               = v_cod_usuar_corren
      991                                       pro-pla.dt-mov-inclusao         = today
      992                                       pro-pla.cd-userid-inclusao      = v_cod_usuar_corren.
      993   
      994                                if mod-cob.in-ctrl-carencia-proced = 1
      995                                or mod-cob.in-ctrl-carencia-insumo = 1
      996                                then assign pro-pla.qt-caren-eletiva  = pla-mod.qt-caren-eletiva
      997                                            pro-pla.qt-caren-urgencia = pla-mod.qt-caren-urgencia.
      998                                else assign pro-pla.qt-caren-eletiva  = 0 
      999                                            pro-pla.qt-caren-urgencia = 0.
     1000              
     1001                                if   b-import-propost.dat-fim-propost = ?
     1002                                then.
     1003                                else assign pro-pla.dt-mov-exclusao = today
     1004                                            pro-pla.cd-userid-exclusao
     1005                                                     = v_cod_usuar_corren.
     1006              
     1007                                assign lg-plano-aux = yes.
     1008                              end.
     1009                        end.
     1010              end.
     1011            end. /*  tipo de pagto = 1 ou 2  */
     1012    
     1013    
     1014       if   b-import-propost.cd-forma-pagto = 3
     1015       then do:
     1016              for each pla-mod 
     1017                 where pla-mod.cd-modalidade = b-import-propost.cd-modalidade
     1018                   and pla-mod.cd-plano      = b-import-propost.cd-plano
     1019                   and pla-mod.cd-tipo-plano = b-import-propost.cd-tipo-plano   
     1020                       no-lock:
     1021        
     1022                  if   pla-mod.lg-obrigatorio
     1023                  then do:
     1024                         find plamofor where plamofor.cd-modalidade  = b-import-propost.cd-modalidade
     1025                                          and plamofor.cd-plano      = b-import-propost.cd-plano
     1026                                          and plamofor.cd-tipo-plano = b-import-propost.cd-tipo-plano
     1027                                          and plamofor.cd-modulo     = pla-mod.cd-modulo
     1028                                              no-lock no-error.
     1029                         if   avail plamofor
     1030                         then do:
     1031                              find first pro-pla use-index pro-pla3
     1032                                   where pro-pla.cd-modalidade = b-import-propost.cd-modalidade
     1033                                     and pro-pla.nr-proposta   = nr-proposta-aux
     1034                                     and pro-pla.cd-modulo     = plamofor.cd-modulo
     1035                                         no-lock no-error.
     1036                              if   not avail pro-pla
     1037                              then do:
     1038                                     find tabpremo where tabpremo.cd-modalidade   = b-import-propost.cd-modalidade
     1039                                                     and tabpremo.cd-plano      = b-import-propost.cd-plano
     1040                                                     and tabpremo.cd-tipo-plano = b-import-propost.cd-tipo-plano
     1041                                                     and tabpremo.cd-modulo     = pla-mod.cd-modulo
     1042                                                     and tabpremo.cd-tab-preco  = b-import-propost.cd-tab-preco
     1043                                                         no-lock no-error.
     1044                                     if   not avail tabpremo
     1045                                     then do:
     1046                                            assign lg-relat-erro = yes
     1047                                                   lg-retorna    = yes.
     1048                                            run pi-grava-erro (input b-import-propost.num-seqcial-control,
     1049                                                               input "PR -b-import-propost",
     1050                                                               input "Tabela de Preco dos modulos nao cadastrada " + substring(b-import-propost.cd-tab-preco,1,3) + 
     1051                                                                     "/" + substring(b-import-propost.cd-tab-preco,4,2)   + 
     1052                                                                     "Mod: "    +  string(b-import-propost.cd-modalidade) + 
     1053                                                                     "Plano: "  +  string(b-import-propost.cd-plano)      + 
     1054                                                                     "Tipo: "   +  string(b-import-propost.cd-tipo-plano) + 
     1055                                                                     "modulo: " +  string(pla-mod.cd-modulo),
     1056                                                               input "ER").
     1057                                            return.
     1058                                          end.
     1059                                     find mod-cob where mod-cob.cd-modulo = pla-mod.cd-modulo no-lock no-error.
     1060                                     if not avail mod-cob
     1061                                     then do:
     1062                                            assign lg-relat-erro = yes
     1063                                                   lg-retorna    = yes.
     1064                                            run pi-grava-erro (input b-import-propost.num-seqcial-control,
     1065                                                               input "PR -b-import-propost",
     1066                                                               input "Modulo nao Cadastrado - Modulo: " + string(pro-pla.cd-modulo,"999"),
     1067                                                               input "ER").
     1068                                            return.
     1069                                          end.
     1070                                     
     1071                                     create pro-pla.
     1072                                     assign pro-pla.cd-modalidade            = b-import-propost.cd-modalidade
     1073                                            pro-pla.cd-plano                 = b-import-propost.cd-plano
     1074                                            pro-pla.cd-tipo-plano            = b-import-propost.cd-tipo-plano
     1075                                            pro-pla.cd-modulo                = plamofor.cd-modulo
     1076                                            pro-pla.nr-proposta              = nr-proposta-aux
     1077                                            pro-pla.cd-forma-pagto           = plamofor.cd-forma-pagto
     1078                                            pro-pla.lg-carencia              = yes
     1079                                            pro-pla.lg-cobertura-obrigatoria = yes
     1080                                            pro-pla.in-ctrl-carencia-proced  = mod-cob.in-ctrl-carencia-proced
     1081                                            pro-pla.in-ctrl-carencia-insumo  = mod-cob.in-ctrl-carencia-insumo
     1082                                            pro-pla.qt-caren-eletiva         = pla-mod.qt-caren-eletiva
     1083                                            pro-pla.qt-caren-urgencia        = pla-mod.qt-caren-urgencia
     1084                                            pro-pla.in-cobra-participacao    = pla-mod.in-cobra-participacao
     1085                                            pro-pla.in-responsavel-autori    = pla-mod.in-responsavel-autorizacao
     1086                                            pro-pla.dt-inicio                = b-import-propost.dat-propost
     1087                                            pro-pla.dt-cancelamento          = b-import-propost.dat-fim-propost
     1088                                            pro-pla.dt-fim                   = b-import-propost.dat-fim-propost
     1089                                            pro-pla.dt-atualizacao           = today
     1090                                            pro-pla.cd-userid                = v_cod_usuar_corren
     1091                                            pro-pla.dt-mov-inclusao          = today
     1092                                            pro-pla.cd-userid-inclusao       = v_cod_usuar_corren.
     1093   
     1094                                      if   b-import-propost.dat-fim-propost = ?
     1095                                      then.
     1096                                      else assign pro-pla.dt-mov-exclusao    = today
     1097                                                  pro-pla.cd-userid-exclusao = v_cod_usuar_corren.
     1098                                      assign lg-plano-aux = yes.
     1099                                    end.
     1100                               end.
     1101                         end.
     1102              end.   /*  for each   */
     1103          end.  /* forma de pagto = 3 */
     1104    
     1105   end.*/
     1106   
     1107   PROCEDURE cria-proposta:
     1108       DEF BUFFER b-ter-ade FOR ter-ade.
     1109       DEF VAR lg-validar-nr-proposta-aux AS LOG INIT NO NO-UNDO.
     1110   
     1111       ASSIGN lg-relat-erro-aux = NO.
     1112   
     1113       find modalid where modalid.cd-modalidade = b-import-propost.cd-modalidade no-lock no-error.
     1114   
     1115       for last b-propost fields (nr-proposta) use-index propos8 
     1116          where b-propost.cd-modalidade       = b-import-propost.cd-modalidade
     1117            and b-propost.nr-insc-contratante = tt-import-propost.nr-insc-contrat no-lock:
     1118       end.
     1119       if   available b-propost
     1120       then assign nr-proposta-anterior-aux = b-propost.nr-proposta.
     1121       else assign nr-proposta-anterior-aux = 0.
     1122   
     1123       if b-import-propost.in-registro-plano = 1
     1124       then do:
     1125              if b-import-propost.cd-registro-plano <> 0
     1126              then for first reg-plano-saude fields(idi-registro)
     1127                       where reg-plano-saude.cdn-plano-ans = b-import-propost.cd-registro-plano 
     1128                             no-lock query-tuning(no-index-hint): 
     1129                   end.
     1130              else for first reg-plano-saude fields(idi-registro)
     1131                       where reg-plano-saude.cod-plano-operadora    = b-import-propost.cd-plano-operadora 
     1132                         and reg-plano-saude.in-tipo-regulamentacao = b-import-propost.num-livre-8
     1133                             no-lock query-tuning (no-index-hint): 
     1134                   end.
     1135            end.
     1136       
     1137       /**
     1138        * Se chegou nesse ponto com nr-proposta-aux <> 0, significa que o numero
     1139        * ja foi definido e nao deve ser alterado.
     1140        */
     1141       if nr-proposta-aux = 0
     1142       then do:
     1143              for last b-propost fields (nr-proposta) use-index propos2 
     1144                 where b-propost.cd-modalidade = b-import-propost.cd-modalidade no-lock:
     1145              end.
     1146              if   available b-propost
     1147              then assign nr-proposta-aux = b-propost.nr-proposta + 1.
     1148              else assign nr-proposta-aux = 1.
     1149   
     1150              assign lg-validar-nr-proposta-aux = yes.
     1151            end.
     1152   
     1153       /** 
     1154        * Gerar numero da proxima proposta.
     1155        */
     1156       create propost.
     1157   
     1158       if lg-validar-nr-proposta-aux
     1159       then do:
     1160              repeat:
     1161                  assign propost.cd-modalidade = b-import-propost.cd-modalidade
     1162                         propost.nr-proposta   = nr-proposta-aux no-error.
     1163                  validate propost no-error.
     1164                  if error-status:error 
     1165                  or error-status:num-messages > 0
     1166                  then do:
     1167                         pause(1). /* aguarda 1seg e busca novamente o proximo nr livre.*/
     1168                  
     1169                         for last b-propost fields (nr-proposta) use-index propos2 
     1170                            where b-propost.cd-modalidade = b-import-propost.cd-modalidade no-lock:
     1171                         end.
     1172                         if   available b-propost
     1173                         then assign nr-proposta-aux = b-propost.nr-proposta + 1.
     1174                         else assign nr-proposta-aux = 1.
     1175                       end.
     1176                  else leave.    /* o nr gerado eh valido. continua o processo.*/
     1177              end.
     1178            end.
     1179       else assign propost.cd-modalidade        = b-import-propost.cd-modalidade
     1180                   propost.nr-proposta          = nr-proposta-aux.
     1181   
     1182       assign propost.vl-proposta-migracao = b-import-propost.val-propost-migrac
     1183              propost.mm-ult-reajuste      = b-import-propost.num-mm-ult-reaj
     1184              propost.aa-ult-reajuste      = b-import-propost.aa-ult-reajuste
     1185              propost.pc-ult-reajuste      = b-import-propost.pc-ult-reajuste / 100
     1186              propost.idi-plano-ans        = if avail reg-plano-saude then reg-plano-saude.idi-registro else 0.
     1187   
     1188       for first for-pag fields (tp-vencimento 
     1189                                 dd-faturamento 
     1190                                 lg-trata-inadimplencia-rc
     1191                                 cd-classe-mens)
     1192           where for-pag.cd-modalidade  = b-import-propost.cd-modalidade
     1193             and for-pag.cd-plano       = b-import-propost.cd-plano
     1194             and for-pag.cd-tipo-plano  = b-import-propost.cd-tipo-plano
     1195             and for-pag.cd-forma-pagto = b-import-propost.cd-forma-pagto 
     1196                 no-lock query-tuning (no-index-hint):
     1197       end.
     1198       
     1199       /* ----------------------------------------- INDICADOR INADIMPLENCIA --- */
     1200       if avail for-pag
     1201       and      for-pag.lg-trata-inadimplencia-rc
     1202       then assign propost.in-trata-inadimplencia = 00. /* ---------- TRATA --- */
     1203       else assign propost.in-trata-inadimplencia = 01. /* ------ NAO TRATA --- */
     1204       
     1205       if   avail paramecp
     1206       then assign propost.ep-codigo   = paramecp.ep-codigo
     1207                   propost.cod-estabel = paramecp.cod-estabel
     1208                   propost.cd-unimed   = paramecp.cd-unimed.
     1209   
     1210       if b-import-propost.ind-faixa-etaria-especial <> "" 
     1211       and not can-find (first import-faixa-propost where import-faixa-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost)
     1212       then DO:
     1213              /* -------------------------------- FAIXA ESPECIAL PELA ESTRUTURA --- */
     1214              if b-import-propost.ind-faixa-etaria-especial = "S"
     1215              then for each pl-gr-pa fields (cd-grau-parentesco nr-faixa-etaria nr-idade-minima nr-idade-maxima qt-fator-multiplicador qt-fat-mult-inscr lg-inclusao)
     1216                      where pl-gr-pa.cd-modalidade = b-import-propost.cd-modalidade
     1217                        and pl-gr-pa.cd-plano      = b-import-propost.cd-plano
     1218                        and pl-gr-pa.cd-tipo-plano = b-import-propost.cd-tipo-plano
     1219                        and pl-gr-pa.lg-inclusao no-lock query-tuning(no-index-hint):
     1220                     
     1221                       if not can-find (first teadgrpa 
     1222                                        where teadgrpa.cd-modalidade      = b-import-propost.cd-modalidade
     1223                                          and teadgrpa.nr-proposta        = nr-proposta-aux
     1224                                          and teadgrpa.cd-grau-parentesco = pl-gr-pa.cd-grau-parentesco
     1225                                          and teadgrpa.nr-faixa-etaria    = pl-gr-pa.nr-faixa-etaria)
     1226                       then do:
     1227                              create teadgrpa.
     1228                              assign teadgrpa.cd-modalidade          = b-import-propost.cd-modalidade
     1229                                     teadgrpa.nr-proposta            = nr-proposta-aux
     1230                                     teadgrpa.cd-grau-parentesco     = pl-gr-pa.cd-grau-parentesco
     1231                                     teadgrpa.nr-faixa-etaria        = pl-gr-pa.nr-faixa-etaria
     1232                                     teadgrpa.nr-idade-minima        = pl-gr-pa.nr-idade-minima
     1233                                     teadgrpa.nr-idade-maxima        = pl-gr-pa.nr-idade-maxima
     1234                                     teadgrpa.qt-fator-multiplicador = pl-gr-pa.qt-fator-multiplicador
     1235                                     teadgrpa.qt-fat-mult-inscr      = pl-gr-pa.qt-fat-mult-inscr
     1236                                     teadgrpa.lg-inclusao            = pl-gr-pa.lg-inclusao
     1237                                     teadgrpa.dt-atualizacao         = today.
     1238                                     teadgrpa.cd-userid              = v_cod_usuar_corren.
     1239                            end.
     1240                   end.
     1241   
     1242              /* ------------------------------- FAIXA ESPECIAL PELO CONVENIO ---
     1243               * O extrator do Unicoo nunca envia esse parametro como "C". A regra foi preservada
     1244               * para migracoes de outros sistemas.
     1245               */
     1246              if b-import-propost.ind-faixa-etaria-especial = "C"
     1247              then for each fxetconv FIELDS (cd-grau-parentesco nr-faixa-etaria nr-idade-minima nr-idade-maxima qt-fator-multiplicador qt-fat-mult-inscr lg-inclusao)
     1248                      where fxetconv.cd-convenio    = b-import-propost.cd-convenio
     1249                        and fxetconv.cd-modalidade  = b-import-propost.cd-modalidade
     1250                        and fxetconv.cd-plano       = b-import-propost.cd-plano
     1251                        and fxetconv.cd-tipo-plano  = b-import-propost.cd-tipo-plano
     1252                        and fxetconv.lg-inclusao NO-LOCK query-tuning(no-index-hint): 
     1253              
     1254                       IF NOT CAN-FIND (first teadgrpa 
     1255                                        where teadgrpa.cd-modalidade      = b-import-propost.cd-modalidade
     1256                                          and teadgrpa.nr-proposta        = nr-proposta-aux
     1257                                          and teadgrpa.cd-grau-parentesco = fxetconv.cd-grau-parentesco
     1258                                          and teadgrpa.nr-faixa-etaria    = fxetconv.nr-faixa-etaria)
     1259                       then do:
     1260                              create teadgrpa.
     1261                              assign teadgrpa.cd-modalidade          = b-import-propost.cd-modalidade
     1262                                     teadgrpa.nr-proposta            = nr-proposta-aux
     1263                                     teadgrpa.cd-grau-parentesco     = fxetconv.cd-grau-parentesco
     1264                                     teadgrpa.nr-faixa-etaria        = fxetconv.nr-faixa-etaria
     1265                                     teadgrpa.nr-idade-minima        = fxetconv.nr-idade-minima
     1266                                     teadgrpa.nr-idade-maxima        = fxetconv.nr-idade-maxima
     1267                                     teadgrpa.qt-fator-multiplicador = fxetconv.qt-fator-multiplicador
     1268                                     teadgrpa.qt-fat-mult-inscr      = fxetconv.qt-fat-mult-inscr
     1269                                     teadgrpa.lg-inclusao            = fxetconv.lg-inclusao
     1270                                     teadgrpa.dt-atualizacao         = today.
     1271                                     teadgrpa.cd-userid              = v_cod_usuar_corren.
     1272                            end.
     1273                   end. 
     1274            end.
     1275   
     1276       release contrat.
     1277   
     1278       if b-import-propost.nr-insc-contratante <> 0
     1279       then for first contrat fields (cd-contratante nr-insc-contratante lg-tem-proposta) 
     1280                where contrat.nr-insc-contratante = b-import-propost.nr-insc-contratante 
     1281                      exclusive-lock query-tuning (no-index-hint):
     1282   
     1283                assign contrat.lg-tem-proposta     = yes
     1284                       propost.cd-contratante      = contrat.cd-contratante
     1285                       propost.nr-insc-contratante = contrat.nr-insc-contratante.
     1286            end.
     1287       
     1288       if avail contrat
     1289       then for first endereco fields (cd-cidade)
     1290                where endereco.id-pessoa = contrat.id-pessoa
     1291                  and endereco.lg-principal no-lock query-tuning (no-index-hint):
     1292       
     1293                for first assocva-cidad-empres-estab fields (cod-empres cod-estab) 
     1294                    where assocva-cidad-empres-estab.cdn-cidad = endereco.cd-cidade 
     1295                          no-lock query-tuning (no-index-hint):
     1296   
     1297                    assign propost.ep-codigo   = assocva-cidad-empres-estab.cod-empres
     1298                           propost.cod-estabel = assocva-cidad-empres-estab.cod-estab.
     1299                end.
     1300            end.
     1301       
     1302       assign propost.nr-insc-contrat-origem = 0
     1303              propost.cd-contrat-origem      = 0.
     1304   
     1305       if  b-import-propost.nr-insc-contrat-origem <> 0
     1306       and b-import-propost.nr-insc-contrat-origem <> ?
     1307       then for first b-contrat fields (cd-contratante nr-insc-contratante lg-tem-proposta) 
     1308                where b-contrat.nr-insc-contratante = b-import-propost.nr-insc-contrat-origem 
     1309                      exclusive-lock query-tuning (no-index-hint):
     1310   
     1311                assign b-contrat.lg-tem-proposta       = yes
     1312                       propost.cd-contrat-origem       = b-contrat.cd-contratante
     1313                       propost.nr-insc-contrat-origem  = b-contrat.nr-insc-contratante.
     1314            end.
     1315   
     1316       if b-import-propost.ind-faixa-etaria-especial = "S" 
     1317       or b-import-propost.ind-faixa-etaria-especial = "C"
     1318       then assign propost.lg-faixa-etaria-esp = yes.
     1319       else assign propost.lg-faixa-etaria-esp = no.
     1320              
     1321       assign propost.cd-plano                   = b-import-propost.cd-plano
     1322              propost.cd-tipo-plano              = b-import-propost.cd-tipo-plano
     1323              propost.cd-tipo-proposta           = 09 
     1324              propost.lg-cobertura-esp           = b-import-propost.log-cobert-especial
     1325              propost.cd-forma-pagto             = b-import-propost.cd-forma-pagto
     1326              propost.cd-tipo-vencimento         = b-import-propost.cdn-tip-vencto
     1327              propost.dd-vencimento              = b-import-propost.num-dia-vencto
     1328              propost.lg-inicio-validade         = b-import-propost.log-inic-valid
     1329              propost.lg-medico-empresa          = b-import-propost.log-medic-empres
     1330              propost.cd-vendedor                = b-import-propost.cd-vendedor
     1331              propost.lg-considera-taxa-co       = b-import-propost.log-consid-tax-coper
     1332              propost.pc-acresc-taxa             = if b-import-propost.pc-acresc-taxa = ? then 0 else b-import-propost.pc-acresc-taxa
     1333              propost.lg-mascara                 = b-import-propost.log-mascar
     1334              propost.lg-cartao                  = b-import-propost.log-cartao
     1335              propost.lg-precproc-cob            = b-import-propost.log-cobr-dif-pagto
     1336              propost.lg-pea                     = b-import-propost.log-segassist
     1337              propost.lg-altera-fator-moderador  = b-import-propost.log-altera-fator-moder
     1338              propost.lg-altera-taxa-inscricao   = b-import-propost.log-altera-tax-inscr
     1339              propost.lg-altera-validade-usuario = b-import-propost.log-altera-val-usuar
     1340              propost.lg-alt-val-usu-prorroga    = b-import-propost.log-altera-valid-prorrog
     1341              propost.lg-prop-regulamentada      = b-import-propost.log-propost-regulam
     1342              propost.log-2                      = YES /* Permite informar data de exclusão */
     1343              propost.log-3                      = IF lg-ver-imp8 THEN YES ELSE NO /* Emite termo de comunicação */
     1344              propost.log-11                     = b-import-propost.log-livre-1 /* usuario eventual */
     1345              propost.log-13                     = TRUE. /* permitir utilizar reajustes das regras de mensalidade */
     1346   
     1347       IF modalid.in-tipo-pessoa = "J"
     1348       THEN propost.log-utiliz-lotac           = paravpmc.log-livre-26. /* indicador se utiliza lotacao */
     1349       ELSE propost.log-utiliz-lotac           = NO.
     1350           
     1351       /**
     1352        * Indicador se a geracao do Numero de Familia sera automatico (0) ou manual (1).
     1353        */
     1354       IF b-import-propost.log-livre-2
     1355       THEN assign propost.int-1 = 1.
     1356       ELSE assign propost.int-1 = 0.
     1357   
     1358       if   b-import-propost.log-fatur-segassist
     1359       and  b-import-propost.log-segassist         
     1360       then assign b-import-propost.pc-desconto-inscr = 100
     1361                   b-import-propost.dat-lim-desc-inscr = b-import-propost.dat-fim-segassist.
     1362       
     1363       else if b-import-propost.log-segassist 
     1364            then assign b-import-propost.pc-desconto         = 100
     1365                        b-import-propost.dat-lim-desc-mensal = b-import-propost.dat-fim-segassist
     1366                        b-import-propost.pc-desconto-inscr   = 100
     1367                        b-import-propost.dat-lim-desc-inscr  = b-import-propost.dat-fim-segassist.
     1368       
     1369       if b-import-propost.log-fatur-segassist and
     1370          b-import-propost.log-segassist   
     1371       then do:
     1372              if b-import-propost.ind-cobr = "0"
     1373              then propost.in-mensalidade-migracao = 0.
     1374              else propost.in-mensalidade-migracao = 2.
     1375            end.
     1376       
     1377       if   propost.lg-mascara
     1378       then assign propost.ds-mascara = caps(b-import-propost.des-mascar).
     1379       
     1380       assign propost.dt-proposta           = b-import-propost.dat-propost
     1381              propost.nr-proposta-anterior  = nr-proposta-anterior-aux
     1382              propost.cd-tab-preco          = b-import-propost.cd-tab-preco
     1383              propost.cd-tab-preco-proc     = b-import-propost.cd-tab-preco-proc
     1384              propost.cd-tab-preco-proc-cob = b-import-propost.cd-tab-preco-proc-cob
     1385              propost.cd-convenio           = b-import-propost.cd-convenio
     1386              propost.cd-tipo-participacao  = b-import-propost.cd-tipo-participacao
     1387              propost.pc-desconto           = b-import-propost.pc-desconto
     1388              propost.pc-acrescimo          = b-import-propost.pc-acrescimo
     1389              propost.pc-desconto-inscr     = b-import-propost.pc-desconto-inscr
     1390              propost.pc-acrescimo-inscr    = b-import-propost.pc-acrescimo-inscr
     1391              propost.dt-lim-acres-mens     = b-import-propost.dt-lim-acres-mens
     1392              propost.dt-lim-acres-inscr    = b-import-propost.dat-lim-acresc-inscr
     1393              propost.dt-lim-desc-mens      = b-import-propost.dat-lim-desc-mensal
     1394              propost.dt-lim-desc-inscr     = b-import-propost.dat-lim-desc-inscr
     1395              propost.pc-desc-prom-taxa     = b-import-propost.pc-desc-prom-taxa
     1396              propost.dt-val-prom-tax       = b-import-propost.dat-valid-prom-tax
     1397              propost.pc-desc-prom-pl       = b-import-propost.pc-desc-prom-pl
     1398              propost.dt-val-prom-pl        = b-import-propost.dat-valid-prom-plano
     1399              propost.dt-libera-doc         = b-import-propost.dat-fim-propost
     1400              propost.qt-validade-cartao    = b-import-propost.qt-validade-cartao
     1401              propost.um-validade-cartao    = b-import-propost.um-validade-cartao
     1402              propost.qt-validade-cart      = b-import-propost.qt-validade-cart
     1403              propost.um-validade-cart      = b-import-propost.um-validade-cart
     1404              propost.qt-validade-termo     = b-import-propost.qt-validade-termo
     1405              propost.um-validade-termo     = b-import-propost.um-validade-termo
     1406              propost.in-tipo-contratacao   = b-import-propost.in-tipo-contratacao
     1407              propost.in-tipo-natureza      = b-import-propost.in-tipo-natureza
     1408              propost.in-validade-doc-ident = b-import-propost.in-validade-doc-ident
     1409              propost.in-registro-plano     = b-import-propost.in-registro-plano
     1410              propost.nr-oficio-reajuste    = b-import-propost.nr-oficio-reajuste
     1411              propost.int-12                = b-import-propost.cdn-tip-idx  
     1412              propost.int-13                = b-import-propost.cdn-niv-reaj
     1413              propost.cd-sit-proposta       = 1
     1414              propost.nr-contrato-antigo    = b-import-propost.nr-contrato-antigo
     1415              propost.dt-digitacao          = today
     1416              propost.cd-userid-digitacao   = v_cod_usuar_corren
     1417              propost.dt-atualizacao        = today
     1418              propost.cd-userid             = v_cod_usuar_corren
     1419              propost.mm-aa-ult-fat-mig     = substr(string(b-import-propost.num-mes-ult-faturam,"99"),1,2)
     1420                                            + substr(string(b-import-propost.aa-ult-fat,"9999"),1,4).
     1421   
     1422       /* --- Validade do termo e cartÆo -------------------------------------- */
     1423       /*
     1424       FIND FIRST ti-pl-sa 
     1425            WHERE ti-pl-sa.cd-modalidade = propost.cd-modalidade
     1426              AND ti-pl-sa.cd-plano      = propost.cd-plano
     1427              AND ti-pl-sa.cd-tipo-plano = propost.cd-tipo-plano 
     1428                  NO-LOCK NO-ERROR.
     1429   
     1430       IF AVAIL ti-pl-sa
     1431       THEN DO:
     1432              IF  ti-pl-sa.um-validade-termo = b-import-propost.um-validade-termo
     1433              AND ti-pl-sa.qt-validade-termo = b-import-propost.qt-validade-termo
     1434              THEN ASSIGN propost.qt-validade-termo = 0
     1435                          propost.um-validade-termo = "".
     1436              ELSE ASSIGN propost.qt-validade-termo = b-import-propost.qt-validade-termo
     1437                          propost.um-validade-termo = b-import-propost.um-validade-termo.
     1438   
     1439              IF  ti-pl-sa.qt-validade-cart = b-import-propost.qt-validade-cart
     1440              AND ti-pl-sa.um-validade-cart = b-import-propost.um-validade-cart
     1441              THEN ASSIGN propost.qt-validade-cart = 0
     1442                          propost.um-validade-cart = "".
     1443              ELSE ASSIGN propost.qt-validade-cart = b-import-propost.qt-validade-cart
     1444                          propost.um-validade-cart = b-import-propost.um-validade-cart.
     1445   
     1446              IF  ti-pl-sa.qt-validade-cartao = b-import-propost.qt-validade-cartao
     1447              AND ti-pl-sa.um-validade-cartao = b-import-propost.um-validade-cartao
     1448              THEN ASSIGN propost.qt-validade-cartao = 0
     1449                          propost.um-validade-cartao = "".
     1450              ELSE ASSIGN propost.qt-validade-cartao = b-import-propost.qt-validade-cartao
     1451                          propost.um-validade-cartao = b-import-propost.um-validade-cartao.
     1452            END.
     1453       */
     1454       
     1455       /* --------------------------------------------------------------------- */
     1456       IF lg-gerar-termo-aux
     1457       THEN DO:
     1458              if   modalid.in-geracao-termo = 1 /* numero do termo sequencial */
     1459              then do:
     1460                     FOR last b-ter-ade FIELDS (nr-ter-adesao)
     1461                        where b-ter-ade.cd-modalidade = propost.cd-modalidade EXCLUSIVE-LOCK:
     1462                     END.
     1463                     if   not avail b-ter-ade
     1464                     then assign propost.nr-ter-adesao = 1.
     1465                     else assign propost.nr-ter-adesao = b-ter-ade.nr-ter-adesao + 1.
     1466                   end.
     1467              else do: /* numero do termo igual ao numero da proposta */
     1468                     if   propost.nr-proposta > 999999
     1469                     then do:
     1470                            run pi-grava-erro ("Nao sera possivel gerar numero do termo. " +  
     1471                                               "Proposta com numero maior que 999999."     + 
     1472                                               " Mod: " + string(propost.cd-modalidade)).
     1473                            lg-relat-erro-aux = YES.
     1474                            assign propost.nr-ter-adesao = 0.
     1475                            next.
     1476                          end.
     1477                     else assign propost.nr-ter-adesao = propost.nr-proposta.
     1478                   end.
     1479   
     1480              /*
     1481              if   today > propost.dt-lim-acres-mens
     1482              or   today > propost.dt-lim-acres-inscr
     1483              then do: 
     1484                     assign ds-mensagem-err-aux = "Proposta com data limite " +
     1485                                                  "de acrescimo da mensalidade/" +
     1486                                                  "inscricao vencida".
     1487                     run gera-erro(input "A").
     1488                   end.
     1489              
     1490              if   today > propost.dt-lim-desc-mens
     1491              or   today > propost.dt-lim-desc-inscr
     1492              then do: 
     1493                      assign ds-mensagem-err-aux = "Proposta com data limite " +
     1494                                                   "de desconto da mensalidade/"  +
     1495                                                   "inscricao vencida".
     1496                      run gera-erro(input "A").
     1497                    end.
     1498              */
     1499   
     1500              assign propost.dt-confirmacao        = today
     1501                     propost.cd-userid-confirmacao = v_cod_usuar_corren
     1502                     propost.dt-atualizacao        = today
     1503                     propost.cd-userid             = v_cod_usuar_corren
     1504                     propost.dt-parecer            = propost.dt-proposta
     1505                     propost.cd-usuario-diretor    = v_cod_usuar_corren
     1506                     propost.dt-aprovacao          = today.
     1507              
     1508              FOR FIRST b-contrat EXCLUSIVE-LOCK WHERE rowid(b-contrat) = ROWID(contrat):
     1509                        assign b-contrat.dt-analise-credito = today
     1510                               b-contrat.cd-userid-analise  = v_cod_usuar_corren
     1511                               b-contrat.cd-sit-cred        = 1.
     1512              END.
     1513              
     1514              if   paramecp.cd-mediocupa = modalid.cd-tipo-medicina
     1515              THEN lg-medocup-aux = YES.
     1516              ELSE lg-medocup-aux = NO.
     1517   
     1518              run liberar-documentos.
     1519              IF lg-relat-erro-aux
     1520              THEN NEXT.
     1521              
     1522            END.
     1523       
     1524       create sit-aprov-proposta.    
     1525       assign sit-aprov-proposta.id-sit-aprov-proposta = next-value(seq-sit-aprov-proposta)
     1526              sit-aprov-proposta.cd-modalidade         = propost.cd-modalidade
     1527              sit-aprov-proposta.nr-proposta           = propost.nr-proposta
     1528              sit-aprov-proposta.cd-userid             = v_cod_usuar_corren
     1529              sit-aprov-proposta.dt-atualizacao        = today.
     1530   
     1531       CASE propost.cd-sit-proposta:
     1532           WHEN 1 or /* DIGITACAO */
     1533           WHEN 2 or /* CONFIRMADA */
     1534           WHEN 85   /* SUSPENSA */ 
     1535           THEN assign sit-aprov-proposta.in-situacao              = 2 /* EM CADASTRAMENTO */
     1536                       sit-aprov-proposta.nm-aprovador             = ""
     1537                       sit-aprov-proposta.nm-cadastrador           = propost.cd-userid-digitacao
     1538                       sit-aprov-proposta.dt-movimento-aprovador   = ?
     1539                       sit-aprov-proposta.dt-movimento-cadastrador = propost.dt-digitacao
     1540                       sit-aprov-proposta.cd-motivo-reprovacao     = 0.
     1541   
     1542           WHEN 3 /* PENDENTE ANALISE DE CREDITO */
     1543           then assign sit-aprov-proposta.in-situacao              = 9 /* PENDENTE ANALISE DE CREDITO */
     1544                       sit-aprov-proposta.nm-aprovador             = ""
     1545                       sit-aprov-proposta.nm-cadastrador           = propost.cd-userid-digitacao
     1546                       sit-aprov-proposta.dt-movimento-aprovador   = ?
     1547                       sit-aprov-proposta.dt-movimento-cadastrador = propost.dt-digitacao
     1548                       sit-aprov-proposta.cd-motivo-reprovacao     = 0.
     1549   
     1550           WHEN 4 /* AGUARDANDO LIBERACAO */
     1551           then assign sit-aprov-proposta.in-situacao              = 4 /* PENDENTE DE APROVACAO */
     1552                       sit-aprov-proposta.nm-aprovador             = ""
     1553                       sit-aprov-proposta.nm-cadastrador           = propost.cd-userid-digitacao
     1554                       sit-aprov-proposta.dt-movimento-aprovador   = ?
     1555                       sit-aprov-proposta.dt-movimento-cadastrador = propost.dt-digitacao
     1556                       sit-aprov-proposta.cd-motivo-reprovacao     = 0.
     1557   
     1558           WHEN 5 or /* LIBERADA */
     1559           WHEN 6 or /* TAXA INSCRICAO FATURADA  */
     1560           WHEN 7    /* FATURAMENTO NORMAL */
     1561           then assign sit-aprov-proposta.in-situacao              = 5 /* APROVADA */
     1562                       sit-aprov-proposta.nm-aprovador             = propost.cd-userid-libera
     1563                       sit-aprov-proposta.nm-cadastrador           = propost.cd-userid-digitacao
     1564                       sit-aprov-proposta.dt-movimento-aprovador   = propost.dt-libera-doc
     1565                       sit-aprov-proposta.dt-movimento-cadastrador = propost.dt-digitacao
     1566                       sit-aprov-proposta.cd-motivo-reprovacao     = 0.
     1567   
     1568           WHEN 90   /* EXCLUIDA */ 
     1569           then assign sit-aprov-proposta.in-situacao              = 90 /* Excluida */
     1570                       sit-aprov-proposta.nm-aprovador             = propost.cd-userid-libera   
     1571                       sit-aprov-proposta.nm-cadastrador           = propost.cd-userid-digitacao
     1572                       sit-aprov-proposta.dt-movimento-aprovador   = propost.dt-libera-doc      
     1573                       sit-aprov-proposta.dt-movimento-cadastrador = propost.dt-digitacao       
     1574                       sit-aprov-proposta.cd-motivo-reprovacao     = 0. 
     1575   
     1576           WHEN 8 or /* REPROVADA */
     1577           WHEN 95   /* CANCELADA */ 
     1578           then assign sit-aprov-proposta.in-situacao              = 6 /* NEGADA */
     1579                       sit-aprov-proposta.nm-aprovador             = propost.cd-userid-libera
     1580                       sit-aprov-proposta.nm-cadastrador           = propost.cd-userid-digitacao
     1581                       sit-aprov-proposta.dt-movimento-aprovador   = propost.dt-libera-doc
     1582                       sit-aprov-proposta.dt-movimento-cadastrador = propost.dt-digitacao
     1583                       sit-aprov-proposta.cd-motivo-reprovacao     = 0.
     1584   
     1585           WHEN  0 /* --- SE NAO ENTROU EM NENHUMA DAS SITUACOES ANTERIORES, SETA COMO "EM CADASTRAMENTO" --- */
     1586           then assign sit-aprov-proposta.in-situacao              = 2
     1587                       sit-aprov-proposta.nm-aprovador             = ""
     1588                       sit-aprov-proposta.nm-cadastrador           = propost.cd-userid-digitacao
     1589                       sit-aprov-proposta.dt-movimento-aprovador   = ?
     1590                       sit-aprov-proposta.dt-movimento-cadastrador = propost.dt-digitacao
     1591                       sit-aprov-proposta.cd-motivo-reprovacao     = 0.
     1592       END CASE.
     1593   
     1594       assign propost.lg-proc-prestador = b-import-propost.log-proced-prestdor.
     1595       
     1596       if b-import-propost.log-segassist 
     1597       then propost.dt-libera-doc = b-import-propost.dat-fim-segassist.
     1598       
     1599       /* REGRAS DE MENSALIDADE */
     1600       IF  b-import-propost.num-livre-7 <> ? 
     1601       AND b-import-propost.num-livre-7 <> 0
     1602       THEN DO:
     1603              FIND FIRST regra-menslid-propost
     1604                   WHERE regra-menslid-propost.cd-modalidade   = propost.cd-modalidade
     1605                     AND regra-menslid-propost.nr-proposta     = propost.nr-proposta
     1606                     AND regra-menslid-propost.cd-usuario      = 0
     1607                     AND regra-menslid-propost.dt-ini-validade = b-import-propost.dat-propost
     1608                     AND regra-menslid-propost.dt-fim-validade = 12/31/9999
     1609                         NO-LOCK NO-ERROR.
     1610             
     1611              IF NOT AVAIL regra-menslid-propost        
     1612              THEN DO:
     1613                     CREATE regra-menslid-propost.
     1614                     ASSIGN regra-menslid-propost.cdd-seq         = proximaseqregra()
     1615                            regra-menslid-propost.cdd-regra       = b-import-propost.num-livre-7
     1616                            regra-menslid-propost.cd-modalidade   = propost.cd-modalidade   
     1617                            regra-menslid-propost.nr-proposta     = propost.nr-proposta 
     1618                            regra-menslid-propost.cd-usuario      = 0
     1619                            regra-menslid-propost.dt-ini-validade = b-import-propost.dat-propost 
     1620                            regra-menslid-propost.dt-fim-validade = 12/31/9999
     1621                            regra-menslid-propost.cod-usuar-ult-atualiz = v_cod_usuar_corren
     1622                            regra-menslid-propost.dat-ult-atualiz = TODAY. 
     1623   
     1624                     ASSIGN propost.log-12 = YES.
     1625                   END.
     1626            END.
     1627       
     1628       /* --- USUARIO EVENTUAL ---------------------------------------------------- */
     1629       if propost.log-11 
     1630       AND propost.cd-sit-proposta >= 5
     1631       AND propost.cd-sit-proposta <= 7
     1632       then do:
     1633              /************************************************************************************************
     1634               *      Programa .....: hdrunpersis.i                                                            *
     1635               *      Data .........: 12 de Junho de 2009                                                      *
     1636               *      Sistema ......: HD - INCLUDES PADRAO                                                     *
     1637               *      Empresa ......: Datasul Saude                                                            *  
     1638               *      Programador ..: Alex Boeira                                                              *
     1639               *      Objetivo .....: Persistir um programa, caso ainda nao possua instancia persistida        *
     1640               ************************************************************************************************/
     1641               
     1642               /***
     1643                O PROGRAMA CHAMADOR SEMPRE DEVERA POSSUIR:
     1644                  VARIAVEL "H-HANDLE-AUX" DO TIPO HANDLE;
     1645                  UMA VARIAVEL "H-" + NOME_PROGRAMA + "-AUX" PARA CADA PROGRAMA A SER PERSISTIDO;
     1646                  
     1647                A DECLARACAO DESTE INCLUDE NOS FONTES DEVE SEGUIR O PADRAO:
     1648                  {HDP/HDRUNPERSIS.I "PROGRAMA.P" "HANDLE" "PARAMETROS"}
     1649                  
     1650                  onde:
     1651                  
     1652                  {1} = NOME DO PROGRAMA A SER PERSISTIDO;
     1653                  
     1654                  {2} = NOME DO HANDLE PARA CONTROLAR A PERSISTENCIA;
     1655                  
     1656                  {3} (OPCIONAL) = PARAMETROS A SEREM ENVIADOS PARA O PROGRAMA A SER PERSISTIDO;
     1657                  
     1658                EXEMPLOS:
     1659                  {HDP/HDRUNPERSIS.I "API/API-USUARIO.P" "H-API-USUARIO-AUX"}
     1660                  {HDP/HDRUNPERSIS.I "BOSAU/BOSAUDEMOGRAPHIC.P" "H-BOSAUDEMOGRAPHIC-AUX"}
     1661                  {HDP/HDRUNPERSIS.I "PRGINT/UTB/UTB765ZL.PY" "H-UTB765ZL-AUX" "(INPUT 1, INPUT '', INPUT '')"}
     1662               ***/
     1663               
     1664               h-handle-aux = session:last-procedure.
     1665               do while valid-handle(h-handle-aux):
     1666                   
     1667                  if  h-handle-aux:type = "procedure"
     1668                  and h-handle-aux:name = "bosau/bosaueventualuser.p"
     1669                  then do:
     1670               
     1671                         if  id-requisicao-handle-aux  <> ""
     1672                         and h-handle-aux:private-data  = id-requisicao-handle-aux
     1673                         then do:
     1674                                assign h-bosaueventualuser-aux = h-handle-aux.
     1675                                leave.
     1676                              end.
     1677                       end.
     1678                          
     1679                  assign h-handle-aux = h-handle-aux:prev-sibling.
     1680               end.
     1681               
     1682               if not valid-handle(h-handle-aux) 
     1683               then do:
     1684                      run bosau/bosaueventualuser.p persistent set h-bosaueventualuser-aux .
     1685               
     1686                      /* --- SE ID-REQUISICAO-HANDLE-AUX ESTIVER EM BRANCOS, SIGNIFICA QUE Eh A PRIMEIRA PERSISTENCIA DA REQUISICAO.
     1687                             O ID GERADO NESTE MOMENTO SERA UTILIZADO NAS DEMAIS PERSISTENCIAS, E SERA USADO AO FINAL
     1688                             DO PROCESSO PARA ELIMINACAO DAS PERSISTENCIAS CARREGADAS, ATRAVES DA INCLUDE HDDELPERSIS.I --- */
     1689                      
     1690                          /** 
     1691                                 ALTERADO LÓGICA PARA GERAR O NÚMERO ALEATÓRIO QUE IDENTIFICA A SEÇÃO, JÁ QUE PODE GERAR ERRO CASO O 
     1692                             A SEÇÃO DO USUÁRIO ESTEJA ABERTA A MUITO TEMPO 
     1693                                 FABRICIO CASALI
     1694                           */
     1695                          
     1696                          if length (string (etime)) > 10
     1697                                 then etime (yes).        
     1698                          
     1699                          if id-requisicao-handle-aux = ""
     1700                      then id-requisicao-handle-aux = string (etime) + string (random (1, 9999)).
     1701               
     1702                      h-bosaueventualuser-aux:private-data = id-requisicao-handle-aux.
     1703               
     1704               
     1705               
     1706               
     1707               
     1708                      /* --- LOG DE ACOMPANHAMENTO --- */
     1709                      if search(session:temp-dir + "acompanhar_persistencias.txt") <> ?
     1710                      then do:
     1711                             run hdp/hdlogpersis.p(input "PERSISTINDO",
     1712                                                   input if program-name(20) <> ? then program-name(20) else "" + " | " +
     1713                                                         if program-name(19) <> ? then program-name(19) else "" + " | " +
     1714                                                         if program-name(18) <> ? then program-name(18) else "" + " | " +
     1715                                                         if program-name(17) <> ? then program-name(17) else "" + " | " +
     1716                                                         if program-name(16) <> ? then program-name(16) else "" + " | " +
     1717                                                         if program-name(15) <> ? then program-name(15) else "" + " | " +
     1718                                                         if program-name(14) <> ? then program-name(14) else "" + " | " +
     1719                                                         if program-name(13) <> ? then program-name(13) else "" + " | " +
     1720                                                         if program-name(12) <> ? then program-name(12) else "" + " | " +
     1721                                                         if program-name(11) <> ? then program-name(11) else "" + " | " +
     1722                                                         if program-name(10) <> ? then program-name(10) else "" + " | " +
     1723                                                         if program-name(09) <> ? then program-name(09) else "" + " | " +
     1724                                                         if program-name(08) <> ? then program-name(08) else "" + " | " +
     1725                                                         if program-name(07) <> ? then program-name(07) else "" + " | " +
     1726                                                         if program-name(06) <> ? then program-name(06) else "" + " | " +
     1727                                                         if program-name(05) <> ? then program-name(05) else "" + " | " +
     1728                                                         if program-name(04) <> ? then program-name(04) else "" + " | " +
     1729                                                         if program-name(03) <> ? then program-name(03) else "" + " | " +
     1730                                                         if program-name(02) <> ? then program-name(02) else "" + " | " +
     1731                                                         if program-name(01) <> ? then program-name(01) else "" + " | ",
     1732                                                   input h-bosaueventualuser-aux:name,
     1733                                                   input h-bosaueventualuser-aux:private-data).
     1734                           end.
     1735               
     1736                    end.
     1737   
     1738              run syncEventualUser in h-bosaueventualuser-aux(input propost.cd-modalidade,   
     1739                                                              input propost.nr-proposta,     
     1740                                                              input-output table rowErrors) no-error.
     1741              
     1742              if error-status:error 
     1743              then run pi-grava-erro ("Nao foi possivel criar o Usuario Eventual").
     1744   
     1745              /*HDDELPERSIS.I*/
     1746              if id-requisicao-handle-aux <> ""
     1747              then do:
     1748                     h-handle-aux = session:last-procedure.
     1749                     do while valid-handle(h-handle-aux):
     1750   
     1751                        h-handle2-aux = h-handle-aux:prev-sibling.
     1752   
     1753                        if h-handle-aux:private-data = id-requisicao-handle-aux
     1754                        then do:
     1755                               /* --- LOG DE ACOMPANHAMENTO --- */
     1756                               if search(session:temp-dir + "acompanhar_persistencias.txt") <> ?
     1757                               then do:
     1758                                      run hdp/hdlogpersis.p(input "DERRUBANDO",
     1759                                                            input if program-name(20) <> ? then program-name(20) else "" + " | " +
     1760                                                                  if program-name(19) <> ? then program-name(19) else "" + " | " +
     1761                                                                  if program-name(18) <> ? then program-name(18) else "" + " | " +
     1762                                                                  if program-name(17) <> ? then program-name(17) else "" + " | " +
     1763                                                                  if program-name(16) <> ? then program-name(16) else "" + " | " +
     1764                                                                  if program-name(15) <> ? then program-name(15) else "" + " | " +
     1765                                                                  if program-name(14) <> ? then program-name(14) else "" + " | " +
     1766                                                                  if program-name(13) <> ? then program-name(13) else "" + " | " +
     1767                                                                  if program-name(12) <> ? then program-name(12) else "" + " | " +
     1768                                                                  if program-name(11) <> ? then program-name(11) else "" + " | " +
     1769                                                                  if program-name(10) <> ? then program-name(10) else "" + " | " +
     1770                                                                  if program-name(09) <> ? then program-name(09) else "" + " | " +
     1771                                                                  if program-name(08) <> ? then program-name(08) else "" + " | " +
     1772                                                                  if program-name(07) <> ? then program-name(07) else "" + " | " +
     1773                                                                  if program-name(06) <> ? then program-name(06) else "" + " | " +
     1774                                                                  if program-name(05) <> ? then program-name(05) else "" + " | " +
     1775                                                                  if program-name(04) <> ? then program-name(04) else "" + " | " +
     1776                                                                  if program-name(03) <> ? then program-name(03) else "" + " | " +
     1777                                                                  if program-name(02) <> ? then program-name(02) else "" + " | " +
     1778                                                                  if program-name(01) <> ? then program-name(01) else "" + " | ",
     1779                                                            input h-handle-aux:name,
     1780                                                            input h-handle-aux:private-data).
     1781                                    end.
     1782   
     1783                               delete procedure h-handle-aux.
     1784   
     1785                             end.
     1786   
     1787                        assign h-handle-aux = h-handle2-aux.
     1788   
     1789                     end.
     1790                   end.
     1791   
     1792              assign id-requisicao-handle-aux = "".
     1793   
     1794              /*FIM DE HDDELPERSIS.I*/
     1795   
     1796            end.
     1797   
     1798       assign b-import-propost.cod-livre-6 = string(propost.nr-proposta).
     1799   
     1800       VALIDATE propost.
     1801       
     1802   END PROCEDURE.
     1803   
     1804   procedure liberar-documentos:
     1805      DEF VAR dt-inicio-aux        AS DATE NO-UNDO.
     1806      DEF VAR lg-erro-rtclvenc-aux AS LOG NO-UNDO.
     1807      DEF VAR ds-erro-rtclvenc-aux AS CHAR NO-UNDO.
     1808      DEF VAR dt-fim-aux           AS DATE NO-UNDO.
     1809      DEF VAR dt-validade-aux      AS DATE NO-UNDO.
     1810   
     1811      def var lg-erro-gera-aux  AS LOG NO-UNDO.
     1812      def var ds-erro-gera-aux  AS CHAR NO-UNDO.
     1813      def var ds-chave-gera-aux AS CHAR NO-UNDO.
     1814      DEF VAR qt-executada-aux  AS INT NO-UNDO.
     1815   
     1816      create ter-ade.
     1817      ASSIGN ter-ade.cd-modalidade         = propost.cd-modalidade
     1818             ter-ade.nr-ter-adesao         = propost.nr-ter-adesao.
     1819    
     1820      if   propost.dt-libera-doc <> ?
     1821      then do:
     1822              if   propost.dt-libera-doc < today
     1823              then do:
     1824                     assign propost.cd-sit-proposta  = 90   
     1825                            ter-ade.cd-sit-adesao    = 90
     1826                            ter-ade.cd-motivo-cancel = 90.
     1827                   end.
     1828              else do:
     1829                     run verifica-sit-prop.
     1830                     ter-ade.cd-sit-adesao    = 1.
     1831                   end.
     1832    
     1833              assign ter-ade.dt-mov-exclusao       =  today
     1834                     ter-ade.cd-userid-exclusao    =  v_cod_usuar_corren
     1835                     ter-ade.dt-cancelamento       =  propost.dt-libera-doc.
     1836           end.
     1837      else do:
     1838             run verifica-sit-prop.
     1839             assign  ter-ade.cd-sit-adesao    = 1.
     1840           end.
     1841    
     1842      assign propost.cd-userid-libera      = v_cod_usuar_corren.
     1843    
     1844      /*&&&& checar unicidade de nr-ter-adesao, se precisar trocar, ajustar tb na proposta!*/
     1845      
     1846      assign ter-ade.cd-userid             = v_cod_usuar_corren
     1847             ter-ade.dt-aprovacao          = today
     1848             ter-ade.dt-atualizacao        = today
     1849             ter-ade.dt-mov-inclusao       = today
     1850             ter-ade.cd-userid-inclusao    = v_cod_usuar_corren
     1851             ter-ade.cd-classe-mens        = for-pag.cd-classe-mens
     1852             ter-ade.aa-ult-fat            = int(substring(propost.mm-aa-ult-fat-mig,03,04))
     1853             ter-ade.mm-ult-fat            = int(substring(propost.mm-aa-ult-fat-mig,01,02))
     1854             ter-ade.dt-inicio             = propost.dt-parecer
     1855             ter-ade.lg-mantem-senha-benef = YES /*&&&& checar se precisa virar parametro */
     1856             ter-ade.in-gera-senha         = 0 /*&&&& checar se precisa virar parametro */ .
     1857    
     1858      if   propost.cd-sit-proposta = 5 
     1859      or   ter-ade.dt-inicio       = ter-ade.dt-cancelamento
     1860      then assign ter-ade.aa-pri-fat = 0
     1861                  ter-ade.mm-pri-fat = 0.
     1862      else assign ter-ade.aa-pri-fat = year(ter-ade.dt-inicio)
     1863                  ter-ade.mm-pri-fat = month(ter-ade.dt-inicio).
     1864   
     1865      if propost.cd-contrat-origem <> 0
     1866      then assign ter-ade.in-contratante-mensalidade  = 1
     1867                  ter-ade.in-contratante-participacao = 1
     1868                  ter-ade.in-contratante-custo-op     = 1.
     1869      else assign ter-ade.in-contratante-mensalidade  = 0
     1870                  ter-ade.in-contratante-participacao = 0
     1871                  ter-ade.in-contratante-custo-op     = 0.
     1872   
     1873      /* se nivel de reajuste da proposta for por contrato, cria historico */
     1874   
     1875      if propost.int-13 = 0
     1876      then do:
     1877             /* Historico de tabelas de preco da proposta */
     1878             RUN escrever-log("@@@@@VERIFICAR SE HISTABPRECO JA EXISTE - MODALIDADE: " + STRING(propost.cd-modalidade) 
     1879                              + " PROPOSTA: " + string(propost.nr-proposta) + " ANO: " + STRING(year(ter-ade.dt-inicio))
     1880                              + " MES: " + STRING(month(ter-ade.dt-inicio))).
     1881             FIND FIRST histabpreco EXCLUSIVE-LOCK
     1882                  WHERE histabpreco.cd-modalidade = propost.cd-modalidade   
     1883                    AND histabpreco.nr-proposta   = propost.nr-proposta     
     1884                    AND histabpreco.aa-reajuste   = year(ter-ade.dt-inicio) 
     1885                    AND histabpreco.mm-reajuste   = month(ter-ade.dt-inicio) NO-ERROR.
     1886   
     1887             RUN escrever-log("@@@@@ACHOU HISTABPRECO COM A MESMA CHAVE?: " + STRING(AVAIL histabpreco)).
     1888   
     1889             IF NOT AVAIL histabpreco
     1890             THEN do:
     1891                    create histabpreco.
     1892                    ASSIGN histabpreco.cd-modalidade = propost.cd-modalidade   
     1893                           histabpreco.nr-proposta   = propost.nr-proposta     
     1894                           histabpreco.aa-reajuste   = year(ter-ade.dt-inicio) 
     1895                           histabpreco.mm-reajuste   = month(ter-ade.dt-inicio).
     1896                  END.
     1897   
     1898             assign histabpreco.cd-tab-preco         = propost.cd-tab-preco
     1899                    histabpreco.log-1                = YES /*parafatu.log-12 - Utilizar Historico da Tab.Preco para Reajustar a Mensalidade - forcando sim para habilitar processo reajuste*/ 
     1900                    histabpreco.cd-userid            = v_cod_usuar_corren    
     1901                    histabpreco.dt-atualizacao       = today.
     1902            
     1903             /**
     1904              * 23/11/16 - Alex Boeira - logica comentada, pois o historico completo de reajuste eh 
     1905              * carregado na procedure P_POS_CARGA (PL/SQL), que eh executada apos concluir a criacao de propostas e beneficiarios.
     1906              
     1907             if (    year(ter-ade.dt-inicio)  = propost.aa-ult-reajuste
     1908                 and month(ter-ade.dt-inicio) = propost.mm-ult-reajuste)
     1909             or (    propost.aa-ult-reajuste = 0
     1910                 and propost.mm-ult-reajuste = 0)
     1911             then assign histabpreco.pc-reajuste        = propost.pc-ult-reajuste        
     1912                         histabpreco.nr-oficio-reajuste = propost.nr-oficio-reajuste
     1913                         histabpreco.int-1              = propost.aa-ult-reajuste
     1914                         histabpreco.int-2              = propost.mm-ult-reajuste.
     1915             else do:
     1916                    create histabpreco.
     1917                    assign histabpreco.cd-modalidade      = propost.cd-modalidade 
     1918                           histabpreco.nr-proposta        = propost.nr-proposta 
     1919                           histabpreco.aa-reajuste        = propost.aa-ult-reajuste
     1920                           histabpreco.mm-reajuste        = propost.mm-ult-reajuste
     1921                           histabpreco.cd-tab-preco       = propost.cd-tab-preco
     1922                           histabpreco.pc-reajuste        = propost.pc-ult-reajuste        
     1923                           histabpreco.nr-oficio-reajuste = propost.nr-oficio-reajuste
     1924                           histabpreco.int-1              = propost.aa-ult-reajuste
     1925                           histabpreco.int-2              = propost.mm-ult-reajuste
     1926                           histabpreco.log-1              = YES /*parafatu.log-12*/
     1927                           histabpreco.cd-userid          = v_cod_usuar_corren
     1928                           histabpreco.dt-atualizacao     = today.
     1929                  end.*/
     1930           end.
     1931    
     1932      /* ---------------------------------------------------------------------- */
     1933      if   contrat.lg-mantem-senha-termo
     1934      then assign ter-ade.cd-senha = contrat.cd-senha.
     1935      else do:
     1936             run rtp/rtrandom.p (input 6,
     1937                                 output cd-senha-aux,
     1938                                 output lg-erro-rtsenha-aux,
     1939                                 output ds-erro-rtsenha-aux).
     1940             if lg-erro-rtsenha-aux 
     1941             then do:
     1942                    run pi-grava-erro (ds-erro-rtsenha-aux).
     1943                    lg-relat-erro-aux = YES.
     1944                  end.
     1945             
     1946             assign ter-ade.cd-senha = cd-senha-aux.    
     1947           end.
     1948   
     1949      /* ---------------------------------------------------------------------- */
     1950      assign propost.dt-comercializacao = ter-ade.dt-inicio
     1951             ter-ade.dt-fim             = ter-ade.dt-inicio
     1952             dt-inicio-aux              = ter-ade.dt-inicio.
     1953    
     1954      /* ---- Inicializa Quantidade de vezes que o Laco vai ser Executado. ---- */
     1955      assign qt-executada-aux = 0.
     1956   
     1957      /**
     1958       * Este validate eh necessario para que a proposta esteja visivel dentro de rtclvenc.p qdo
     1959       * executando em ambiente Oracle.
     1960       */
     1961      VALIDATE propost.
     1962   
     1963      /* ---------------------------------------------------------------------- */
     1964      do while ter-ade.dt-fim < dt-minima-termo-aux:
     1965    
     1966         /* ---------------------------------- CALCULA DATA DE FIM DO TERMO --- */
     1967         run rtp/rtclvenc.p (input "termo",
     1968                             input dt-inicio-aux,
     1969                             input propost.cd-modalidade,
     1970                             input propost.nr-proposta,
     1971                             input no,                       
     1972                             output ter-ade.dt-fim,
     1973                             output lg-erro-rtclvenc-aux,
     1974                             output ds-erro-rtclvenc-aux).
     1975         if   lg-erro-rtclvenc-aux
     1976         then do:
     1977                run pi-grava-erro (ds-erro-rtclvenc-aux).
     1978                lg-relat-erro-aux = YES.
     1979             end.
     1980   
     1981         assign dt-inicio-aux    = ter-ade.dt-fim
     1982                qt-executada-aux = qt-executada-aux + 1.
     1983      end.
     1984    
     1985      /* ---------------------- Atualiza a data fim do termo de adeso -------- */
     1986      if   qt-executada-aux <> 0
     1987      then assign ter-ade.dt-fim = ter-ade.dt-fim + qt-executada-aux - 1.
     1988   
     1989      /* ---------------------------------------------------------------------- */
     1990      assign dt-fim-aux = ter-ade.dt-fim.
     1991   
     1992      /* --------------------------------- TESTAR PROPOSTA CANCELADA OU PEA --- */
     1993      if   propost.dt-libera-doc <> ?
     1994      then assign ter-ade.dt-fim  = propost.dt-libera-doc.
     1995      else assign ter-ade.dt-fim  = dt-fim-aux.
     1996    
     1997      /* ---------------------------------------------------------------------- */
     1998      assign dt-inicio-aux            = ter-ade.dt-inicio
     1999             ter-ade.dt-validade-cart = ter-ade.dt-inicio.
     2000    
     2001      /* ---- Inicializa Quantidade de vezes que o Laco vai ser Executado. ---- */
     2002      assign qt-executada-aux = 0.
     2003   
     2004      /* ---------------------------------------------------------------------- */
     2005      do while ter-ade.dt-validade-cart < dt-minima-termo-aux:
     2006    
     2007         /* --------------------------------- CALCULA DATA DE FIM DO CARTAO --- */
     2008         if   propost.lg-cartao
     2009         then do:
     2010                 run rtp/rtclvenc.p (input "cartao",
     2011                                     input dt-inicio-aux,
     2012                                     input propost.cd-modalidade,
     2013                                     input propost.nr-proposta,
     2014                                     input no,                       
     2015                                     output ter-ade.dt-validade-cart,
     2016                                     output lg-erro-rtclvenc-aux,
     2017                                     output ds-erro-rtclvenc-aux).
     2018                 if   lg-erro-rtclvenc-aux
     2019                 then do:
     2020                        run pi-grava-erro (ds-erro-rtclvenc-aux).
     2021                        lg-relat-erro-aux = YES.
     2022                      end.
     2023              end.
     2024         /* ------------------------------------------ CALCULA DATA DE FIM DA CARTEIRA --- */
     2025         else do:
     2026                 run rtp/rtclvenc.p (input "carteira",
     2027                                     input dt-inicio-aux,
     2028                                     input propost.cd-modalidade,
     2029                                     input propost.nr-proposta,
     2030                                     input no,                       
     2031                                     output ter-ade.dt-validade-cart,
     2032                                     output lg-erro-rtclvenc-aux,
     2033                                     output ds-erro-rtclvenc-aux).
     2034   
     2035                 if lg-erro-rtclvenc-aux
     2036                 then do:
     2037                        run pi-grava-erro (ds-erro-rtclvenc-aux).
     2038                        lg-relat-erro-aux = YES.
     2039                      end.
     2040              end.
     2041       
     2042         assign dt-inicio-aux    = ter-ade.dt-validade-cart
     2043                qt-executada-aux = qt-executada-aux + 1.
     2044      end.
     2045    
     2046      /* ---------------------- Atualiza a data fim do termo de adeso -------- */
     2047      if   qt-executada-aux <> 0
     2048      then assign ter-ade.dt-validade-cart = ter-ade.dt-validade-cart
     2049                                           + qt-executada-aux - 1.
     2050   
     2051      assign dt-fim-aux = ter-ade.dt-validade-cart.
     2052    
     2053      /* --------------------------------- TESTAR PROPOSTA CANCELADA OU PEA --- */
     2054      if   propost.dt-libera-doc <> ?
     2055      then assign ter-ade.dt-validade-cart = propost.dt-libera-doc.
     2056      else assign ter-ade.dt-validade-cart = dt-fim-aux.
     2057   
     2058      /* -------------- RETORNA A DATA DE FIM DE VALIDADE DO CARTAO/CARTEIRA ---*/
     2059      if   paravpmc.in-validade-cart = "2"
     2060      then do:
     2061             run rtp/rtultdia.p (input  year (ter-ade.dt-validade-cart),
     2062                                 input  month(ter-ade.dt-validade-cart),
     2063                                 output dt-validade-aux).
     2064   
     2065             assign ter-ade.dt-validade-cart = dt-validade-aux.
     2066           end.      
     2067   
     2068      assign propost.mm-aa-ult-fat-mig  = "".
     2069             /*propost.dt-libera-doc      = today.*/
     2070   
     2071      /* -------------------------------------------------------- AFERICAO --- */
     2072      if   modalid.pc-afericao = 0
     2073      then do:
     2074             if   propost.nr-pessoas-titulares   <> 0 
     2075             or   propost.nr-pessoas-dependentes <> 0
     2076             then do:
     2077                    assign propost.nr-pessoas-titulares   = 0
     2078                           propost.nr-pessoas-dependentes = 0.
     2079                    
     2080                    for each pr-id-us where 
     2081                             pr-id-us.cd-modalidade = propost.cd-modalidade
     2082                         and pr-id-us.nr-proposta   = propost.nr-proposta
     2083                             exclusive-lock:
     2084   
     2085                        delete pr-id-us.
     2086                    end.                
     2087                  end.
     2088           end.
     2089      else do:    
     2090             if   propost.nr-pessoas-titulares   = 0
     2091             and  propost.nr-pessoas-dependentes = 0 
     2092             then do:
     2093                    /* ---------------- GERAR A INFORMACAO --- */
     2094                    run vpp/vp0311k.p (input  propost.cd-modalidade,
     2095                                       input  propost.nr-proposta,
     2096                                       input  propost.cd-plano,
     2097                                       input  propost.cd-tipo-plano,
     2098                                       input  propost.lg-faixa-etaria-esp,
     2099                                       input  no,   
     2100                                       output propost.nr-pessoas-titulares,
     2101                                       output propost.nr-pessoas-dependentes,
     2102                                       output lg-erro-gera-aux,
     2103                                       output ds-erro-gera-aux,
     2104                                       output ds-chave-gera-aux).
     2105   
     2106                    if   lg-erro-gera-aux
     2107                    then do:
     2108                           run pi-grava-erro (ds-erro-gera-aux + " " + ds-chave-gera-aux).
     2109                           lg-relat-erro-aux = YES.
     2110                         end.
     2111                  end.
     2112           end.
     2113   
     2114      return "".
     2115      
     2116   end procedure.
     2117   
     2118   procedure verifica-sit-prop:
     2119    
     2120      if  int(substring( propost.mm-aa-ult-fat-mig,03,04)) = 0 and
     2121          int(substring( propost.mm-aa-ult-fat-mig,01,02)) = 0
     2122      then propost.cd-sit-proposta = 5.    
     2123      else do:
     2124             if  int(substring( propost.mm-aa-ult-fat-mig,03,04)) =
     2125                 year(propost.dt-parecer) and
     2126                 int(substring( propost.mm-aa-ult-fat-mig,01,02)) =
     2127                 month(propost.dt-parecer)
     2128             then propost.cd-sit-proposta = 6.
     2129             else propost.cd-sit-proposta = 7.
     2130           end.
     2131    
     2132   end procedure.
     2133   
     2134   PROCEDURE cria-modulos:
     2135   
     2136       def var cd-sit-modulo-aux AS INT NO-UNDO.
     2137       def var dt-fim-aux        as date no-undo.
     2138       def var dt-inicio-aux     as date no-undo.
     2139   
     2140       RUN escrever-log("@@@@@CRIA-MODULOS P1 - MODALIDADE: " + STRING(b-import-propost.cd-modalidade) + " PROPOSTA: " + string(nr-proposta-aux)).
     2141   
     2142       FOR EACH pro-pla EXCLUSIVE-LOCK
     2143          WHERE pro-pla.cd-modalidade = b-import-propost.cd-modalidade
     2144            AND pro-pla.nr-proposta   = nr-proposta-aux 
     2145            AND NOT CAN-FIND (FIRST import-modul-propost
     2146                            where import-modul-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost
     2147                                AND import-modul-propost.cd-modulo           = pro-pla.cd-modulo NO-LOCK):
     2148   
     2149                  RUN escrever-log("@@@@@CRIA-MODULOS P2 - APAGANDO PRO-PLA").
     2150                  DELETE pro-pla.
     2151       END.
     2152   
     2153       ASSIGN lg-relat-erro = NO.
     2154   
     2155       RUN escrever-log("@@@@@CRIA-MODULOS P3 - ANTES DE LER IMPORT-MODUL-PROPOST").
     2156   
     2157       FOR EACH import-modul-propost FIELDS (cd-modulo 
     2158                                             cd-forma-pagto 
     2159                                             in-cobra-participacao 
     2160                                             ind-respons-autoriz 
     2161                                             nr-dias 
     2162                                             log-bonif-penalid 
     2163                                             in-ctrl-carencia-proced 
     2164                                             qt-caren-eletiva 
     2165                                             qt-caren-urgencia 
     2166                                             log-carenc 
     2167                                             dat-inicial 
     2168                                             dat-cancel 
     2169                                             cd-motivo-cancel 
     2170                                             ind-respons-autoriz 
     2171                                             in-cobra-participacao 
     2172                                             in-ctrl-carencia-insumo)
     2173          WHERE import-modul-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost NO-LOCK QUERY-TUNING (NO-INDEX-HINT):
     2174   
     2175           /*------------------------------------------------------------------------*/
     2176           for first pla-mod fields (cd-modulo 
     2177                                     lg-obrigatorio 
     2178                                     in-cobra-participacao 
     2179                                     in-responsavel-autorizacao 
     2180                                     qt-caren-eletiva 
     2181                                     qt-caren-urgencia)
     2182               where pla-mod.cd-modalidade = b-import-propost.cd-modalidade
     2183                 and pla-mod.cd-plano      = b-import-propost.cd-plano
     2184                 and pla-mod.cd-tipo-plano = b-import-propost.cd-tipo-plano
     2185                 and pla-mod.cd-modulo     = import-modul-propost.cd-modulo NO-LOCK QUERY-TUNING (NO-INDEX-HINT):
     2186           end.
     2187           IF NOT AVAIL pla-mod
     2188           THEN do:
     2189                  RUN escrever-log("@@@@@CRIA-MODULOS - ERRO NAO ACHOU PLA-MOD").
     2190                  assign lg-relat-erro = yes.
     2191                  run pi-grava-erro ("Modulo " + string(import-modul-propost.cd-modulo,"999") 
     2192                                     + " nao encontrado para Modalidade " + string(b-import-propost.cd-modalidade)
     2193                                     + ", Plano " + STRING(b-import-propost.cd-plano)
     2194                                     + ", Tipo Plano " + STRING(b-import-propost.cd-tipo-plano)).
     2195                  NEXT.
     2196                END.
     2197           RUN escrever-log("@@@@@CRIA-MODULOS P4 - ACHOU PLA-MOD " + STRING(import-modul-propost.cd-modulo) + ": " + STRING(AVAIL pla-mod)).
     2198   
     2199           for each pro-pla FIELDS (dt-cancelamento 
     2200                                    dt-inicio) use-index pro-pla3
     2201              where pro-pla.cd-modalidade = b-import-propost.cd-modalidade
     2202                and pro-pla.nr-proposta   = nr-proposta-aux
     2203                and pro-pla.cd-modulo     = import-modul-propost.cd-modulo
     2204                    no-lock:
     2205   
     2206               if  pro-pla.dt-cancelamento = ? 
     2207               then do:
     2208                      if import-modul-propost.dat-cancel = ?
     2209                      then do:
     2210                             RUN escrever-log("@@@@@CRIA-MODULOS P5").
     2211                             assign lg-relat-erro = yes.
     2212                             run pi-grava-erro ("Modulo ja cadastrado para a proposta: " + string(import-modul-propost.cd-modulo,"999")).
     2213                           END.
     2214                      ELSE if import-modul-propost.dat-cancel >= pro-pla.dt-inicio
     2215                           then do:
     2216                                  RUN escrever-log("@@@@@CRIA-MODULOS P6").
     2217                                  assign lg-relat-erro = yes.
     2218                                  run pi-grava-erro ("Data de cancel. nao pode ser superior a data de inicio do mod. ja cadast. Mod:" + string(import-modul-propost.cd-modulo,"999")).
     2219                                END.
     2220                               
     2221                      if import-modul-propost.dat-inicial >= pro-pla.dt-inicio
     2222                      then do:
     2223                             RUN escrever-log("@@@@@CRIA-MODULOS P7").
     2224                             assign lg-relat-erro = yes.
     2225                             run pi-grava-erro ("Data de inicio nao pode ser superior a data de inicio do mod. ja cadast. Mod:" + string(import-modul-propost.cd-modulo,"999")).
     2226                           END.
     2227                    end.
     2228               else do:
     2229                      RUN escrever-log("@@@@@CRIA-MODULOS P8").
     2230                      if  import-modul-propost.dat-inicial >= pro-pla.dt-inicio             
     2231                      and import-modul-propost.dat-inicial <= pro-pla.dt-cancelamento
     2232                      then DO:
     2233                             RUN escrever-log("@@@@@CRIA-MODULOS P9").
     2234                             assign lg-relat-erro = yes.
     2235                             run pi-grava-erro ("Data de vigencia do modulo nao pode sobrepor a de um mesmo modulo cadastrado. Mod:" + string(import-modul-propost.cd-modulo,"999")).
     2236                           END.
     2237   
     2238                      if  import-modul-propost.dat-cancel >= pro-pla.dt-inicio             
     2239                      and import-modul-propost.dat-cancel <= pro-pla.dt-cancelamento
     2240                      then do:
     2241                             RUN escrever-log("@@@@@CRIA-MODULOS P10").
     2242                             assign lg-relat-erro = yes. 
     2243                             run pi-grava-erro ("Data de vigencia do modulo nao pode sobrepor a de um mesmo modulo cadastrado. Mod:" + string(import-modul-propost.cd-modulo,"999")).
     2244                           END.
     2245                    end. 
     2246           end.
     2247   
     2248           RUN escrever-log("@@@@@CRIA-MODULOS P11").
     2249   
     2250           IF lg-relat-erro 
     2251           THEN do:
     2252                  RUN escrever-log("@@@@@CRIA-MODULOS P12 - SAINDO COM ERRO").
     2253                  ASSIGN lg-relat-erro-aux = YES.
     2254                  NEXT.
     2255                END.
     2256   
     2257           find mod-cob where mod-cob.cd-modulo = import-modul-propost.cd-modulo no-lock no-error.
     2258           
     2259           RUN escrever-log("@@@@@CRIA-MODULOS P13 - ACHOU MOD-COB " + STRING(import-modul-propost.cd-modulo) + " " + STRING(AVAIL mod-cob)).
     2260   
     2261           IF lg-gerar-termo-aux
     2262           AND AVAIL ter-ade
     2263           THEN DO:
     2264                  /* -------- TESTAR PROPOSTA CANCELADA OU PEA ---------- */
     2265                  if   propost.dt-libera-doc <> ?
     2266                  then do:
     2267                          if   propost.dt-libera-doc < today
     2268                          then assign cd-sit-modulo-aux = 90.
     2269                          else assign cd-sit-modulo-aux = 7.
     2270                  
     2271                          RUN escrever-log("@@@@@CRIA-MODULOS P14").
     2272                          assign dt-fim-aux = propost.dt-libera-doc.
     2273                       end.
     2274                  else do:
     2275                         if   import-modul-propost.dat-cancel = ?
     2276                         then assign cd-sit-modulo-aux = 7
     2277                                     dt-fim-aux        = ter-ade.dt-fim.
     2278                         else do:
     2279                                if   import-modul-propost.dat-cancel < today
     2280                                then assign cd-sit-modulo-aux = 90.
     2281                                else assign cd-sit-modulo-aux = 7.
     2282                  
     2283                                RUN escrever-log("@@@@@CRIA-MODULOS P15").
     2284                                assign dt-fim-aux = ter-ade.dt-fim.
     2285                              end.
     2286                       end.
     2287                  
     2288                  if   import-modul-propost.dat-inicial <> ?
     2289                  THEN assign dt-inicio-aux = import-modul-propost.dat-inicial.
     2290                  ELSE assign dt-inicio-aux = ter-ade.dt-inicio.
     2291                END.
     2292           ELSE DO:
     2293                  ASSIGN cd-sit-modulo-aux = 1
     2294                         dt-fim-aux        = b-import-propost.dat-fim-propost
     2295                         dt-inicio-aux     = import-modul-propost.dat-inicial.
     2296                  RUN escrever-log("@@@@@CRIA-MODULOS P16").
     2297                END.
     2298   
     2299           RUN escrever-log("@@@@@CRIA-MODULOS P17").
     2300   
     2301           if   not pla-mod.lg-obrigatorio
     2302           THEN DO:
     2303                  if in-classif = 2
     2304                  OR in-classif = 3
     2305                  then do:
     2306                         RUN escrever-log("@@@@@CRIA-MODULOS P18 - CRIANDO PRO-PLA - PLA-MOD OPCIONAL").
     2307   
     2308                         create pro-pla.
     2309                         assign pro-pla.cd-modalidade              = b-import-propost.cd-modalidade
     2310                                pro-pla.cd-plano                   = b-import-propost.cd-plano
     2311                                pro-pla.cd-tipo-plano              = b-import-propost.cd-tipo-plano
     2312                                pro-pla.cd-modulo                  = import-modul-propost.cd-modulo
     2313                                pro-pla.nr-proposta                = nr-proposta-aux
     2314                                pro-pla.cd-forma-pagto             = import-modul-propost.cd-forma-pagto                         
     2315                                pro-pla.in-cobra-participacao      = import-modul-propost.in-cobra-participacao 
     2316                                pro-pla.in-responsavel-autorizacao = import-modul-propost.ind-respons-autoriz 
     2317                                              
     2318                                pro-pla.dt-atualizacao             = today
     2319                                pro-pla.cd-userid                  = v_cod_usuar_corren
     2320                                                              
     2321                                pro-pla.dt-mov-inclusao            = today
     2322                                pro-pla.cd-userid-inclusao         = v_cod_usuar_corren
     2323                                pro-pla.nr-dias                    = import-modul-propost.nr-dias
     2324                                pro-pla.lg-bonifica-penaliza       = import-modul-propost.log-bonif-penalid.
     2325                         
     2326                         case import-modul-propost.in-ctrl-carencia-proced:
     2327                              when 0 /* Sem carencia por procedimento */
     2328                              then assign pro-pla.in-ctrl-carencia-proced = import-modul-propost.in-ctrl-carencia-proced.
     2329           
     2330                              when 1 /* Carencia de procedimento por modulo */
     2331                              then assign pro-pla.in-ctrl-carencia-proced = import-modul-propost.in-ctrl-carencia-proced
     2332                                          pro-pla.qt-caren-eletiva        = import-modul-propost.qt-caren-eletiva       
     2333                                          pro-pla.qt-caren-urgencia       = import-modul-propost.qt-caren-urgencia.
     2334           
     2335                              when 2 /* Carencia de procedimento por procedimento */
     2336                              then assign pro-pla.in-ctrl-carencia-proced = import-modul-propost.in-ctrl-carencia-proced.
     2337                         end case.
     2338           
     2339                         assign pro-pla.lg-carencia              = import-modul-propost.log-carenc
     2340                                pro-pla.lg-cobertura-obrigatoria = /*import-modul-propost.log-cobert-obrig*/ pla-mod.lg-obrigatorio
     2341                                pro-pla.dt-inicio                = dt-inicio-aux
     2342                                pro-pla.dt-cancelamento          = import-modul-propost.dat-cancel
     2343                                pro-pla.cd-motivo-cancel         = import-modul-propost.cd-motivo-cancel
     2344                                pro-pla.dt-fim                   = dt-fim-aux
     2345                                pro-pla.cd-sit-modulo            = cd-sit-modulo-aux.
     2346                         
     2347                         if   import-modul-propost.dat-cancel <> ?
     2348                         then assign pro-pla.dt-mov-exclusao    = today
     2349                                     pro-pla.cd-userid-exclusao = v_cod_usuar_corren.
     2350   
     2351                         RUN escrever-log("@@@@@CRIA-MODULOS P19 - FIM DA CRIACAO PRO-PLA").
     2352                       end. 
     2353                END.
     2354           ELSE IF in-classif = 1
     2355                or in-classif = 3 
     2356                THEN DO:
     2357                       if   b-import-propost.cd-forma-pagto = 1
     2358                       or   b-import-propost.cd-forma-pagto = 2
     2359                       then do: 
     2360   
     2361                              RUN escrever-log("@@@@@CRIA-MODULOS P20 - CREATE PRO-PLA - PLA-MOD OBRIGATORIO").
     2362   
     2363                              create pro-pla.
     2364                              assign pro-pla.cd-modalidade           = b-import-propost.cd-modalidade
     2365                                     pro-pla.cd-plano                = b-import-propost.cd-plano
     2366                                     pro-pla.cd-tipo-plano           = b-import-propost.cd-tipo-plano
     2367                                     pro-pla.cd-modulo               = pla-mod.cd-modulo
     2368                                     pro-pla.nr-proposta             = nr-proposta-aux
     2369                                     pro-pla.cd-forma-pagto          = b-import-propost.cd-forma-pagto
     2370                                     pro-pla.lg-carencia             = yes
     2371                                     pro-pla.lg-cobertura-obrigato   = yes
     2372                                     pro-pla.in-ctrl-carencia-proced = import-modul-propost.in-ctrl-carencia-proced
     2373                                     pro-pla.in-ctrl-carencia-insumo = import-modul-propost.in-ctrl-carencia-insumo
     2374                                     pro-pla.dt-inicio               = dt-inicio-aux
     2375                                     pro-pla.dt-cancelamento         = import-modul-propost.dat-cancel
     2376                                     pro-pla.dt-fim                  = dt-fim-aux
     2377                                     pro-pla.in-cobra-participacao   = import-modul-propost.in-cobra-participacao
     2378                                     pro-pla.in-responsavel-autori   = import-modul-propost.ind-respons-autoriz
     2379                                     pro-pla.dt-atualizacao          = today
     2380                                     pro-pla.cd-userid               = v_cod_usuar_corren
     2381                                     pro-pla.dt-mov-inclusao         = today
     2382                                     pro-pla.cd-userid-inclusao      = v_cod_usuar_corren
     2383                                     pro-pla.cd-sit-modulo            = cd-sit-modulo-aux.
     2384                              
     2385                              if mod-cob.in-ctrl-carencia-proced = 1
     2386                              or mod-cob.in-ctrl-carencia-insumo = 1
     2387                              then assign pro-pla.qt-caren-eletiva  = import-modul-propost.qt-caren-eletiva 
     2388                                          pro-pla.qt-caren-urgencia = import-modul-propost.qt-caren-urgencia.
     2389                              else assign pro-pla.qt-caren-eletiva  = 0 
     2390                                          pro-pla.qt-caren-urgencia = 0.
     2391                              
     2392                              if   b-import-propost.dat-fim-propost = ?
     2393                              then.
     2394                              else assign pro-pla.dt-mov-exclusao    = today
     2395                                          pro-pla.cd-userid-exclusao = v_cod_usuar_corren.
     2396   
     2397                              RUN escrever-log("@@@@@CRIA-MODULOS P21 - FIM DE CREATE PRO-PLA").
     2398                            END.
     2399   
     2400                       if   b-import-propost.cd-forma-pagto = 3
     2401                       then do:
     2402                              RUN escrever-log("@@@@@CRIA-MODULOS P22 - FIND PLAMOFOR").
     2403                              find plamofor where plamofor.cd-modalidade = b-import-propost.cd-modalidade
     2404                                              and plamofor.cd-plano      = b-import-propost.cd-plano
     2405                                              and plamofor.cd-tipo-plano = b-import-propost.cd-tipo-plano
     2406                                              and plamofor.cd-modulo     = pla-mod.cd-modulo
     2407                                                  no-lock no-error.
     2408                              if avail plamofor
     2409                              THEN DO:
     2410                                     RUN escrever-log("@@@@@CRIA-MODULOS P23 - PLAMOFOR").
     2411                                     create pro-pla.
     2412                                     assign pro-pla.cd-modalidade            = b-import-propost.cd-modalidade
     2413                                            pro-pla.cd-plano                 = b-import-propost.cd-plano
     2414                                            pro-pla.cd-tipo-plano            = b-import-propost.cd-tipo-plano
     2415                                            pro-pla.cd-modulo                = plamofor.cd-modulo
     2416                                            pro-pla.nr-proposta              = nr-proposta-aux
     2417                                            pro-pla.cd-forma-pagto           = plamofor.cd-forma-pagto
     2418                                            pro-pla.lg-carencia              = yes
     2419                                            pro-pla.lg-cobertura-obrigatoria = yes
     2420                                            pro-pla.in-ctrl-carencia-proced  = import-modul-propost.in-ctrl-carencia-proced
     2421                                            pro-pla.in-ctrl-carencia-insumo  = import-modul-propost.in-ctrl-carencia-insumo
     2422                                            pro-pla.qt-caren-eletiva         = import-modul-propost.qt-caren-eletiva 
     2423                                            pro-pla.qt-caren-urgencia        = import-modul-propost.qt-caren-urgencia
     2424                                            pro-pla.in-cobra-participacao    = import-modul-propost.in-cobra-participacao
     2425                                            pro-pla.in-responsavel-autori    = import-modul-propost.ind-respons-autoriz  
     2426                                            pro-pla.dt-inicio                = dt-inicio-aux
     2427                                            pro-pla.dt-cancelamento          = import-modul-propost.dat-cancel
     2428                                            pro-pla.dt-fim                   = dt-fim-aux
     2429                                            pro-pla.dt-atualizacao           = today
     2430                                            pro-pla.cd-userid                = v_cod_usuar_corren
     2431                                            pro-pla.dt-mov-inclusao          = today
     2432                                            pro-pla.cd-userid-inclusao       = v_cod_usuar_corren
     2433                                            pro-pla.cd-sit-modulo            = cd-sit-modulo-aux.
     2434                                     
     2435                                      if   b-import-propost.dat-fim-propost = ?
     2436                                      then.
     2437                                      else assign pro-pla.dt-mov-exclusao    = today
     2438                                                  pro-pla.cd-userid-exclusao = v_cod_usuar_corren. 
     2439                                      RUN escrever-log("@@@@@CRIA-MODULOS P24 - FIM CREATE PRO-PLA DA PLAMOFOR").
     2440                                   END.
     2441                            END.
     2442                END.          
     2443       END. /*import-modul-propost*/
     2444   
     2445       /**
     2446        * GARANTIR QUE CRIOU TODOS OS PRO-PLA NECESSARIOS.
     2447        */
     2448       FOR FIRST import-modul-propost NO-LOCK
     2449           where import-modul-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost
     2450             AND NOT CAN-FIND(FIRST pro-pla
     2451                              WHERE pro-pla.cd-modalidade = b-import-propost.cd-modalidade
     2452                                AND pro-pla.nr-proposta   = nr-proposta-aux 
     2453                                AND pro-pla.cd-modulo     = import-modul-propost.cd-modulo):
     2454   
     2455                 RUN escrever-log("@@@@@CRIA-MODULOS P26 - NAO CRIOU PRO-PLA!!!").
     2456                 assign lg-relat-erro = yes. 
     2457                 run pi-grava-erro ("Nao conseguiu criar PRO-PLA: " + string(import-modul-propost.cd-modulo,"999") 
     2458                                    + " Modalidade: " + STRING(b-import-propost.cd-modalidade)
     2459                                    + " Proposta: "   + STRING(nr-proposta-aux)).
     2460       END.
     2461   
     2462       /**
     2463        * GARANTIR QUE A PROPOSTA TEM TODOS OS MODULOS DOS BENEFICIARIOS.
     2464        
     2465       FOR FIRST import-modul-bnfciar
     2466           WHERE import-modul-bnfciar.
     2467           
     2468           
     2469           
     2470           import-modul-propost NO-LOCK
     2471           where import-modul-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost
     2472             AND NOT CAN-FIND(FIRST pro-pla
     2473                              WHERE pro-pla.cd-modalidade = b-import-propost.cd-modalidade
     2474                                AND pro-pla.nr-proposta   = nr-proposta-aux 
     2475                                AND pro-pla.cd-modulo     = import-modul-propost.cd-modulo):
     2476   
     2477                 RUN escrever-log("@@@@@CRIA-MODULOS P26 - NAO CRIOU PRO-PLA!!!").
     2478                 assign lg-relat-erro = yes. 
     2479                 run pi-grava-erro ("Nao conseguiu criar PRO-PLA: " + string(import-modul-propost.cd-modulo,"999") 
     2480                                    + " Modalidade: " + STRING(b-import-propost.cd-modalidade)
     2481                                    + " Proposta: "   + STRING(nr-proposta-aux)).
     2482       END.
     2483       */
     2484   
     2485       RUN escrever-log("@@@@@CRIA-MODULOS P25 - SAINDO DE CRIA-MODULOS").
     2486   
     2487       IF lg-relat-erro 
     2488       THEN do:
     2489              RUN escrever-log("@@@@@CRIA-MODULOS P30 - SAINDO COM ERRO").
     2490              ASSIGN lg-relat-erro-aux = YES.
     2491              NEXT.
     2492            END.
     2493   
     2494   END PROCEDURE.
     2495   
     2496   PROCEDURE cria-lotacao:
     2497   
     2498       IF b-import-propost.in-tipo-natureza = 3 /* EMPRESARIAL */
     2499       THEN 
     2500               FOR EACH import-lotac-propost FIELDS (cdn-lotac
     2501                                                     cdn-respons-financ
     2502                                                     num-livre-3)
     2503                  WHERE import-lotac-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost 
     2504                    AND import-lotac-propost.cdn-lotac <> 0 NO-LOCK QUERY-TUNING (NO-INDEX-HINT):
     2505   
     2506                   CREATE lotac-propost.
     2507                   ASSIGN lotac-propost.cdn-modalid        = b-import-propost.cd-modalidade
     2508                          lotac-propost.num-propost        = nr-proposta-aux
     2509                          lotac-propost.cdn-lotac          = import-lotac-propost.cdn-lotac
     2510                          lotac-propost.cdn-respons-financ = import-lotac-propost.cdn-respons-financ
     2511                          lotac-propost.num-livre-1        = import-lotac-propost.num-livre-3. /*NRDIA_DE_VENCIMENTO*/
     2512               END.
     2513   
     2514   END PROCEDURE.
     2515   
     2516   PROCEDURE cria-faixas:
     2517   
     2518       ASSIGN lg-relat-erro-aux = NO.
     2519   
     2520       FOR EACH import-faixa-propost FIELDS (cd-grau-parentesco nr-faixa-etaria num-idade-min num-idade-max qtd-fator-multiplic qtd-fator-multiplic-inscr)
     2521          WHERE import-faixa-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost NO-LOCK QUERY-TUNING (NO-INDEX-HINT):
     2522   
     2523           IF lg-relat-erro
     2524           THEN LEAVE.
     2525   
     2526           FOR FIRST teadgrpa FIELDS (nr-faixa-etaria)
     2527               where teadgrpa.cd-modalidade      = b-import-propost.cd-modalidade
     2528                 and teadgrpa.nr-proposta        = nr-proposta-aux
     2529                 and teadgrpa.cd-grau-parentesco = import-faixa-propost.cd-grau-parentesco
     2530                 and teadgrpa.nr-faixa-etaria   <> import-faixa-propost.nr-faixa-etaria 
     2531                 AND teadgrpa.nr-idade-minima   <= import-faixa-propost.num-idade-max 
     2532                 AND teadgrpa.nr-idade-maxima   >= import-faixa-propost.num-idade-min NO-LOCK:
     2533   
     2534               run pi-grava-erro ("Faixa Etaria Sobreposta - Tabela ImportaÆo Grau: " + string(import-faixa-propost.cd-grau-parentesco,"99") + 
     2535                                  " Faixa: "       + string(import-faixa-propost.nr-faixa-etaria,"99")      + 
     2536                                  " Base - Grau: " + string(import-faixa-propost.cd-grau-parentesco,"99")   + 
     2537                                  " Faixa: "       + string(teadgrpa.nr-faixa-etaria,"99")).
     2538               assign lg-relat-erro = yes.
     2539           END.
     2540   
     2541           IF lg-relat-erro 
     2542           THEN do:
     2543                  ASSIGN lg-relat-erro-aux = YES.
     2544                  LEAVE.
     2545                END.
     2546   
     2547           IF NOT CAN-FIND (first teadgrpa 
     2548                            where teadgrpa.cd-modalidade      = b-import-propost.cd-modalidade
     2549                              and teadgrpa.nr-proposta        = nr-proposta-aux
     2550                              and teadgrpa.cd-grau-parentesco = import-faixa-propost.cd-grau-parentesco
     2551                              and teadgrpa.nr-faixa-etaria    = import-faixa-propost.nr-faixa-etaria)
     2552           THEN do:
     2553                  create teadgrpa.
     2554                  assign teadgrpa.cd-modalidade          = b-import-propost.cd-modalidade
     2555                         teadgrpa.nr-proposta            = nr-proposta-aux
     2556                         teadgrpa.cd-grau-parentesco     = import-faixa-propost.cd-grau-parentesco
     2557                         teadgrpa.nr-faixa-etaria        = import-faixa-propost.nr-faixa-etaria
     2558                         teadgrpa.nr-idade-minima        = import-faixa-propost.num-idade-min
     2559                         teadgrpa.nr-idade-maxima        = import-faixa-propost.num-idade-max
     2560                         teadgrpa.qt-fator-multiplicador = import-faixa-propost.qtd-fator-multiplic
     2561                         teadgrpa.qt-fat-mult-inscr      = import-faixa-propost.qtd-fator-multiplic-inscr
     2562                         teadgrpa.lg-inclusao            = yes
     2563                         teadgrpa.dt-atualizacao         = today
     2564                         teadgrpa.cd-userid              = v_cod_usuar_corren.  
     2565           END.
     2566       END.
     2567   
     2568   END PROCEDURE.
     2569   
     2570   PROCEDURE cria-negoc-repas:
     2571   
     2572       FOR EACH import-negociac-propost 
     2573          where import-negociac-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost no-lock :
     2574   
     2575           /* ------------------------------------------------------------------------- */
     2576           FOR FIRST propunim EXCLUSIVE-LOCK
     2577               where propunim.cd-modalidade = b-import-propost.cd-modalidade
     2578                 and propunim.nr-proposta   = nr-proposta-aux
     2579                 and propunim.cd-unimed     = import-negociac-propost.cd-unimed:
     2580           END.
     2581           IF NOT AVAIL propunim
     2582           then do:
     2583                  create propunim.
     2584                  assign propunim.cd-modalidade  = b-import-propost.cd-modalidade
     2585                         propunim.nr-proposta    = nr-proposta-aux
     2586                         propunim.cd-unimed      = import-negociac-propost.cd-unimed.
     2587                END.
     2588   
     2589           ASSIGN propunim.cd-plano              = import-negociac-propost.cd-plano
     2590                  propunim.cd-tipo-plano         = import-negociac-propost.cd-tipo-plano
     2591                  propunim.cd-forma-pagto        = import-negociac-propost.cd-forma-pagto
     2592                  propunim.um-carencia           = import-negociac-propost.um-carencia
     2593                  propunim.qt-carencia           = import-negociac-propost.qt-carencia
     2594                  propunim.cd-tab-preco          = import-negociac-propost.cd-tab-preco
     2595                  propunim.cd-tab-preco-proc     = import-negociac-propost.cd-tab-preco-proc
     2596                  propunim.cd-tipo-vencimento    = import-negociac-propost.cdn-tip-vencto
     2597                  propunim.dd-vencimento         = import-negociac-propost.num-dia-vencto
     2598                  propunim.pc-insc-acrescimo     = import-negociac-propost.pc-acrescimo-inscr
     2599                  propunim.pc-insc-desconto      = import-negociac-propost.pc-desconto-inscr
     2600                  propunim.pc-desconto           = import-negociac-propost.pc-desconto
     2601                  propunim.pc-acrescimo          = import-negociac-propost.pc-acrescimo
     2602                  propunim.dt-inicio-rep         = import-negociac-propost.dat-inic-repas
     2603                  propunim.dt-cancelamento       = import-negociac-propost.dat-fim-repas
     2604                  propunim.mm-ult-rep            = import-negociac-propost.num-mes-ult-repas
     2605                  propunim.aa-ult-rep            = import-negociac-propost.aa-ult-repasse
     2606                  propunim.dt-atualizacao        = today
     2607                  propunim.cd-userid             = v_cod_usuar_corren
     2608                  propunim.lg-impressao-carteira = import-negociac-propost.log-impres-cart
     2609                  propunim.lg-calc-valor         = import-negociac-propost.log-calc-val             
     2610                  propunim.lg-repassar           = import-negociac-propost.log-repas
     2611                  propunim.in-exporta-repasse    = 1 /* Exportar A100 */ .  
     2612                 
     2613           if import-negociac-propost.in-tipo-valorizacao = 1
     2614           then assign propunim.lg-tipo-valorizacao-co = yes.
     2615           else assign propunim.lg-tipo-valorizacao-co = no.
     2616   
     2617           IF lg-gerar-termo-aux
     2618           THEN DO:
     2619                  FOR FIRST ter-ade FIELDS (dt-fim) NO-LOCK
     2620                      WHERE ter-ade.cd-modalidade = propost.cd-modalidade
     2621                        AND ter-ade.nr-ter-adesao = propost.nr-ter-adesao:
     2622   
     2623                            /* --------- TESTAR PROPOSTA CANCELADA OU PEA --------- */
     2624                            if   propost.dt-libera-doc <> ?
     2625                            then assign propunim.dt-fim-rep = propost.dt-libera-doc.
     2626                            else assign propunim.dt-fim-rep = ter-ade.dt-fim.
     2627                            
     2628                            assign propunim.cd-userid      = v_cod_usuar_corren
     2629                                   propunim.dt-atualizacao = today.
     2630                  END.
     2631                END.
     2632       END.
     2633   
     2634   END PROCEDURE.
     2635   
     2636   PROCEDURE cria-cobertura:
     2637   
     2638       RUN escrever-log("@@@@@@@@@@entrando em CRIA-COBERTURA. b-import-propost.num-seqcial-propost: " + string(b-import-propost.num-seqcial-propost)).
     2639   
     2640       FOR EACH import-padr-cobert-propost where import-padr-cobert-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost no-lock :
     2641   
     2642           RUN escrever-log("@@@@@@@@@@import-padr-cobert-propost.num-seqcial-propost: " + string(import-padr-cobert-propost.num-seqcial-propost)).
     2643   
     2644           IF NOT CAN-FIND (first pro-pla use-index pro-pla3
     2645                            where pro-pla.cd-modalidade   = b-import-propost.cd-modalidade
     2646                              and pro-pla.nr-proposta     = nr-proposta-aux
     2647                              and pro-pla.cd-modulo       = import-padr-cobert-propost.cd-modulo)
     2648           then do:
     2649                  RUN escrever-log("@@@@@@@@@@import-padr-cobert-propost.num-seqcial-propost(NAO ACHOU PRO-PLA. NEXT): " + string(import-padr-cobert-propost.num-seqcial-propost)).
     2650                  NEXT.
     2651                END.
     2652   
     2653           RUN escrever-log("@@@@@@@@@@ P2 import-padr-cobert-propost.num-seqcial-propost: " + string(import-padr-cobert-propost.num-seqcial-propost)).
     2654   
     2655           IF NOT CAN-FIND (FIRST propcopa 
     2656                            where propcopa.cd-modalidade       = b-import-propost.cd-modalidade
     2657                              and propcopa.nr-proposta         = nr-proposta-aux
     2658                              and propcopa.cd-padrao-cobertura = import-padr-cobert-propost.cd-padrao-cobertura
     2659                              and propcopa.cd-modulo           = import-padr-cobert-propost.cd-modulo)
     2660           then DO:
     2661   
     2662                  RUN escrever-log("@@@@@@@@@@ create PROPCOPA. modalidade: " + string(b-import-propost.cd-modalidade) 
     2663                                   + " proposta: " + STRING(nr-proposta-aux)  + "padrao: " + STRING(import-padr-cobert-propost.cd-padrao-cobertura)
     2664                                   + " modulo: " + STRING(import-padr-cobert-propost.cd-modulo)).
     2665   
     2666                  create propcopa.
     2667                  assign propcopa.cd-modalidade        = b-import-propost.cd-modalidade
     2668                         propcopa.nr-proposta          = nr-proposta-aux
     2669                         propcopa.cd-padrao-cobertura  = import-padr-cobert-propost.cd-padrao-cobertura
     2670                         propcopa.cd-modulo            = import-padr-cobert-propost.cd-modulo
     2671                         propcopa.pc-acrescimo-inscr   = import-padr-cobert-propost.pc-acrescimo-inscr
     2672                         propcopa.pc-desconto-inscr    = import-padr-cobert-propost.pc-desconto-inscr
     2673                         propcopa.pc-acresc-taxa       = import-padr-cobert-propost.pc-acresc-taxa
     2674                         propcopa.pc-desconto-taxa     = import-padr-cobert-propost.pc-desconto-taxa
     2675                         propcopa.nr-dias-bonificacao  = import-padr-cobert-propost.num-dias-bonifi
     2676                         propcopa.lg-inclusao          = yes
     2677                         propcopa.dt-atualizacao       = today
     2678                         propcopa.cd-userid            = v_cod_usuar_corren.
     2679                END.
     2680   
     2681           /*find modalid where modalid.cd-modalidade = b-import-propost.cd-modalidade no-lock no-error.
     2682           
     2683           IF AVAIL modalid
     2684           AND modalid.in-geracao-termo = 2
     2685           AND NOT CAN-FIND (first tegrpaco 
     2686                             where tegrpaco.cd-modalidade       = b-import-propost.cd-modalidade
     2687                               and tegrpaco.nr-ter-adesao       = nr-proposta-aux
     2688                               and tegrpaco.cd-padrao-cobertura = import-padr-cobert-propost.cd-padrao-cobertura
     2689                               and tegrpaco.cd-grau-parentesco  = import-padr-cobert-propost.cd-grau-parentesco
     2690                               and tegrpaco.nr-faixa-etaria     = import-padr-cobert-propost.nr-faixa-etaria)
     2691           then do:
     2692                  create tegrpaco.                                                                       
     2693                  assign tegrpaco.cd-modalidade       = b-import-propost.cd-modalidade                  
     2694                         tegrpaco.nr-ter-adesao       = nr-proposta-aux                                 
     2695                         tegrpaco.cd-padrao-cobertura = import-padr-cobert-propost.cd-padrao-cobertura
     2696                         tegrpaco.cd-grau-parentesco  = import-padr-cobert-propost.cd-grau-parentesco 
     2697                         tegrpaco.nr-faixa-etaria     = import-padr-cobert-propost.nr-faixa-etaria 
     2698                         tegrpaco.lg-inclusao         = yes
     2699                         tegrpaco.qt-fator-mult-mens  = import-padr-cobert-propost.qt-fator-mensalidade
     2700                         tegrpaco.qt-fator-mult-inscr = import-padr-cobert-propost.qt-fator-inscricao
     2701                         tegrpaco.int-1               = import-padr-cobert-propost.nr-faixa-etaria-ini
     2702                         tegrpaco.int-2               = import-padr-cobert-propost.nr-faixa-etaria-fim
     2703                         tegrpaco.dt-atualizacao      = today              
     2704                         tegrpaco.cd-userid           = v_cod_usuar_corren. 
     2705                END.*/
     2706   
     2707       END.
     2708   
     2709       RUN escrever-log("@@@@@@@@@@saindo de CRIA-COBERTURA").
     2710   END PROCEDURE.
     2711   
     2712   PROCEDURE cria-campos-espec:
     2713   
     2714       FOR EACH import-campos-propost where import-campos-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost no-lock :
     2715   
     2716           IF NOT CAN-FIND (FIRST campprop
     2717                            where campprop.cd-modalidade = b-import-propost.cd-modalidade
     2718                              and campprop.nr-proposta   = nr-proposta-aux)
     2719           then do:
     2720                  create campprop.
     2721                  assign campprop.nr-insc-contratante     = tt-import-propost.nr-insc-contrat
     2722                         campprop.cd-modalidade           = b-import-propost.cd-modalidade
     2723                         campprop.nr-proposta             = nr-proposta-aux
     2724                         campprop.ds-campo[1]             = import-campos-propost.des-campo-1
     2725                         campprop.ds-mascara[1]           = import-campos-propost.des-mascar-1
     2726                         campprop.ds-campo[2]             = import-campos-propost.des-campo-2
     2727                         campprop.ds-mascara[2]           = import-campos-propost.des-mascar-2
     2728                         campprop.ds-campo[3]             = import-campos-propost.des-campo-3
     2729                         campprop.ds-mascara[3]           = import-campos-propost.des-mascar-3
     2730                         campprop.ds-campo[4]             = import-campos-propost.des-campo-4
     2731                         campprop.ds-mascara[4]           = import-campos-propost.des-mascar-4
     2732                         campprop.cd-userid               = v_cod_usuar_corren
     2733                         campprop.dt-atualizacao          = today
     2734                         campprop.lg-obriga-digitacao[1]  = import-campos-propost.log-obrig-digitac-1
     2735                         campprop.lg-obriga-digitacao[2]  = import-campos-propost.log-obrig-digitac-2
     2736                         campprop.lg-obriga-digitacao[3]  = import-campos-propost.log-obrig-digitac-3
     2737                         campprop.lg-obriga-digitacao[4]  = import-campos-propost.log-obrig-digitac-4
     2738                         campprop.lg-consiste-dados[1]    = import-campos-propost.log-consist-dados-1
     2739                         campprop.lg-consiste-dados[2]    = import-campos-propost.log-consist-dados-2
     2740                         campprop.lg-consiste-dados[3]    = import-campos-propost.log-consist-dados-3
     2741                         campprop.lg-consiste-dados[4]    = import-campos-propost.log-consist-dados-4.
     2742   
     2743                END.
     2744       END.
     2745   
     2746   END PROCEDURE.
     2747   
     2748   PROCEDURE cria-proced-propost:
     2749   
     2750       FOR EACH import-proced-propost where import-proced-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost no-lock :
     2751   
     2752           FOR FIRST pro-pla FIELDS (cd-forma-pagto dt-inicio) use-index pro-pla3
     2753               where pro-pla.cd-modalidade   = b-import-propost.cd-modalidade
     2754                 and pro-pla.nr-proposta     = nr-proposta-aux
     2755                 and pro-pla.cd-modulo       = import-proced-propost.cd-modulo NO-LOCK:
     2756           END.
     2757   
     2758           if   not avail pro-pla
     2759           then NEXT.
     2760   
     2761           IF import-proced-propost.dt-inicial < pro-pla.dt-inicio
     2762           then do:
     2763                  ASSIGN lg-relat-erro = YES.
     2764                  RUN pi-grava-erro("Data de inicio do procedimento menor que a data de inicio do modulo na proposta").
     2765                END.
     2766           
     2767           /* ---------------------- VERIFICA TABELA DE MOEDAS/CARENCIA ATIVA --- */
     2768           if   import-proced-propost.dt-cancela = ?                              
     2769           then do:
     2770                  IF NOT CAN-FIND (first precproc 
     2771                                   where precproc.cd-tab-preco   = import-proced-propost.cd-tab-preco
     2772                                     and precproc.cd-forma-pagto = pro-pla.cd-forma-pagto
     2773                                     and precproc.dt-limite     >= import-proced-propost.dt-inicial)
     2774           
     2775                  THEN IF NOT CAN-FIND (first precproc 
     2776                                        where precproc.cd-tab-preco   = import-proced-propost.cd-tab-preco
     2777                                          and precproc.cd-forma-pagto = pro-pla.cd-forma-pagto
     2778                                          and precproc.dt-limite     >= import-proced-propost.dt-cancela)
     2779                       then DO:
     2780                              ASSIGN lg-relat-erro = YES.
     2781                              RUN pi-grava-erro("Data de inicio do procedimento menor que a data de inicio do modulo na proposta").  
     2782                            END.
     2783                END.
     2784   
     2785           IF lg-relat-erro
     2786           THEN DO:
     2787                  ASSIGN lg-relat-erro-aux = YES.
     2788                  NEXT.
     2789                END.
     2790   
     2791           FOR FIRST pr-mo-am 
     2792               where pr-mo-am.cd-modalidade    = b-import-propost.cd-modalidade
     2793                 and pr-mo-am.nr-proposta      = nr-proposta-aux
     2794                 and pr-mo-am.cd-modulo        = import-proced-propost.cd-modulo
     2795                 and pr-mo-am.cd-amb           = import-proced-propost.cd-amb
     2796                 and (pr-mo-am.dt-cancelamento > today
     2797                  or pr-mo-am.dt-cancelamento  = ?) EXCLUSIVE-LOCK:
     2798           END.
     2799           IF NOT AVAIL pr-mo-am
     2800           then do:
     2801                  create pr-mo-am.
     2802                  assign pr-mo-am.cd-modalidade           = b-import-propost.cd-modalidade
     2803                         pr-mo-am.nr-proposta             = nr-proposta-aux
     2804                         pr-mo-am.cd-modulo               = import-proced-propost.cd-modulo
     2805                         pr-mo-am.cd-amb                  = import-proced-propost.cd-amb
     2806                         pr-mo-am.dt-cancelamento         = import-proced-propost.dt-cancela.
     2807                END.
     2808   
     2809           ASSIGN pr-mo-am.cd-tab-preco            = import-proced-propost.cd-tab-preco
     2810                  pr-mo-am.dt-inicio               = import-proced-propost.dt-inicial
     2811                  pr-mo-am.nr-dias-validade        = import-proced-propost.nr-dias-validade
     2812                  pr-mo-am.int-2                   = import-proced-propost.qt-procedimento
     2813                  pr-mo-am.cd-userid               = v_cod_usuar_corren
     2814                  pr-mo-am.dt-atualizacao          = today
     2815                  pr-mo-am.lg-acrescimo-cobertura  = import-proced-propost.log-acresc-cobert.
     2816   
     2817           IF lg-gerar-termo-aux
     2818           AND AVAIL ter-ade
     2819           THEN DO:
     2820                 /* ------ TESTAR PROPOSTA CANCELADA OU PEA ---------- */
     2821                 if   propost.dt-libera-doc <> ?
     2822                 then assign pr-mo-am.dt-fim = propost.dt-libera-doc.
     2823                 else do:
     2824                        if   pr-mo-am.dt-cancelamento <> ?
     2825                        then assign pr-mo-am.dt-fim = propost.dt-libera-doc.
     2826                        else assign pr-mo-am.dt-fim = ter-ade.dt-fim.
     2827                      end.
     2828                END.
     2829           ELSE pr-mo-am.dt-fim = ?.
     2830       END.
     2831   
     2832   END PROCEDURE.
     2833   
     2834   PROCEDURE cria-mo:
     2835   
     2836       FOR EACH import-mo-propost where import-mo-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost no-lock :
     2837   
     2838           IF NOT CAN-FIND (FIRST depsetse 
     2839                            where depsetse.cd-modalidade   = b-import-propost.cd-modalidade
     2840                              and depsetse.nr-proposta     = nr-proposta-aux
     2841                              and depsetse.cd-departamento = import-mo-propost.cd-departamento
     2842                              and depsetse.cd-secao        = import-mo-propost.cd-secao
     2843                              and depsetse.cd-setor        = import-mo-propost.cd-setor)
     2844           then do:
     2845                  /*----- CRIA DEPSETSE ------------------------------------------------*/
     2846                  create depsetse.
     2847                  assign depsetse.cd-modalidade    = b-import-propost.cd-modalidade
     2848                         depsetse.nr-proposta      = nr-proposta-aux
     2849                         depsetse.nr-ter-adesao    = propost.nr-ter-adesao
     2850                         depsetse.cd-departamento  = import-mo-propost.cd-departamento
     2851                         depsetse.cd-secao         = import-mo-propost.cd-secao
     2852                         depsetse.cd-setor         = import-mo-propost.cd-setor
     2853                         depsetse.char-1           = "A"
     2854                         depsetse.cd-userid        = v_cod_usuar_corren
     2855                         depsetse.dt-atualizacao   = TODAY.
     2856                end.
     2857       END.
     2858   
     2859   END PROCEDURE.
     2860   
     2861   PROCEDURE cria-mo-funcao:
     2862   
     2863       FOR EACH import-funcao-propost FIELDS (cd-funcao des-funcao)
     2864          where import-funcao-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost NO-LOCK,
     2865   
     2866          FIRST import-mo-propost where import-mo-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost NO-LOCK:
     2867   
     2868           IF NOT can-find (first funcprop 
     2869                            where funcprop.cd-modalidade = import-propost.cd-modalidade
     2870                              and funcprop.nr-proposta   = nr-proposta-aux
     2871                              and (funcprop.cd-setor     = import-mo-propost.cd-setor
     2872                                or funcprop.cd-setor     = 0)
     2873                              and funcprop.cd-funcao     = import-funcao-propost.cd-funcao)
     2874           then do:
     2875                  /**************** CRIA FUNCPROP *************************************/
     2876                  create funcprop.
     2877                  assign funcprop.cd-modalidade  = b-import-propost.cd-modalidade 
     2878                         funcprop.nr-proposta    = nr-proposta-aux   
     2879                         funcprop.cd-funcao      = import-funcao-propost.cd-funcao
     2880                         funcprop.ds-detalhada   = import-funcao-propost.des-funcao
     2881                         funcprop.cd-userid      = v_cod_usuar_corren
     2882                         funcprop.dt-atualizacao = today.
     2883                  
     2884                  if import-mo-propost.cd-setor = ? 
     2885                  or import-mo-propost.cd-setor = 0
     2886                  then assign funcprop.cd-setor = 0.
     2887                  else assign funcprop.cd-setor = import-mo-propost.cd-setor.
     2888                END.
     2889       END.
     2890   
     2891   END PROCEDURE.
     2892   
     2893   /* ------------------------------------------------------------------------- */ 
     2894   procedure remover.
     2895   
     2896       DEF BUFFER b-propost  FOR propost.
     2897       DEF BUFFER bb-propost FOR propost.
     2898   
     2899       find first paramecp no-lock no-error.
     2900       if   avail paramecp
     2901       then do:
     2902              find b-propost where b-propost.ep-codigo     = paramecp.ep-codigo
     2903                               and b-propost.cod-estabel   = paramecp.cod-estabel
     2904                               and b-propost.cd-modalidade = propost.cd-modalidade
     2905                               and b-propost.nr-proposta   = propost.nr-proposta
     2906                                   exclusive-lock no-error.
     2907              if   avail b-propost
     2908              then do:
     2909                     /*-- Include de eliminacao da proposta nas tabelas com referencia. ---*/
     2910                     /* Eliminacao de todas as tabelas de referencia da proposta */
     2911   
     2912   for each comisaux                                 
     2913            where comisaux.cd-modalidade = b-propost.cd-modalidade       
     2914              and comisaux.nr-proposta   = b-propost.nr-proposta       
     2915            exclusive-lock:                          
     2916       delete comisaux.
     2917   end.                                              
     2918   
     2919   for each valprodu                                 
     2920            where valprodu.cd-modalidade = b-propost.cd-modalidade       
     2921              and valprodu.nr-proposta   = b-propost.nr-proposta       
     2922            exclusive-lock:                          
     2923       delete valprodu.                              
     2924   end.                                              
     2925                                                     
     2926   for each depsetse                                 
     2927            where depsetse.cd-modalidade = b-propost.cd-modalidade       
     2928              and depsetse.nr-proposta   = b-propost.nr-proposta       
     2929            exclusive-lock:                          
     2930       delete depsetse.
     2931                                
     2932   end.                                              
     2933                                                     
     2934   for each funcprop
     2935            where funcprop.cd-modalidade = b-propost.cd-modalidade
     2936              and funcprop.nr-proposta   = b-propost.nr-proposta
     2937            exclusive-lock:
     2938       delete funcprop.
     2939   end.
     2940   
     2941   for each usumodu                                  
     2942            where usumodu.cd-modalidade = b-propost.cd-modalidade        
     2943              and usumodu.nr-proposta   = b-propost.nr-proposta        
     2944            exclusive-lock:                          
     2945       delete usumodu.
     2946                                 
     2947   end.                                              
     2948                                                     
     2949   for each usucaren                                 
     2950            where usucaren.cd-modalidade = b-propost.cd-modalidade       
     2951              and usucaren.nr-proposta   = b-propost.nr-proposta       
     2952            exclusive-lock:                          
     2953       delete usucaren.
     2954                                
     2955   end.                  
     2956   
     2957   for each usucarproc                                 
     2958            where usucarproc.cd-modalidade = b-propost.cd-modalidade       
     2959              and usucarproc.nr-proposta   = b-propost.nr-proposta       
     2960            exclusive-lock:                          
     2961       delete usucarproc.                              
     2962   end.                  
     2963                                                     
     2964   for each qtmcopre                                 
     2965            where qtmcopre.cd-modalidade = b-propost.cd-modalidade       
     2966              and qtmcopre.nr-proposta   = b-propost.nr-proposta       
     2967            exclusive-lock:                          
     2968       delete qtmcopre.                              
     2969   end.                                              
     2970                                                     
     2971   for each qtmpgpre                                 
     2972            where qtmpgpre.cd-modalidade = b-propost.cd-modalidade       
     2973              and qtmpgpre.nr-proposta   = b-propost.nr-proposta       
     2974            exclusive-lock:                          
     2975       delete qtmpgpre.                              
     2976   end.                                              
     2977                                                     
     2978   for each campprop                                 
     2979            where campprop.cd-modalidade = b-propost.cd-modalidade       
     2980              and campprop.nr-proposta   = b-propost.nr-proposta       
     2981            exclusive-lock:                          
     2982       delete campprop.                              
     2983   end.                                              
     2984                                                     
     2985   for each decprest                                 
     2986            where decprest.cd-modalidade = b-propost.cd-modalidade       
     2987              and decprest.nr-proposta   = b-propost.nr-proposta       
     2988            exclusive-lock:                          
     2989       delete decprest.                              
     2990   end.                                              
     2991                                                     
     2992   for each dzdeccid                                 
     2993            where dzdeccid.cd-modalidade = b-propost.cd-modalidade       
     2994              and dzdeccid.nr-proposta   = b-propost.nr-proposta       
     2995            exclusive-lock:                          
     2996       delete dzdeccid.                              
     2997   end.                                              
     2998                                                     
     2999   for each fxpalovp                                 
     3000            where fxpalovp.cd-modalidade = b-propost.cd-modalidade       
     3001              and fxpalovp.nr-proposta   = b-propost.nr-proposta       
     3002            exclusive-lock:                          
     3003       delete fxpalovp.                              
     3004   end.                                              
     3005                                                     
     3006   for each fxparpro                                 
     3007            where fxparpro.cd-modalidade = b-propost.cd-modalidade       
     3008              and fxparpro.nr-proposta   = b-propost.nr-proposta       
     3009            exclusive-lock:                          
     3010       delete fxparpro.                              
     3011   end.                                              
     3012                                                     
     3013   for each movcarrc                                 
     3014            where movcarrc.cd-modalidade = b-propost.cd-modalidade       
     3015              and movcarrc.nr-proposta   = b-propost.nr-proposta       
     3016            exclusive-lock:                          
     3017       delete movcarrc.
     3018                                
     3019   end.                                              
     3020                                                     
     3021   for each pr-id-us                                 
     3022            where pr-id-us.cd-modalidade = b-propost.cd-modalidade       
     3023              and pr-id-us.nr-proposta   = b-propost.nr-proposta       
     3024            exclusive-lock:                          
     3025       delete pr-id-us.
     3026                                
     3027   end.                                              
     3028                                                     
     3029   for each pr-mo-am                                 
     3030            where pr-mo-am.cd-modalidade = b-propost.cd-modalidade       
     3031              and pr-mo-am.nr-proposta   = b-propost.nr-proposta       
     3032            exclusive-lock:                          
     3033       delete pr-mo-am.
     3034                                
     3035   end.                                              
     3036                                                     
     3037   for each pro-pla use-index pro-pla2                      
     3038            where pro-pla.cd-modalidade = b-propost.cd-modalidade
     3039              and pro-pla.nr-proposta   = b-propost.nr-proposta
     3040            exclusive-lock:                                 
     3041       delete pro-pla validate(true,"").
     3042   end. 
     3043   
     3044   for each procpres                                 
     3045            where procpres.cd-modalidade = b-propost.cd-modalidade       
     3046              and procpres.nr-proposta   = b-propost.nr-proposta       
     3047            exclusive-lock:                          
     3048       delete procpres.
     3049                                
     3050   end.                                              
     3051                                                     
     3052   for each propcart                                 
     3053            where propcart.cd-modalidade = b-propost.cd-modalidade       
     3054              and propcart.nr-proposta   = b-propost.nr-proposta       
     3055            exclusive-lock:                          
     3056       delete propcart.                              
     3057   end.                                              
     3058                                                     
     3059   for each propcopa                                 
     3060            where propcopa.cd-modalidade = b-propost.cd-modalidade       
     3061              and propcopa.nr-proposta   = b-propost.nr-proposta       
     3062            exclusive-lock:                          
     3063       delete propcopa.
     3064                                
     3065   end.                                              
     3066                                                     
     3067   for each usureate                                 
     3068            where usureate.cd-modalidade = b-propost.cd-modalidade       
     3069              and usureate.nr-proposta   = b-propost.nr-proposta       
     3070            exclusive-lock:                          
     3071       delete usureate.                              
     3072   end.                                              
     3073                                                     
     3074   for each proptaxa                                 
     3075            where proptaxa.cd-modalidade = b-propost.cd-modalidade       
     3076              and proptaxa.nr-proposta   = b-propost.nr-proposta       
     3077            exclusive-lock:                          
     3078       delete proptaxa.                              
     3079   end.                                              
     3080                                                     
     3081   for each propunim                                 
     3082            where propunim.cd-modalidade = b-propost.cd-modalidade       
     3083              and propunim.nr-proposta   = b-propost.nr-proposta       
     3084            exclusive-lock:                          
     3085       delete propunim.
     3086                                
     3087   end.                                              
     3088                                                     
     3089   for each prorespr                                 
     3090            where prorespr.cd-modalidade = b-propost.cd-modalidade       
     3091              and prorespr.nr-proposta   = b-propost.nr-proposta       
     3092            exclusive-lock:                          
     3093       delete prorespr.                              
     3094   end.                                              
     3095                                                     
     3096   for each prunineg                                 
     3097            where prunineg.cd-modalidade = b-propost.cd-modalidade       
     3098              and prunineg.nr-proposta   = b-propost.nr-proposta       
     3099            exclusive-lock:                          
     3100       delete prunineg.                              
     3101   end.                                              
     3102                                                     
     3103   for each sobtxpro                                 
     3104            where sobtxpro.cd-modalidade = b-propost.cd-modalidade       
     3105              and sobtxpro.nr-proposta   = b-propost.nr-proposta       
     3106            exclusive-lock:                          
     3107       delete sobtxpro.
     3108                                
     3109   end.                                              
     3110                                                     
     3111   for each teadgrpa                                 
     3112            where teadgrpa.cd-modalidade = b-propost.cd-modalidade       
     3113              and teadgrpa.nr-proposta   = b-propost.nr-proposta       
     3114            exclusive-lock:                          
     3115       delete teadgrpa.
     3116                                
     3117   end.                                              
     3118                                                     
     3119   for each tegrpaco                                 
     3120            where tegrpaco.cd-modalidade = b-propost.cd-modalidade       
     3121              and tegrpaco.nr-proposta   = b-propost.nr-proposta       
     3122            exclusive-lock:                          
     3123       delete tegrpaco.                              
     3124   end.                                              
     3125                                                     
     3126   for each dzdecpro 
     3127            where dzdecpro.cd-modalidade = b-propost.cd-modalidade
     3128              and dzdecpro.nr-proposta   = b-propost.nr-proposta
     3129                  exclusive-lock. 
     3130       delete dzdecpro.                                                 
     3131   end.
     3132   
     3133   for each usuario                                  
     3134            where usuario.cd-modalidade = b-propost.cd-modalidade        
     3135              and usuario.nr-proposta   = b-propost.nr-proposta        
     3136            exclusive-lock:                          
     3137       delete usuario.
     3138                                 
     3139   end.                                              
     3140                                                     
     3141   for each usurepas                                 
     3142            where usurepas.cd-modalidade = b-propost.cd-modalidade       
     3143              and usurepas.nr-proposta   = b-propost.nr-proposta       
     3144            exclusive-lock:                          
     3145       delete usurepas.
     3146                                
     3147   end.
     3148   
     3149   for each proptxtr                                 
     3150            where proptxtr.cd-modalidade = b-propost.cd-modalidade       
     3151              and proptxtr.nr-proposta   = b-propost.nr-proposta       
     3152            exclusive-lock:                          
     3153       delete proptxtr.                              
     3154   end.
     3155        
     3156    
     3157       
     3158                     /* --- TABELA SIT-APROV-PROPOSTA --- */
     3159                     find sit-aprov-proposta where sit-aprov-proposta.cd-modalidade = b-propost.cd-modalidade
     3160                                               and sit-aprov-proposta.nr-proposta   = b-propost.nr-proposta exclusive-lock no-error.
     3161                     if avail sit-aprov-proposta
     3162                     then delete sit-aprov-proposta.
     3163       
     3164                     find first contrat where contrat.nr-insc-contratante = b-propost.nr-insc-contratante exclusive-lock no-error.
     3165                     if avail contrat
     3166                     THEN DO:
     3167                            find first bb-propost where bb-propost.nr-insc-contratante = contrat.nr-insc-contratante no-lock no-error.
     3168                            if not avail bb-propost
     3169                            then assign contrat.lg-tem-proposta = no.
     3170                                 
     3171                            assign lg-tem-proposta-aux = no.
     3172                            for each modalid fields (cd-modalidade) no-lock:
     3173                                if can-find (first propost use-index propo20 
     3174                                             where propost.cd-modalidade          = modalid.cd-modalidade
     3175                                               and propost.nr-insc-contrat-origem = contrat.nr-insc-contratante)
     3176                                then do:
     3177                                       assign lg-tem-proposta-aux = yes.  
     3178                                       leave.
     3179                                     end.
     3180                            end.
     3181                           
     3182                            if lg-tem-proposta-aux = no
     3183                            then assign contrat.lg-tem-proposta-contr-orig = no.
     3184                          END.
     3185   
     3186                     FOR EACH ter-ade EXCLUSIVE-LOCK
     3187                        WHERE ter-ade.cd-modalidade = b-propost.cd-modalidade
     3188                          AND ter-ade.nr-ter-adesao = b-propost.nr-ter-adesao:
     3189                              DELETE ter-ade.
     3190                     END.
     3191   
     3192                     delete b-propost.
     3193   
     3194                     RELEASE b-propost.
     3195                     
     3196                   end.
     3197            end.
     3198   end procedure.
     3199   
     3200   /* ------------------------------------------------------------------------------------------- */
     3201   procedure pi-grava-erro:
     3202   
     3203       DEF INPUT PARAM ds-erro-par AS CHAR NO-UNDO.
     3204   
     3205       IF nro-seq-aux = 0
     3206       THEN do:
     3207              IF CAN-FIND (FIRST erro-process-import WHERE erro-process-import.num-seqcial-control = b-import-propost.num-seqcial-control)
     3208              THEN RUN pi-consulta-prox-seq (INPUT b-import-propost.num-seqcial-control, OUTPUT nro-seq-aux).
     3209              ELSE ASSIGN nro-seq-aux = nro-seq-aux + 1.
     3210            END.
     3211       ELSE ASSIGN nro-seq-aux = nro-seq-aux + 1.
     3212       
     3213       /**
     3214        * Garantir unicidade da chave.
     3215        */
     3216       create erro-process-import.
     3217       REPEAT:
     3218           assign erro-process-import.num-seqcial         = nro-seq-aux
     3219                  erro-process-import.num-seqcial-control = b-import-propost.num-seqcial-control NO-ERROR.
     3220           VALIDATE erro-process-import NO-ERROR.
     3221           IF ERROR-STATUS:ERROR
     3222           OR ERROR-STATUS:NUM-MESSAGES > 0
     3223           THEN do:
     3224                  ASSIGN nro-seq-aux = nro-seq-aux + 1.
     3225                  PAUSE(1). /* aguarda 1seg e busca novamente o proximo nr livre.*/
     3226                END.
     3227           else leave.    /* o nr gerado eh valido. continua o processo.*/
     3228       END.
     3229   
     3230       ASSIGN erro-process-import.nom-tab-orig-erro   = "BE - import-propost"
     3231              erro-process-import.des-erro            = ds-erro-par
     3232              erro-process-import.dat-erro            = today. 
     3233   
     3234       FOR FIRST control-migrac FIELDS (ind-sit-import)
     3235           WHERE control-migrac.num-seqcial = b-import-propost.num-seqcial-control EXCLUSIVE-LOCK:
     3236       END.
     3237       if avail control-migrac
     3238       then assign control-migrac.ind-sit-import = "PE".
     3239   
     3240       FOR FIRST bb-import-propost FIELDS (ind-sit-import) 
     3241           WHERE bb-import-propost.num-seqcial-control = erro-process-import.num-seqcial-control EXCLUSIVE-LOCK:
     3242       END.
     3243       IF AVAIL bb-import-propost
     3244       THEN DO:        
     3245              ASSIGN bb-import-propost.ind-sit-import = "PE".
     3246   
     3247              VALIDATE bb-import-propost.
     3248              RELEASE  bb-import-propost.
     3249            END.
     3250   
     3251   end procedure.
     3252   
     3253   procedure pi-consulta-prox-seq:
     3254   
     3255       def input  parameter nr-seq-contr-p like erro-process-import.num-seqcial-control no-undo.
     3256       def output parameter nro-seq-par    as int initial 0                             no-undo.
     3257   
     3258       def buffer b-erro-process-import for erro-process-import.
     3259   
     3260       select max(erro-process-import.num-seqcial) into nro-seq-par 
     3261              from erro-process-import 
     3262              where erro-process-import.num-seqcial-control = nr-seq-contr-p.
     3263   
     3264       if nro-seq-par = ?
     3265       then assign nro-seq-par = 1.
     3266       else assign nro-seq-par = nro-seq-par + 1.
     3267   
     3268   end procedure.
     3269   
     3270   PROCEDURE escrever-log:
     3271       DEF INPUT PARAMETER ds-mens-aux AS CHAR NO-UNDO.
     3272   END.
