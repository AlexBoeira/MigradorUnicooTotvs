        1   /* CG0311X - CRIA PROPOSTAS E TABELAS RELACIONADAS */
        2   
        3   /********************************************************************************
        4   ** Copyright DATASUL S.A. (1997)
        5   ** Todos os Direitos Reservados.
        6   **
        7   ** Este fonte e de propriedade exclusiva da DATASUL, sua reproducao
        8   ** parcial ou total por qualquer meio, so podera ser feita mediante
        9   ** autorizacao expressa.
       10   *******************************************************************************/
       11   /* Begin_Include: i_version_extract */
       12   def new global shared var v_cod_arq
       13       as char  
       14       format 'x(60)'
       15       no-undo.
       16   def new global shared var v_cod_tip_prog
       17       as character
       18       format 'x(8)'
       19       no-undo.
       20   
       21   def stream s-arq.
       22   
       23   def var c_prg_vrs as char init "" no-undo.
       24   assign c_prg_vrs = "2.00.00.022".
       25   
       26   /* LS */
       27   /* DEF VAR c_id_modulo_ls   AS CHAR NO-UNDO.  */
       28   /* DEF VAR c_desc_modulo_ls AS CHAR NO-UNDO.  */
       29   /* FIM LS */
       30   
       31   if  v_cod_arq <> '' and v_cod_arq <> ?
       32   then do:
       33       /*Exemplo de chamada do EMS5
       34       run pi_version_extract ('api_login':U, 'prgtec/btb/btapi910za.py':U, '1.00.00.008':U, 'pro':U).
       35       */
       36       run pi_version_extract ('':U, 'CG0311X':U, '2.00.00.022':U, '':U).
       37   end /* if */.
       38   /* End_Include: i_version_extract */
       39   
       40   /*****************************************************************************
       41   ** Procedure Interna.....: pi_version_extract
       42   ** Descricao.............: pi_version_extract
       43   ** Criado por............: jaison
       44   ** Criado em.............: 31/07/1998 09:33:22
       45   ** Alterado por..........: tech14013
       46   ** Alterado em...........: 05/01/2005 19:27:44
       47   *****************************************************************************/
       48   PROCEDURE pi_version_extract:
       49   
       50       /************************ Parameter Definition Begin ************************/
       51   
       52       def Input param p_cod_program
       53           as character
       54           format "x(08)"
       55           no-undo.
       56       def Input param p_cod_program_ext
       57           as character
       58           format "x(8)"
       59           no-undo.
       60       def Input param p_cod_version
       61           as character
       62           format "x(8)"
       63           no-undo.
       64       def Input param p_cod_program_type
       65           as character
       66           format "x(8)"
       67           no-undo.
       68   
       69   
       70       /************************* Parameter Definition End *************************/
       71   
       72       /************************* Variable Definition Begin ************************/
       73   
       74       def var v_cod_event_dic
       75           as character
       76           format "x(20)":U
       77           label "Evento"
       78           column-label "Evento"
       79           no-undo.
       80       def var v_cod_tabela
       81           as character
       82           format "x(28)":U
       83           label "Tabela"
       84           column-label "Tabela"
       85           no-undo.
       86   
       87   
       88       /************************** Variable Definition End *************************/
       89       IF p_cod_program_type = "" OR p_cod_program_type = ? THEN DO:
       90           ASSIGN p_cod_program_type = "pro".
       91       END.
       92   
       93   
       94       if  can-do(v_cod_tip_prog, p_cod_program_type)
       95       then do:
       96           if p_cod_program_type = 'dic' then 
       97              assign p_cod_program_ext = replace(p_cod_program_ext, 'database/', '').
       98   
       99           output stream s-arq to value(v_cod_arq) append.
      100   
      101           
      102   
      103           put stream s-arq unformatted
      104               p_cod_program            at 1 
      105               p_cod_program_ext        at 43 
      106               p_cod_version            at 69 
      107               today                    at 84 
      108               string(time, 'HH:MM:SS') at 94 skip.
      109   
      110           if  p_cod_program_type = 'pro' then do:
      111               
      112           end.
      113   
      114           if  p_cod_program_type = 'dic' then do:
      115               
      116           end.
      117   
      118           output stream s-arq close.
      119       end /* if */.
      120   
      121   END PROCEDURE. /* pi_version_extract */
      122     /*** 010022 ***/
      123   
      124   
      125   
      126   /******************************************************************************
      127   *      Programa .....: CG0311X.p                                              *
      128   *      Data .........: 29 de Janeiro de 2015                                  *
      129   *      Autor ........: TOTVS                                                  *
      130   *      Sistema ......: CG - Cadastros Gerais                                  *
      131   *      Programador ..: Jaíne Marin                                            *
      132   *      Objetivo .....: Importacao de Propostas                                *
      133   *                                                                             *
      134   *                    - Rotina de Inclusao                                     *
      135   *                                                                             *
      136   *******************************************************************************
      137   *     VERSAO     DATA       RESPONSAVEL    MOTIVO                             *
      138   *     C.00.000  29/01/2015  Jaíne Marin    Desenvolvimento                    *
      139   ******************************************************************************/
      140   /******************************************************************************
      141   *      Programa .....: hdsistem.i                                             *
      142   *      Data .........: 13 de Janeiro de 2004                                  *
      143   *      Autor ........: DZSET SOLUCOES E SISTEMAS LTDA.                        *
      144   *      Sistema ......: hd - include padrao                                    *
      145   *      Programador ..: Luis Fernando                                          *
      146   *      Objetivo .....: Definicao do pre processos                             *
      147   *-----------------------------------------------------------------------------*
      148   *      VERSAO    DATA        RESPONSAVEL    MOTIVO                            *
      149   *      7.00.000  13/01/2004  Luis           Conversao Ems505                  *
      150   ******************************************************************************/
      151   /* magnus ou ems ou ems504 ou ems505 *//* normal ou oracle *//* sim ou nao *//* ------------------------------------------------------------------------- */
      152   
      153   
      154   def shared var lg-registro-modulos      as log  no-undo.
      155   def shared var lg-registro-faixa        as log  no-undo. 
      156   def shared var lg-registro-negociacao   as log  no-undo.
      157   def shared var lg-registro-cobertura    as log  no-undo.
      158   def shared var lg-registro-especifico   as log  no-undo.
      159   def shared var lg-registro-procedimento as log  no-undo.
      160   def shared var lg-ver-imp8              as log  no-undo.
      161   def shared var lg-ver-imp9              as log  no-undo.
      162   def shared var in-classif               as int  no-undo.
      163   DEF SHARED VAR lg-gerar-termo-aux             AS LOG INIT NO                       NO-UNDO.
      164   DEF SHARED VAR dt-minima-termo-aux      AS DATE                               NO-UNDO.
      165   
      166   def var lg-relat-erro            as logi                               no-undo.
      167   def var nr-proposta-anterior-aux like propost.nr-proposta-anterior     no-undo.
      168   def var lg-passou                as log initial no                     no-undo.
      169   def var qt-car-ele-aux           like pro-pla.qt-caren-eletiva         no-undo.
      170   def var qt-car-urg-aux           like pro-pla.qt-caren-urgencia        no-undo.
      171   def var c-versao                 as char                               no-undo.
      172   def var c-data                   as char                               no-undo.
      173   def var c-hora                   as char                               no-undo.
      174   def var lg-achou                 as logi                               no-undo.
      175   def var lg-critica               as logi                               no-undo.
      176   def var dt-inclu                 like usuario.dt-inclusao-plano        no-undo.
      177   def var ct-codigo                like usuario.cd-usuario               no-undo.
      178   def var lg-formato-livre-aux     as log                                no-undo.
      179   def var ix-cont-aux              as int                                no-undo.
      180   def var nr-cgc-cpf-aux           like contrat.nr-cgc-cpf               no-undo.
      181   def var nr-proposta-aux          like usuario.nr-proposta              no-undo.
      182   DEF VAR lg-medocup-aux           AS LOG                                NO-UNDO.
      183   def var cd-senha-aux           as int format 999999                     no-undo.
      184   def var lg-erro-rtsenha-aux    as log                                   no-undo.
      185   def var ds-erro-rtsenha-aux            as char                                  no-undo.
      186   
      187   def var lg-tem-proposta-aux      as   log       initial no             no-undo.
      188   def var cd-plano-ans-aux         as int                                no-undo.
      189   DEF VAR lg-relat-erro-aux        AS LOG                                NO-UNDO.
      190   def var lg-retorna               as log init no                        no-undo.
      191   DEF VAR lg-modulo-erro           AS LOG                                NO-UNDO.
      192   def var nro-seq-aux              as int initial 0                      no-undo.
      193   def var h-bosaueventualuser-aux  as handle                             no-undo.
      194   
      195   DEF SHARED TEMP-TABLE tt-import-propost NO-UNDO
      196       FIELD rowid-import-prop AS ROWID
      197       FIELD nr-proposta       AS INT
      198       FIELD nr-insc-contrat   like contrat.nr-insc-contratante 
      199       INDEX ID rowid-import-prop.
      200   
      201   def buffer b-propost         for propost.
      202   def buffer b-contrat         for contrat.
      203   def buffer b-import-propost  FOR import-propost.
      204   def buffer bb-import-propost FOR import-propost.
      205   def buffer bbb-import-propost FOR import-propost.
      206   
      207   FUNCTION proximaseqregra RETURNS DECIMAL (): 
      208   
      209       DEF VAR prox-seq-par AS DEC INITIAL 0 NO-UNDO.
      210   
      211       SELECT MAX(cdd-seq) INTO prox-seq-par FROM regra-menslid-propost.
      212           
      213       RETURN (prox-seq-par + 1).
      214   
      215   END FUNCTION.
      216   
      217   /* --- DECLARACAO DE VARIAVEIS UTILIZADAS POR HDRUNPERSIS E HDDELPERSIS --- */
      218   /*{hdp/hdrunpersis.iv}*/
      219   def var h-handle-aux              as handle no-undo.
      220   def var h-handle2-aux             as handle no-undo.
      221   
      222   def new shared var id-requisicao-handle-aux as char init "" no-undo.
      223   
      224   def new global shared var v_cod_usuar_corren as char no-undo.
      225   
      226   
      227   /*----------------------------------------------------------------------------*/
      228   find first paramecp no-lock no-error.
      229   if   not avail paramecp
      230   then do:
      231          message "Parametros gerais do sistema nao cadastrados."
      232                  view-as alert-box title " Atencao !!! ".
      233          return.
      234        end.
      235   
      236   /* --------------------------------------------------------------------------*/
      237    
      238   c-versao = "7.15.000".
      239   /******************************************************************************
      240       Programa .....: hdlog.i
      241       Data .........: 01/11/2005
      242       Sistema ......:
      243       Empresa ......: DZSET SOLUCOES E SISTEMAS
      244       Cliente ......:
      245       Programador ..: NORA
      246       Objetivo .....: Rotina que gera o log de versao
      247   *-----------------------------------------------------------------------------*
      248       Versao     DATA         RESPONSAVEL
      249       7.00.000   01/11/2005   NORA
      250   ******************************************************************************/
      251   /* --- IMPLEMENTADO UMA CHAMADA A PROGRAMA POIS ESTAVA ESTOURANDO 
      252          O SEGMENTO DOS PROGRAMAS                                          --- */
      253   def new global shared var v_cod_usuar_corren as character
      254                             format "x(12)":U label "Usuário Corrente"
      255                                           column-label "Usuário Corrente" no-undo.       
      256   def new global shared var in-origem-chamada-menu as character format "x(12)"    
      257                                                                           no-undo.
      258   /* ----------------------------- testa se Serious 7.0 ou GESTAO DE PLANOS ---*/
      259   /* ------------- CASO FOR GESTO DE PLANOS RETORNA A VERSO DO ROUNTABLE --- */
      260   if in-origem-chamada-menu <> "TEMENU70"
      261   then assign c-versao      = c_prg_vrs. 
      262   
      263   if session:multitasking-interval = 1
      264   then do:
      265          run rtp/rthdlog.p (input c-versao,
      266                             input program-name(1)).
      267        end.
      268       
      269   
      270   /*
      271   Copyright (c) 2007, DATASUL S/A. Todos os direitos reservados.
      272   
      273   Os Programas desta AplicaþÒo (que incluem tanto o software quanto a sua
      274   documentaþÒo) contÚm informaþ§es proprietßrias da DATASUL S/A; eles sÒo
      275   licenciados de acordo com um contrato de licenþa contendo restriþ§es de uso e
      276   confidencialidade, e sÒo tambÚm protegidos pela Lei 9609/98 e 9610/98,
      277   respectivamente Lei do Software e Lei dos Direitos Autorais. Engenharia
      278   reversa, descompilaþÒo e desmontagem dos programas sÒo proibidos. Nenhuma
      279   parte destes programas pode ser reproduzida ou transmitida de nenhuma forma e
      280   por nenhum meio, eletr¶nico ou mecÔnico, por motivo algum, sem a permissÒo
      281   escrita da DATASUL S/A.
      282   */
      283   
      284   /******************************************************************************
      285       Programa .....: rtrowerror.i
      286       Data .........: 31/05/2010
      287       Sistema ......:
      288       Empresa ......: DATASUL Saude
      289       Cliente ......:
      290       Programador ..: Alex Boeira
      291       Objetivo .....: Declaracao da temp-table rowErrors e de todos os metodos
      292                       para sua manipulacao atraves das BOs do produto.
      293                       Essa temp-table trafega entre a camada de negocio (Progress)
      294                       e camada de apresentacao (Flex/Java) atraves do Appserver.
      295   ******************************************************************************/
      296   
      297   define temp-table rowErrors no-undo
      298           field errorSequence    as integer              /* --- GERA INTERNAMENTE --- */
      299           field errorNumber      as integer              /* --- NUMERO DA MENSAGEM DE ERRO, CASO NAO VENHA DA MENSISTE --- */
      300           field errorDescription as char format "x(500)" /* --- SE PREENCHER, CONSIDERA. SENAO BUSCA --- */
      301           field errorParameters  as char format "x(500)" /* --- LIVRE. CHAVE DO REGISTRO, ETC... --- */
      302           field errorType        as char format "x(10)"  /* --- PROGRESS / GP / OUTROS --- */
      303           field errorHelp        as char format "x(500)" /* --- SE PREENCHER, CONSIDERA. SENAO MENSISTE.DS-MENSAGEM-DETALHADA --- */
      304           field errorSubType     aS char format "x(12)" /* --- ERROR, WARNING ou INFORMATION --- */
      305           
      306           index rowErrors1
      307             errorSubType
      308   
      309           index rowErrors2
      310             errorNumber.
      311   
      312   /**
      313    * Verifica se na rowErrors existe uma mensagem qualquer do tipo "ERROR".
      314    * Returna true se existir e false caso contrário.
      315    */
      316   function containsAnyError returns logical private (input table rowErrors).
      317   
      318       if can-find(first rowErrors where rowErrors.errorSubType = "ERROR" use-index rowErrors1) 
      319       then return yes.
      320       else return no.
      321   
      322   end function.
      323   
      324   /**
      325    * Verifica se existe um erro na rowErros com o código informado.
      326    */
      327   function containsError returns logical private (input table rowErrors,
      328                                                   input pErrorNumber as int).
      329   
      330       if can-find(first rowErrors where rowErrors.errorNumber = pErrorNumber) 
      331       then return yes.
      332       else return no.
      333   
      334   end function.
      335   
      336   /**
      337    * Remove o error passado por parâmetro da rowErros.
      338    * Retorna true se um erro foi removido e false caso contrário.
      339    */
      340   function removeError returns logical private (input-output table rowErrors,
      341                                                 input pErrorNumber as int). 
      342   
      343       find first rowErrors where rowErrors.errorNumber = pErrorNumber.
      344   
      345       if avail rowErrors
      346       then do:
      347              delete rowErrors.       
      348              return yes.
      349            end.
      350       else 
      351            do:
      352              return no.
      353            end.
      354   
      355   end function.
      356   
      357   procedure insertErrorProgress private:
      358       def input parameter pErrorParameters  as character no-undo.
      359       def input parameter pErrorHelp        as character no-undo.
      360   
      361       def input-output parameter table for rowErrors.
      362   
      363       def var iErrorSequence           as integer   no-undo.
      364       def var iErrors                  as integer   no-undo.
      365   
      366       if index (pErrorHelp, "/n", 1) <> 0 
      367       then do:
      368               assign pErrorHelp = replace (pErrorHelp, "/n", "\n").   
      369            end.
      370   
      371       if index(pErrorHelp, "/r", 1) <> 0
      372       then do:
      373               assign pErrorHelp = replace (pErrorHelp, "/r", "\r").
      374            end.
      375   
      376       if index(pErrorHelp, "/t", 1) <> 0
      377       then do:
      378               assign pErrorHelp = replace (pErrorHelp, "/t", "\t").
      379            end.
      380   
      381       do iErrors = 1 to error-status:num-messages:
      382           if can-find(last rowErrors) 
      383           then do:
      384                  find last rowErrors.
      385                  assign iErrorSequence = rowErrors.errorSequence + 1.
      386                end.
      387           else assign iErrorSequence = iErrorSequence + 1.
      388                   
      389           create rowErrors.
      390           assign rowErrors.errorSequence    = iErrorSequence
      391                  rowErrors.errorNumber      = ERROR-STATUS:GET-NUMBER(iErrors)
      392                  rowErrors.errorType        = "PROGRESS"
      393                  rowErrors.errorSubType     = "ERROR"
      394                  rowErrors.errorDescription = ERROR-STATUS:GET-MESSAGE(iErrors)
      395                  rowErrors.errorHelp        = pErrorHelp
      396                  rowErrors.errorParameters  = pErrorParameters.
      397   
      398           /**
      399            * Tratamento para nunca permitir que errorNumber fique com o valor zero, pois o Framework
      400            * provoca erro e perda de conexao com o appserver.
      401            */
      402           if rowErrors.errorNumber = 0
      403           then assign rowErrors.errorNumber = 1.
      404       end.
      405           
      406   end procedure.
      407   
      408   procedure insertErrorGP private:
      409       def input parameter pErrorNumber      as integer   no-undo.
      410       def input parameter pErrorParameters  as character no-undo.
      411       def input parameter pErrorHelp        as character no-undo.
      412   
      413       def input-output parameter table for rowErrors.
      414   
      415       def var iErrorSequence           as integer   no-undo.
      416       def var iErrors                  as integer   no-undo.
      417       def var errorDescription         as character no-undo.
      418       def var errorHelp                as character no-undo.
      419       def var errorSubType             as character no-undo.
      420   
      421       if index (pErrorHelp, "/n", 1) <> 0 
      422       then do:
      423               assign pErrorHelp = replace (pErrorHelp, "/n", "\n").   
      424            end.
      425   
      426       if index(pErrorHelp, "/r", 1) <> 0
      427       then do:
      428               assign pErrorHelp = replace (pErrorHelp, "/r", "\r").
      429            end.
      430   
      431       if index(pErrorHelp, "/t", 1) <> 0
      432       then do:
      433               assign pErrorHelp = replace (pErrorHelp, "/t", "\t").
      434            end.
      435   
      436       if pErrorNumber > 0
      437       then do:
      438              find mensiste
      439                   where mensiste.cd-mensagem = pErrorNumber
      440                         no-lock no-error.
      441              if   avail mensiste
      442              then do:
      443                     assign errorDescription = mensiste.ds-mensagem-sistema
      444                            errorHelp        = mensiste.ds-mensagem-detalhada
      445                            errorSubType     = mensiste.in-tipo-mensagem.
      446                   end.
      447              else do:
      448                     assign errorDescription   = "Mensagem nao cadastrada."
      449                            errorSubType       = "E".
      450                   end.
      451            end.
      452       else assign errorDescription   = ""
      453                   errorSubType       = "E".
      454   
      455       if can-find(last rowErrors) 
      456       then do:
      457              find last rowErrors.
      458              assign iErrorSequence = rowErrors.ErrorSequence + 1.
      459            end.
      460       else assign iErrorSequence = iErrorSequence + 1.
      461       
      462       create rowErrors.
      463       assign rowErrors.errorSequence    = iErrorSequence
      464              rowErrors.errorNumber      = pErrorNumber
      465              rowErrors.errorType        = "GP"
      466              rowErrors.errorSubType     = "ERROR"
      467              rowErrors.errorDescription = errorDescription
      468              rowErrors.errorParameters  = pErrorParameters.
      469   
      470       /**
      471        * Tratamento para nunca permitir que errorNumber fique com o valor zero, pois o Framework
      472        * provoca erro e perdade conexao com o appserver.
      473        */
      474       if rowErrors.errorNumber = 0
      475       then assign rowErrors.errorNumber = 1.
      476   
      477       if trim(pErrorHelp) <> "" 
      478       then assign rowErrors.errorHelp = pErrorHelp.
      479       else assign rowErrors.errorHelp = ErrorHelp.
      480   
      481       if rowErrors.errorHelp <> ""
      482       then rowErrors.errorHelp = rowErrors.errorHelp + chr(10).
      483   
      484       rowErrors.errorHelp = rowErrors.errorHelp + rowErrors.errorParameters.
      485   
      486   end procedure.
      487   
      488   procedure insertWarningGP private:
      489       def input parameter pErrorNumber      as integer   no-undo.
      490       def input parameter pErrorParameters  as character no-undo.
      491       def input parameter pErrorHelp        as character no-undo.
      492   
      493       def input-output parameter table for rowErrors.
      494   
      495       def var iErrorSequence           as integer   no-undo.
      496       def var iErrors                  as integer   no-undo.
      497       def var errorDescription         as character no-undo.
      498       def var errorHelp                as character no-undo.
      499       def var errorSubType             as character no-undo.
      500   
      501       find mensiste
      502            where mensiste.cd-mensagem = pErrorNumber
      503                  no-lock no-error.
      504       if   avail mensiste
      505       then do:
      506              assign errorDescription = mensiste.ds-mensagem-sistema
      507                     errorHelp        = mensiste.ds-mensagem-detalhada
      508                     errorSubType     = mensiste.in-tipo-mensagem.
      509            end.
      510       else do:
      511              assign errorDescription   = "Mensagem nao cadastrada."
      512                     errorSubType       = "W".
      513            end.
      514   
      515       if can-find(last rowErrors) 
      516       then do:
      517              find last rowErrors.
      518              assign iErrorSequence = rowErrors.ErrorSequence + 1.
      519            end.
      520       else assign iErrorSequence = iErrorSequence + 1.
      521       
      522       create rowErrors.
      523       assign rowErrors.errorSequence    = iErrorSequence
      524              rowErrors.errorNumber      = pErrorNumber
      525              rowErrors.errorType        = "GP"
      526              rowErrors.errorSubType     = "WARNING"
      527              rowErrors.errorDescription = errorDescription
      528              rowErrors.errorParameters  = pErrorParameters.
      529   
      530       /**
      531        * Tratamento para nunca permitir que errorNumber fique com o valor zero, pois o Framework
      532        * provoca erro e perdade conexao com o appserver.
      533        */
      534       if rowErrors.errorNumber = 0
      535       then assign rowErrors.errorNumber = 1.
      536   
      537       if trim(pErrorHelp) <> "" 
      538       then assign rowErrors.errorHelp = pErrorHelp.
      539       else assign rowErrors.errorHelp = ErrorHelp.
      540   
      541       if rowErrors.errorHelp <> ""
      542       then rowErrors.errorHelp = rowErrors.errorHelp + chr(10).
      543   
      544       rowErrors.errorHelp = rowErrors.errorHelp + rowErrors.errorParameters.
      545   
      546   end procedure.
      547   
      548   procedure insertInfoGP private:
      549       def input parameter pErrorNumber      as integer   no-undo.
      550       def input parameter pErrorParameters  as character no-undo.
      551       def input parameter pErrorHelp        as character no-undo.
      552   
      553       def input-output parameter table for rowErrors.
      554   
      555       def var iErrorSequence           as integer   no-undo.
      556       def var iErrors                  as integer   no-undo.
      557       def var errorDescription         as character no-undo.
      558       def var errorHelp                as character no-undo.
      559       def var errorSubType             as character no-undo.
      560   
      561       find mensiste
      562            where mensiste.cd-mensagem = pErrorNumber
      563                  no-lock no-error.
      564       if   avail mensiste
      565       then do:
      566              assign errorDescription = mensiste.ds-mensagem-sistema
      567                     errorHelp        = mensiste.ds-mensagem-detalhada
      568                     errorSubType     = mensiste.in-tipo-mensagem.
      569            end.
      570       else do:
      571              assign errorDescription   = "Mensagem nao cadastrada."
      572                     errorSubType       = "I".
      573            end.
      574   
      575       if can-find(last rowErrors) 
      576       then do:
      577              find last rowErrors.
      578              assign iErrorSequence = rowErrors.ErrorSequence + 1.
      579            end.
      580       else assign iErrorSequence = iErrorSequence + 1.
      581       
      582       create rowErrors.
      583       assign rowErrors.errorSequence    = iErrorSequence
      584              rowErrors.errorNumber      = pErrorNumber
      585              rowErrors.errorType        = "GP"
      586              rowErrors.errorSubType     = "INFORMATION"
      587              rowErrors.errorDescription = errorDescription
      588              rowErrors.errorParameters  = pErrorParameters.
      589   
      590       /**
      591        * Tratamento para nunca permitir que errorNumber fique com o valor zero, pois o Framework
      592        * provoca erro e perdade conexao com o appserver.
      593        */
      594       if rowErrors.errorNumber = 0
      595       then assign rowErrors.errorNumber = 1.
      596   
      597       if trim(pErrorHelp) <> "" 
      598       then assign rowErrors.errorHelp = pErrorHelp.
      599       else assign rowErrors.errorHelp = ErrorHelp.
      600   
      601       if rowErrors.errorHelp <> ""
      602       then rowErrors.errorHelp = rowErrors.errorHelp + chr(10).
      603   
      604       rowErrors.errorHelp = rowErrors.errorHelp + rowErrors.errorParameters.
      605   
      606   end procedure.
      607   
      608   procedure insertOtherError private:
      609   
      610       def input parameter pErrorNumber      as integer   no-undo.
      611       def input parameter pErrorDescription as character no-undo.
      612       def input parameter pErrorParameters  as character no-undo.
      613       def input parameter pErrorType        as character no-undo.
      614       def input parameter pErrorSubType     as character no-undo.
      615       def input parameter pErrorHelp        as character no-undo.
      616   
      617       def input-output parameter table for rowErrors.
      618       
      619       def var iErrorSequence           as integer   no-undo.
      620   
      621       if can-find(last rowErrors) 
      622       then do:
      623              find last rowErrors.
      624              assign iErrorSequence = rowErrors.ErrorSequence + 1.
      625            end.
      626       else do:
      627              assign iErrorSequence = iErrorSequence + 1.
      628            end.
      629       
      630       create rowErrors.
      631       assign rowErrors.errorSequence    = iErrorSequence
      632              rowErrors.errorNumber      = pErrorNumber
      633              rowErrors.errorType        = pErrorType
      634              rowErrors.errorSubType     = pErrorSubType
      635              rowErrors.errorDescription = pErrorDescription
      636              rowErrors.errorHelp        = pErrorHelp
      637              rowErrors.errorParameters  = pErrorParameters.
      638   
      639       /**
      640        * Tratamento para nunca permitir que errorNumber fique com o valor zero, pois o Framework
      641        * provoca erro e perdade conexao com o appserver.
      642        */
      643       if rowErrors.errorNumber = 0
      644       then assign rowErrors.errorNumber = 1.
      645   
      646       if rowErrors.errorHelp <> ""
      647       then rowErrors.errorHelp = rowErrors.errorHelp + chr(10).
      648   
      649       rowErrors.errorHelp = rowErrors.errorHelp + rowErrors.errorParameters.
      650   
      651       return "OK".
      652   
      653   end procedure.
      654   
      655   
      656   /**
      657    * Verifica todas as mensagem incluídas na rowErros que possuem o código do
      658    * erro informada e que possuem o subtipo igual a 'ERROR' e troca o mesmo
      659    * para 'WARNING' evitando dessa forma que o processamento seja interrompido
      660    * e nenhum informação seja retornada ao usuário.
      661    */
      662   procedure changeErrorToWarning private:
      663       def input parameter pErrorNumber      as integer   no-undo.
      664       def input-output parameter table for rowErrors.
      665   
      666       for each rowErrors where rowErrors.errorNumber = pErrorNumber 
      667                            and rowErrors.errorSubType = "ERROR" 
      668                                exclusive-lock:
      669   
      670           assign rowErrors.errorSubType = "WARNING".
      671       end.
      672           
      673   end procedure.
      674   
      675   
      676   /**
      677    * Transforma todos os erros em warnings
      678    */
      679   procedure changeAllErrorsToWarnings private:
      680       def input-output parameter table for rowErrors.
      681   
      682       for each rowErrors where rowErrors.errorSubType = "ERROR" 
      683                                exclusive-lock:
      684           assign rowErrors.errorSubType = "WARNING".
      685       end.
      686           
      687   end procedure.
      688   
      689   /**
      690    * Verifica todas as mensagem incluídas na rowErros que possuem o código do
      691    * erro informada e que possuem o subtipo igual a 'ERROR' e troca o mesmo
      692    * para 'INFORMATION' evitando dessa forma que o processamento seja 
      693    * interrompido e nenhum informação seja retornada ao usuário.
      694    */
      695   procedure changeErrorToInformation private:
      696       def input parameter pErrorNumber      as integer   no-undo.
      697       def input-output parameter table for rowErrors.
      698   
      699       for each rowErrors where rowErrors.errorNumber = pErrorNumber 
      700                            and rowErrors.errorSubType = "ERROR" 
      701                                exclusive-lock:
      702   
      703           assign rowErrors.errorSubType = "INFORMATION".
      704       end.
      705           
      706           
      707   end procedure.
      708   
      709   /**
      710    * Metodo chamado pelo modulo Auditoria Medica, que foi incorporado ao produto.
      711    */
      712   procedure insertError private:
      713   
      714       def input parameter pErrorNumber      as integer   no-undo.
      715       def input parameter pErrorDescription as character no-undo.
      716       def input parameter pErrorParameters  as character no-undo.
      717       def input parameter pErrorType        as character no-undo.
      718       def input parameter pErrorSubType     as character no-undo.
      719       def input parameter pErrorHelp        as character no-undo.
      720   
      721       def input-output parameter table for rowErrors.
      722       
      723       def var iErrorSequence           as integer   no-undo.
      724       def var iErrors                  as integer   no-undo.
      725       def var errorDescription         as character no-undo.
      726       def var errorSubType             as character no-undo.
      727   
      728       case pErrorType:
      729           
      730           when "PROGRESS" 
      731           then run insertErrorProgress(input pErrorParameters,
      732                                        input pErrorHelp,
      733                                        input-output table rowErrors).
      734   
      735           when "GP"
      736           then run insertErrorGP(input pErrorNumber,
      737                                  input pErrorParameters,
      738                                  input pErrorHelp,
      739                                  input-output table rowErrors).
      740   
      741           otherwise run insertOtherError(input pErrorNumber,
      742                                          input pErrorDescription,
      743                                          input pErrorParameters,
      744                                          input pErrorType,
      745                                          input pErrorSubType,
      746                                          input pErrorHelp,
      747                                          input-output table rowErrors).
      748       end.
      749       
      750       return "OK".
      751   
      752   end procedure.
      753   
      754   /* ------------------------------------------------------------------ EOF ----------------------- */
      755   
      756   DEF     SHARED VAR qt-cont-sair-aux AS INT NO-UNDO.
      757   
      758   /* ------------------------------------------------------------------------------------------------------ */
      759   PROCEDURE cria-registros:
      760   
      761       FOR FIRST paravpmc NO-LOCK:
      762       END.
      763       IF NOT AVAIL paravpmc
      764       THEN DO:
      765              run pi-grava-erro ("Parametros VP/MC nao cadastrados").
      766              lg-relat-erro-aux = YES.
      767            END.
      768   
      769       l-inclusao:
      770       do on error undo, retry:
      771       
      772          FOR EACH tt-import-propost EXCLUSIVE-LOCK,
      773             FIRST b-import-propost WHERE ROWID (b-import-propost) = tt-import-propost.rowid-import-prop EXCLUSIVE-LOCK:
      774   
      775              ASSIGN nro-seq-aux       = 0
      776                     lg-relat-erro-aux = NO.
      777       
      778              FOR FIRST bbb-import-propost /*APARENTEMENTE NUNCA SETA "RP" EM IND-SIT-IMPORT. PONTO DE ATENCAO, POIS NAO HA INDICE APROPRIADO NESSA LEITURA*/
      779                   where bbb-import-propost.ind-sit-import     = "RP"
      780                     and bbb-import-propost.cd-modalidade      = b-import-propost.cd-modalidade
      781                     and bbb-import-propost.nr-contrato-antigo = b-import-propost.nr-contrato-antigo
      782                         exclusive-lock: 
      783              END.
      784              if avail bbb-import-propost
      785              then do:
      786                     assign nr-proposta-aux = int(bbb-import-propost.cod-livre-6).
      787                     delete bbb-import-propost.
      788                   end.
      789              else do:
      790                     /**
      791                      * 23/03/2016 - Alex Boeira
      792                      * Se num-livre-10 estiver preenchido, usar para nr-proposta.
      793                      * Caso contrario, gerar normalmente pela regra antiga.
      794                      */
      795                     ASSIGN nr-proposta-aux = 0.
      796   
      797                     IF  b-import-propost.num-livre-10 <> 0
      798                     AND b-import-propost.num-livre-10 <> ?
      799                     THEN do:
      800                            ASSIGN nr-proposta-aux = b-import-propost.num-livre-10.
      801                            IF CAN-FIND(FIRST b-propost
      802                                        WHERE b-propost.cd-modalidade = b-import-propost.cd-modalidade
      803                                          AND b-propost.nr-proposta   = nr-proposta-aux)
      804                            THEN DO:
      805                                   run pi-grava-erro ("Ja existe proposta com Modalidade " + string(b-import-propost.cd-modalidade) +
      806                                                      " e Nr.Proposta " + STRING(nr-proposta-aux)).
      807                                   lg-relat-erro-aux = YES.
      808                                   NEXT.
      809                                 END.
      810                          END.
      811   
      812                     /**
      813                      * 21/03/2016 - Alex Boeira
      814                      * Retirei deste ponto a logica de geracao do nr da proposta
      815                      * e implementei dentro do metodo cria-proposta, pois estava
      816                      * causando erro de tentativa de duplicar a chave ao executar
      817                      * esse processo em mais de uma sessao simultanea.
      818                      
      819                             for last b-propost fields (nr-proposta) use-index propos2 
      820                            where b-propost.cd-modalidade = b-import-propost.cd-modalidade exclusive-lock:
      821                             end.
      822                             if   available b-propost
      823                             then assign nr-proposta-aux = b-propost.nr-proposta + 1.
      824                             else assign nr-proposta-aux = 1.
      825                     */
      826                   end.
      827              
      828              ASSIGN qt-cont-sair-aux = qt-cont-sair-aux + 1.
      829   
      830              IF lg-relat-erro-aux
      831              THEN do:
      832                     DELETE tt-import-propost.
      833                     NEXT.
      834                   END.
      835   
      836              RUN cria-proposta.
      837       
      838              IF lg-relat-erro-aux
      839              THEN do:
      840                     RUN remover.
      841                     DELETE tt-import-propost.
      842                     NEXT.
      843                   END.
      844   
      845              /* --- MODULOS PROPOSTA ---------------------------------- */
      846              ASSIGN lg-relat-erro-aux = NO.
      847       
      848              IF lg-registro-modulos
      849              THEN RUN cria-modulos.
      850       
      851              IF lg-relat-erro-aux
      852              THEN do:
      853                     RUN remover.
      854                     DELETE tt-import-propost.
      855                     NEXT.
      856                   END.
      857       
      858              /* --- FAIXAS PROPOSTA ----------------------------------- */
      859              ASSIGN lg-relat-erro-aux = NO.
      860                  
      861              IF  lg-registro-faixa
      862              AND b-import-propost.ind-faixa-etaria-especial <> "N"
      863              THEN RUN cria-faixas.
      864   
      865              RUN cria-lotacao.
      866   
      867              IF lg-relat-erro-aux
      868              THEN do:
      869                     RUN remover.
      870                     DELETE tt-import-propost.
      871                     NEXT.
      872                   END.
      873       
      874              /* --- NEGOCIACOES REPASSE ------------------------------- */
      875              IF lg-registro-negociacao
      876              THEN RUN cria-negoc-repas.
      877       
      878              /* --- COBERTURA PROPOSTA -------------------------------- */
      879              IF lg-registro-cobertura
      880              THEN RUN cria-cobertura.
      881       
      882              /* --- CAMPOS ESPECIFICOS -------------------------------- */
      883              IF lg-registro-especifico
      884              THEN RUN cria-campos-espec.
      885       
      886              /* --- PROCEDIMENTOS PROPOSTA ---------------------------- */
      887              ASSIGN lg-relat-erro-aux = NO.
      888       
      889              IF lg-registro-procedimento
      890              THEN RUN cria-proced-propost.
      891       
      892              IF lg-relat-erro-aux
      893              THEN do:
      894                     RUN remover.
      895                     DELETE tt-import-propost.
      896                     NEXT.
      897                   END.
      898       
      899              /* --- MEDICINA OCUPACIONAL ------------------------------ */
      900              IF lg-ver-imp8
      901              THEN RUN cria-mo.
      902       
      903              /* --- MEDICINA OCUPACIONAL FUNCAO------------------------ */
      904              IF lg-ver-imp9
      905              THEN RUN cria-mo-funcao.
      906       
      907              ASSIGN b-import-propost.ind-sit-import = "IT".
      908                     
      909              VALIDATE b-import-propost.
      910              RELEASE  b-import-propost.
      911              
      912              DELETE tt-import-propost.
      913       
      914          END.
      915       END.
      916   
      917   
      918   END PROCEDURE.
      919   
      920   /* ------------------------------------------------------------------------------------------- */
      921   /*
      922   procedure modulo-padrao.
      923   
      924       if   b-import-propost.cd-forma-pagto = 1
      925       or   b-import-propost.cd-forma-pagto = 2
      926       then do:
      927              for each pla-mod where pla-mod.cd-modalidade = b-import-propost.cd-modalidade
      928                                 and pla-mod.cd-plano      = b-import-propost.cd-plano
      929                                 and pla-mod.cd-tipo-plano = b-import-propost.cd-tipo-plano
      930                                     no-lock:
      931                  if   pla-mod.lg-obrigatorio
      932                  then do:
      933                         find first pro-pla use-index pro-pla3
      934                              where pro-pla.cd-modalidade = b-import-propost.cd-modalidade
      935                                and pro-pla.nr-proposta = nr-proposta-aux
      936                                and pro-pla.cd-modulo   = pla-mod.cd-modulo
      937                                    no-lock no-error.
      938                         if   not avail pro-pla
      939                         then do:
      940                                find tabpremo where tabpremo.cd-modalidade = b-import-propost.cd-modalidade
      941                                                and tabpremo.cd-plano      = b-import-propost.cd-plano
      942                                                and tabpremo.cd-tipo-plano = b-import-propost.cd-tipo-plano
      943                                                and tabpremo.cd-modulo     = pla-mod.cd-modulo
      944                                                and tabpremo.cd-tab-preco  = b-import-propost.cd-tab-preco
      945                                                    no-lock no-error.
      946                                if   not avail tabpremo
      947                                then do:
      948                                       assign lg-relat-erro = yes
      949                                              lg-retorna    = yes.
      950                                       run pi-grava-erro (input b-import-propost.num-seqcial-control,
      951                                                          input "PR -b-import-propost",
      952                                                          input "Tabela de Preco dos modulos nao cadastrada " + substring(b-import-propost.cd-tab-preco,1,3) + 
      953                                                                "/" + substring(b-import-propost.cd-tab-preco,4,2)  + 
      954                                                                "Mod: "    + string(b-import-propost.cd-modalidade) + 
      955                                                                "Plano: "  + string(b-import-propost.cd-plano)      + 
      956                                                                "Tipo: "   + string(b-import-propost.cd-tipo-plano) + 
      957                                                                "Modulo: " + string(pla-mod.cd-modulo),
      958                                                          input "ER").
      959                                       return.
      960                                     end.
      961                                find mod-cob where mod-cob.cd-modulo = pla-mod.cd-modulo no-lock no-error.
      962                                if not avail mod-cob
      963                                then do:
      964                                       assign lg-relat-erro = yes
      965                                              lg-retorna    = yes.
      966                                       run pi-grava-erro (input b-import-propost.num-seqcial-control,
      967                                                          input "PR -b-import-propost",
      968                                                          input "Modulo nao Cadastrado - Modulo: " + string(pro-pla.cd-modulo,"999"),
      969                                                          input "ER").
      970                                       return.
      971                                     end.                                  
      972              
      973                                create pro-pla.
      974                                assign pro-pla.cd-modalidade           = b-import-propost.cd-modalidade
      975                                       pro-pla.cd-plano                = b-import-propost.cd-plano
      976                                       pro-pla.cd-tipo-plano           = b-import-propost.cd-tipo-plano
      977                                       pro-pla.cd-modulo               = pla-mod.cd-modulo
      978                                       pro-pla.nr-proposta             = nr-proposta-aux
      979                                       pro-pla.cd-forma-pagto          = b-import-propost.cd-forma-pagto
      980                                       pro-pla.lg-carencia             = yes
      981                                       pro-pla.lg-cobertura-obrigato   = yes
      982                                       pro-pla.in-ctrl-carencia-proced = mod-cob.in-ctrl-carencia-proced
      983                                       pro-pla.in-ctrl-carencia-insumo = mod-cob.in-ctrl-carencia-insumo
      984                                       pro-pla.dt-inicio               = b-import-propost.dat-propost
      985                                       pro-pla.dt-cancelamento         = b-import-propost.dat-fim-propost
      986                                       pro-pla.dt-fim                  = b-import-propost.dat-fim-propost
      987                                       pro-pla.in-cobra-participacao   = pla-mod.in-cobra-participacao
      988                                       pro-pla.in-responsavel-autori   = pla-mod.in-responsavel-autorizacao
      989                                       pro-pla.dt-atualizacao          = today
      990                                       pro-pla.cd-userid               = v_cod_usuar_corren
      991                                       pro-pla.dt-mov-inclusao         = today
      992                                       pro-pla.cd-userid-inclusao      = v_cod_usuar_corren.
      993   
      994                                if mod-cob.in-ctrl-carencia-proced = 1
      995                                or mod-cob.in-ctrl-carencia-insumo = 1
      996                                then assign pro-pla.qt-caren-eletiva  = pla-mod.qt-caren-eletiva
      997                                            pro-pla.qt-caren-urgencia = pla-mod.qt-caren-urgencia.
      998                                else assign pro-pla.qt-caren-eletiva  = 0 
      999                                            pro-pla.qt-caren-urgencia = 0.
     1000              
     1001                                if   b-import-propost.dat-fim-propost = ?
     1002                                then.
     1003                                else assign pro-pla.dt-mov-exclusao = today
     1004                                            pro-pla.cd-userid-exclusao
     1005                                                     = v_cod_usuar_corren.
     1006              
     1007                                assign lg-plano-aux = yes.
     1008                              end.
     1009                        end.
     1010              end.
     1011            end. /*  tipo de pagto = 1 ou 2  */
     1012    
     1013    
     1014       if   b-import-propost.cd-forma-pagto = 3
     1015       then do:
     1016              for each pla-mod 
     1017                 where pla-mod.cd-modalidade = b-import-propost.cd-modalidade
     1018                   and pla-mod.cd-plano      = b-import-propost.cd-plano
     1019                   and pla-mod.cd-tipo-plano = b-import-propost.cd-tipo-plano   
     1020                       no-lock:
     1021        
     1022                  if   pla-mod.lg-obrigatorio
     1023                  then do:
     1024                         find plamofor where plamofor.cd-modalidade  = b-import-propost.cd-modalidade
     1025                                          and plamofor.cd-plano      = b-import-propost.cd-plano
     1026                                          and plamofor.cd-tipo-plano = b-import-propost.cd-tipo-plano
     1027                                          and plamofor.cd-modulo     = pla-mod.cd-modulo
     1028                                              no-lock no-error.
     1029                         if   avail plamofor
     1030                         then do:
     1031                              find first pro-pla use-index pro-pla3
     1032                                   where pro-pla.cd-modalidade = b-import-propost.cd-modalidade
     1033                                     and pro-pla.nr-proposta   = nr-proposta-aux
     1034                                     and pro-pla.cd-modulo     = plamofor.cd-modulo
     1035                                         no-lock no-error.
     1036                              if   not avail pro-pla
     1037                              then do:
     1038                                     find tabpremo where tabpremo.cd-modalidade   = b-import-propost.cd-modalidade
     1039                                                     and tabpremo.cd-plano      = b-import-propost.cd-plano
     1040                                                     and tabpremo.cd-tipo-plano = b-import-propost.cd-tipo-plano
     1041                                                     and tabpremo.cd-modulo     = pla-mod.cd-modulo
     1042                                                     and tabpremo.cd-tab-preco  = b-import-propost.cd-tab-preco
     1043                                                         no-lock no-error.
     1044                                     if   not avail tabpremo
     1045                                     then do:
     1046                                            assign lg-relat-erro = yes
     1047                                                   lg-retorna    = yes.
     1048                                            run pi-grava-erro (input b-import-propost.num-seqcial-control,
     1049                                                               input "PR -b-import-propost",
     1050                                                               input "Tabela de Preco dos modulos nao cadastrada " + substring(b-import-propost.cd-tab-preco,1,3) + 
     1051                                                                     "/" + substring(b-import-propost.cd-tab-preco,4,2)   + 
     1052                                                                     "Mod: "    +  string(b-import-propost.cd-modalidade) + 
     1053                                                                     "Plano: "  +  string(b-import-propost.cd-plano)      + 
     1054                                                                     "Tipo: "   +  string(b-import-propost.cd-tipo-plano) + 
     1055                                                                     "modulo: " +  string(pla-mod.cd-modulo),
     1056                                                               input "ER").
     1057                                            return.
     1058                                          end.
     1059                                     find mod-cob where mod-cob.cd-modulo = pla-mod.cd-modulo no-lock no-error.
     1060                                     if not avail mod-cob
     1061                                     then do:
     1062                                            assign lg-relat-erro = yes
     1063                                                   lg-retorna    = yes.
     1064                                            run pi-grava-erro (input b-import-propost.num-seqcial-control,
     1065                                                               input "PR -b-import-propost",
     1066                                                               input "Modulo nao Cadastrado - Modulo: " + string(pro-pla.cd-modulo,"999"),
     1067                                                               input "ER").
     1068                                            return.
     1069                                          end.
     1070                                     
     1071                                     create pro-pla.
     1072                                     assign pro-pla.cd-modalidade            = b-import-propost.cd-modalidade
     1073                                            pro-pla.cd-plano                 = b-import-propost.cd-plano
     1074                                            pro-pla.cd-tipo-plano            = b-import-propost.cd-tipo-plano
     1075                                            pro-pla.cd-modulo                = plamofor.cd-modulo
     1076                                            pro-pla.nr-proposta              = nr-proposta-aux
     1077                                            pro-pla.cd-forma-pagto           = plamofor.cd-forma-pagto
     1078                                            pro-pla.lg-carencia              = yes
     1079                                            pro-pla.lg-cobertura-obrigatoria = yes
     1080                                            pro-pla.in-ctrl-carencia-proced  = mod-cob.in-ctrl-carencia-proced
     1081                                            pro-pla.in-ctrl-carencia-insumo  = mod-cob.in-ctrl-carencia-insumo
     1082                                            pro-pla.qt-caren-eletiva         = pla-mod.qt-caren-eletiva
     1083                                            pro-pla.qt-caren-urgencia        = pla-mod.qt-caren-urgencia
     1084                                            pro-pla.in-cobra-participacao    = pla-mod.in-cobra-participacao
     1085                                            pro-pla.in-responsavel-autori    = pla-mod.in-responsavel-autorizacao
     1086                                            pro-pla.dt-inicio                = b-import-propost.dat-propost
     1087                                            pro-pla.dt-cancelamento          = b-import-propost.dat-fim-propost
     1088                                            pro-pla.dt-fim                   = b-import-propost.dat-fim-propost
     1089                                            pro-pla.dt-atualizacao           = today
     1090                                            pro-pla.cd-userid                = v_cod_usuar_corren
     1091                                            pro-pla.dt-mov-inclusao          = today
     1092                                            pro-pla.cd-userid-inclusao       = v_cod_usuar_corren.
     1093   
     1094                                      if   b-import-propost.dat-fim-propost = ?
     1095                                      then.
     1096                                      else assign pro-pla.dt-mov-exclusao    = today
     1097                                                  pro-pla.cd-userid-exclusao = v_cod_usuar_corren.
     1098                                      assign lg-plano-aux = yes.
     1099                                    end.
     1100                               end.
     1101                         end.
     1102              end.   /*  for each   */
     1103          end.  /* forma de pagto = 3 */
     1104    
     1105   end.*/
     1106   
     1107   PROCEDURE cria-proposta:
     1108       DEF BUFFER b-ter-ade FOR ter-ade.
     1109       DEF VAR lg-validar-nr-proposta-aux AS LOG INIT NO NO-UNDO.
     1110   
     1111       ASSIGN lg-relat-erro-aux = NO.
     1112   
     1113       find modalid where modalid.cd-modalidade = b-import-propost.cd-modalidade no-lock no-error.
     1114   
     1115       FIND ti-pl-sa NO-LOCK
     1116            WHERE ti-pl-sa.cd-modalidade = b-import-propost.cd-modalidade
     1117              AND ti-pl-sa.cd-plano      = b-import-propost.cd-plano
     1118              AND ti-pl-sa.cd-tipo-plano = b-import-propost.cd-tipo-plano NO-ERROR.
     1119   
     1120       for last b-propost fields (nr-proposta) use-index propos8 
     1121          where b-propost.cd-modalidade       = b-import-propost.cd-modalidade
     1122            and b-propost.nr-insc-contratante = tt-import-propost.nr-insc-contrat no-lock:
     1123       end.
     1124       if   available b-propost
     1125       then assign nr-proposta-anterior-aux = b-propost.nr-proposta.
     1126       else assign nr-proposta-anterior-aux = 0.
     1127   
     1128       if b-import-propost.in-registro-plano = 1
     1129       then do:
     1130              if b-import-propost.cd-registro-plano <> 0
     1131              then for first reg-plano-saude fields(idi-registro)
     1132                       where reg-plano-saude.cdn-plano-ans = b-import-propost.cd-registro-plano 
     1133                             no-lock query-tuning(no-index-hint): 
     1134                   end.
     1135              else for first reg-plano-saude fields(idi-registro)
     1136                       where reg-plano-saude.cod-plano-operadora    = b-import-propost.cd-plano-operadora 
     1137                         and reg-plano-saude.in-tipo-regulamentacao = b-import-propost.num-livre-8
     1138                             no-lock query-tuning (no-index-hint): 
     1139                   end.
     1140            end.
     1141       
     1142       /**
     1143        * Se chegou nesse ponto com nr-proposta-aux <> 0, significa que o numero
     1144        * ja foi definido e nao deve ser alterado.
     1145        */
     1146       if nr-proposta-aux = 0
     1147       then do:
     1148              for last b-propost fields (nr-proposta) use-index propos2 
     1149                 where b-propost.cd-modalidade = b-import-propost.cd-modalidade no-lock:
     1150              end.
     1151              if   available b-propost
     1152              then assign nr-proposta-aux = b-propost.nr-proposta + 1.
     1153              else assign nr-proposta-aux = 1.
     1154   
     1155              assign lg-validar-nr-proposta-aux = yes.
     1156            end.
     1157   
     1158       /** 
     1159        * Gerar numero da proxima proposta.
     1160        */
     1161       create propost.
     1162   
     1163       if lg-validar-nr-proposta-aux
     1164       then do:
     1165              repeat:
     1166                  assign propost.cd-modalidade = b-import-propost.cd-modalidade
     1167                         propost.nr-proposta   = nr-proposta-aux no-error.
     1168                  validate propost no-error.
     1169                  if error-status:error 
     1170                  or error-status:num-messages > 0
     1171                  then do:
     1172                         pause(1). /* aguarda 1seg e busca novamente o proximo nr livre.*/
     1173                  
     1174                         for last b-propost fields (nr-proposta) use-index propos2 
     1175                            where b-propost.cd-modalidade = b-import-propost.cd-modalidade no-lock:
     1176                         end.
     1177                         if   available b-propost
     1178                         then assign nr-proposta-aux = b-propost.nr-proposta + 1.
     1179                         else assign nr-proposta-aux = 1.
     1180                       end.
     1181                  else leave.    /* o nr gerado eh valido. continua o processo.*/
     1182              end.
     1183            end.
     1184       else assign propost.cd-modalidade        = b-import-propost.cd-modalidade
     1185                   propost.nr-proposta          = nr-proposta-aux.
     1186   
     1187       assign propost.vl-proposta-migracao = b-import-propost.val-propost-migrac
     1188              propost.mm-ult-reajuste      = b-import-propost.num-mm-ult-reaj
     1189              propost.aa-ult-reajuste      = b-import-propost.aa-ult-reajuste
     1190              propost.pc-ult-reajuste      = b-import-propost.pc-ult-reajuste / 100
     1191              propost.idi-plano-ans        = if avail reg-plano-saude then reg-plano-saude.idi-registro else 0.
     1192   
     1193       for first for-pag fields (tp-vencimento 
     1194                                 dd-faturamento 
     1195                                 lg-trata-inadimplencia-rc
     1196                                 cd-classe-mens)
     1197           where for-pag.cd-modalidade  = b-import-propost.cd-modalidade
     1198             and for-pag.cd-plano       = b-import-propost.cd-plano
     1199             and for-pag.cd-tipo-plano  = b-import-propost.cd-tipo-plano
     1200             and for-pag.cd-forma-pagto = b-import-propost.cd-forma-pagto 
     1201                 no-lock query-tuning (no-index-hint):
     1202       end.
     1203       
     1204       /* ----------------------------------------- INDICADOR INADIMPLENCIA --- */
     1205       if avail for-pag
     1206       and      for-pag.lg-trata-inadimplencia-rc
     1207       then assign propost.in-trata-inadimplencia = 00. /* ---------- TRATA --- */
     1208       else assign propost.in-trata-inadimplencia = 01. /* ------ NAO TRATA --- */
     1209       
     1210       if   avail paramecp
     1211       then assign propost.ep-codigo   = paramecp.ep-codigo
     1212                   propost.cod-estabel = paramecp.cod-estabel
     1213                   propost.cd-unimed   = paramecp.cd-unimed.
     1214   
     1215       if b-import-propost.ind-faixa-etaria-especial <> "" 
     1216       and not can-find (first import-faixa-propost where import-faixa-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost)
     1217       then DO:
     1218              /* -------------------------------- FAIXA ESPECIAL PELA ESTRUTURA --- */
     1219              if b-import-propost.ind-faixa-etaria-especial = "S"
     1220              then for each pl-gr-pa fields (cd-grau-parentesco nr-faixa-etaria nr-idade-minima nr-idade-maxima qt-fator-multiplicador qt-fat-mult-inscr lg-inclusao)
     1221                      where pl-gr-pa.cd-modalidade = b-import-propost.cd-modalidade
     1222                        and pl-gr-pa.cd-plano      = b-import-propost.cd-plano
     1223                        and pl-gr-pa.cd-tipo-plano = b-import-propost.cd-tipo-plano
     1224                        and pl-gr-pa.lg-inclusao no-lock query-tuning(no-index-hint):
     1225                     
     1226                       if not can-find (first teadgrpa 
     1227                                        where teadgrpa.cd-modalidade      = b-import-propost.cd-modalidade
     1228                                          and teadgrpa.nr-proposta        = nr-proposta-aux
     1229                                          and teadgrpa.cd-grau-parentesco = pl-gr-pa.cd-grau-parentesco
     1230                                          and teadgrpa.nr-faixa-etaria    = pl-gr-pa.nr-faixa-etaria)
     1231                       then do:
     1232                              create teadgrpa.
     1233                              assign teadgrpa.cd-modalidade          = b-import-propost.cd-modalidade
     1234                                     teadgrpa.nr-proposta            = nr-proposta-aux
     1235                                     teadgrpa.cd-grau-parentesco     = pl-gr-pa.cd-grau-parentesco
     1236                                     teadgrpa.nr-faixa-etaria        = pl-gr-pa.nr-faixa-etaria
     1237                                     teadgrpa.nr-idade-minima        = pl-gr-pa.nr-idade-minima
     1238                                     teadgrpa.nr-idade-maxima        = pl-gr-pa.nr-idade-maxima
     1239                                     teadgrpa.qt-fator-multiplicador = pl-gr-pa.qt-fator-multiplicador
     1240                                     teadgrpa.qt-fat-mult-inscr      = pl-gr-pa.qt-fat-mult-inscr
     1241                                     teadgrpa.lg-inclusao            = pl-gr-pa.lg-inclusao
     1242                                     teadgrpa.dt-atualizacao         = today.
     1243                                     teadgrpa.cd-userid              = v_cod_usuar_corren.
     1244                            end.
     1245                   end.
     1246   
     1247              /* ------------------------------- FAIXA ESPECIAL PELO CONVENIO ---
     1248               * O extrator do Unicoo nunca envia esse parametro como "C". A regra foi preservada
     1249               * para migracoes de outros sistemas.
     1250               */
     1251              if b-import-propost.ind-faixa-etaria-especial = "C"
     1252              then for each fxetconv FIELDS (cd-grau-parentesco nr-faixa-etaria nr-idade-minima nr-idade-maxima qt-fator-multiplicador qt-fat-mult-inscr lg-inclusao)
     1253                      where fxetconv.cd-convenio    = b-import-propost.cd-convenio
     1254                        and fxetconv.cd-modalidade  = b-import-propost.cd-modalidade
     1255                        and fxetconv.cd-plano       = b-import-propost.cd-plano
     1256                        and fxetconv.cd-tipo-plano  = b-import-propost.cd-tipo-plano
     1257                        and fxetconv.lg-inclusao NO-LOCK query-tuning(no-index-hint): 
     1258              
     1259                       IF NOT CAN-FIND (first teadgrpa 
     1260                                        where teadgrpa.cd-modalidade      = b-import-propost.cd-modalidade
     1261                                          and teadgrpa.nr-proposta        = nr-proposta-aux
     1262                                          and teadgrpa.cd-grau-parentesco = fxetconv.cd-grau-parentesco
     1263                                          and teadgrpa.nr-faixa-etaria    = fxetconv.nr-faixa-etaria)
     1264                       then do:
     1265                              create teadgrpa.
     1266                              assign teadgrpa.cd-modalidade          = b-import-propost.cd-modalidade
     1267                                     teadgrpa.nr-proposta            = nr-proposta-aux
     1268                                     teadgrpa.cd-grau-parentesco     = fxetconv.cd-grau-parentesco
     1269                                     teadgrpa.nr-faixa-etaria        = fxetconv.nr-faixa-etaria
     1270                                     teadgrpa.nr-idade-minima        = fxetconv.nr-idade-minima
     1271                                     teadgrpa.nr-idade-maxima        = fxetconv.nr-idade-maxima
     1272                                     teadgrpa.qt-fator-multiplicador = fxetconv.qt-fator-multiplicador
     1273                                     teadgrpa.qt-fat-mult-inscr      = fxetconv.qt-fat-mult-inscr
     1274                                     teadgrpa.lg-inclusao            = fxetconv.lg-inclusao
     1275                                     teadgrpa.dt-atualizacao         = today.
     1276                                     teadgrpa.cd-userid              = v_cod_usuar_corren.
     1277                            end.
     1278                   end. 
     1279            end.
     1280   
     1281       release contrat.
     1282   
     1283       if b-import-propost.nr-insc-contratante <> 0
     1284       then for first contrat fields (cd-contratante nr-insc-contratante lg-tem-proposta) 
     1285                where contrat.nr-insc-contratante = b-import-propost.nr-insc-contratante 
     1286                      exclusive-lock query-tuning (no-index-hint):
     1287   
     1288                assign contrat.lg-tem-proposta     = yes
     1289                       propost.cd-contratante      = contrat.cd-contratante
     1290                       propost.nr-insc-contratante = contrat.nr-insc-contratante.
     1291            end.
     1292       
     1293       if avail contrat
     1294       then do:
     1295               for first endereco fields (cd-cidade)
     1296                    where endereco.id-pessoa = contrat.id-pessoa
     1297                      and endereco.lg-principal no-lock query-tuning (no-index-hint):
     1298           
     1299                    for first assocva-cidad-empres-estab fields (cod-empres cod-estab) 
     1300                        where assocva-cidad-empres-estab.cdn-cidad = endereco.cd-cidade 
     1301                              no-lock query-tuning (no-index-hint):
     1302       
     1303                        assign propost.ep-codigo   = assocva-cidad-empres-estab.cod-empres
     1304                               propost.cod-estabel = assocva-cidad-empres-estab.cod-estab.
     1305                    end.
     1306               end.
     1307       
     1308                /* NOVO CAMPO - ENDERECO DE COBRANCA DO CONTRATO (BOLETO) */
     1309                 for first endereco fields (id-endereco)
     1310                     where endereco.id-pessoa = contrat.id-pessoa
     1311                       and endereco.lg-end-cobranca no-lock query-tuning (no-index-hint):
     1312   
     1313                           ASSIGN propost.num-livre-17 = endereco.id-endereco.
     1314                 end.
     1315                 IF propost.num-livre-17 = 0
     1316                 THEN    for first endereco fields (id-endereco)
     1317                              where endereco.id-pessoa = contrat.id-pessoa
     1318                                and endereco.lg-principal no-lock query-tuning (no-index-hint):
     1319           
     1320                                    ASSIGN propost.num-livre-17 = endereco.id-endereco.
     1321                         end.
     1322       END.
     1323   
     1324       assign propost.nr-insc-contrat-origem = 0
     1325              propost.cd-contrat-origem      = 0.
     1326   
     1327       if  b-import-propost.nr-insc-contrat-origem <> 0
     1328       and b-import-propost.nr-insc-contrat-origem <> ?
     1329       then for first b-contrat fields (cd-contratante nr-insc-contratante lg-tem-proposta) 
     1330                where b-contrat.nr-insc-contratante = b-import-propost.nr-insc-contrat-origem 
     1331                      exclusive-lock query-tuning (no-index-hint):
     1332   
     1333                assign b-contrat.lg-tem-proposta       = yes
     1334                       propost.cd-contrat-origem       = b-contrat.cd-contratante
     1335                       propost.nr-insc-contrat-origem  = b-contrat.nr-insc-contratante.
     1336            end.
     1337   
     1338       if b-import-propost.ind-faixa-etaria-especial = "S" 
     1339       or b-import-propost.ind-faixa-etaria-especial = "C"
     1340       then assign propost.lg-faixa-etaria-esp = yes.
     1341       else assign propost.lg-faixa-etaria-esp = no.
     1342              
     1343       assign propost.cd-plano                   = b-import-propost.cd-plano
     1344              propost.cd-tipo-plano              = b-import-propost.cd-tipo-plano
     1345              propost.cd-tipo-proposta           = 09 
     1346              propost.lg-cobertura-esp           = b-import-propost.log-cobert-especial
     1347              propost.cd-forma-pagto             = b-import-propost.cd-forma-pagto
     1348              propost.cd-tipo-vencimento         = b-import-propost.cdn-tip-vencto
     1349              propost.dd-vencimento              = b-import-propost.num-dia-vencto
     1350              propost.lg-inicio-validade         = b-import-propost.log-inic-valid
     1351              propost.lg-medico-empresa          = b-import-propost.log-medic-empres
     1352              propost.cd-vendedor                = b-import-propost.cd-vendedor
     1353              propost.lg-considera-taxa-co       = b-import-propost.log-consid-tax-coper
     1354              propost.pc-acresc-taxa             = if b-import-propost.pc-acresc-taxa = ? then 0 else b-import-propost.pc-acresc-taxa
     1355              propost.lg-mascara                 = b-import-propost.log-mascar
     1356              propost.lg-cartao                  = b-import-propost.log-cartao
     1357              propost.lg-precproc-cob            = b-import-propost.log-cobr-dif-pagto
     1358              propost.lg-pea                     = b-import-propost.log-segassist
     1359              
     1360              propost.lg-altera-validade-usuario = b-import-propost.log-altera-val-usuar
     1361              propost.lg-alt-val-usu-prorroga    = b-import-propost.log-altera-valid-prorrog
     1362              propost.lg-altera-taxa-inscricao   = b-import-propost.log-altera-tax-inscr
     1363              propost.lg-altera-fator-moderador  = b-import-propost.log-altera-fator-moder
     1364              
     1365              propost.lg-prop-regulamentada      = b-import-propost.log-propost-regulam
     1366              propost.log-2                      = YES /* Permite informar data de exclusÒo */
     1367              propost.log-3                      = IF lg-ver-imp8 THEN YES ELSE NO /* Emite termo de comunicaþÒo */
     1368              propost.log-11                     = b-import-propost.log-livre-1 /* usuario eventual */
     1369              propost.log-13                     = FALSE /* inadimplencia a nivel de proposta */
     1370              propost.dec-1                      = 0 /*numero maximo de dias de inadimplencia (relacionado ao log-13)*/
     1371              propost.date-1                     = b-import-propost.dat-livre-1 /*data de validade da carteira (CONTRATO_DA_PESSOA.DTVALIDCAR)*/
     1372              propost.log-4                      = YES /* UTILIZA REAJUSTE DA REGRA DE MENSALIDADE? */
     1373              .
     1374   
     1375       IF b-import-propost.in-tipo-natureza = 3 /* EMPRESARIAL */
     1376       AND can-find(FIRST import-lotac-propost
     1377                    WHERE import-lotac-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost 
     1378                      AND import-lotac-propost.cdn-lotac <> 0)
     1379       THEN propost.log-utiliz-lotac           = yes.
     1380       ELSE propost.log-utiliz-lotac           = NO.
     1381   
     1382       IF b-import-propost.in-tipo-natureza = 4 /* ADESAO */
     1383       THEN propost.num-livre-16 = 2. /* indicador se permite informar RESPONSAVEL FINANCEIRO no beneficiario. 0-desabilitado, 1-opcional, 2-obrigatorio*/
     1384       else propost.num-livre-16 = 0. /* ativar como opcional apenas para os planos Adesao*/
     1385   
     1386       /**
     1387        * Indicador se a geracao do Numero de Familia sera automatico (0) ou manual (1).
     1388        */
     1389       IF b-import-propost.log-livre-2
     1390       THEN assign propost.int-1 = 1.
     1391       ELSE assign propost.int-1 = 0.
     1392   
     1393       /**
     1394        * Indicador de Empresario Individual (RN432)
     1395        */
     1396       IF b-import-propost.log-livre-3
     1397       THEN ASSIGN propost.char-15 = "yes".
     1398       else ASSIGN propost.char-15 = "no".
     1399   
     1400       if   b-import-propost.log-fatur-segassist
     1401       and  b-import-propost.log-segassist         
     1402       then assign b-import-propost.pc-desconto-inscr = 100
     1403                   b-import-propost.dat-lim-desc-inscr = b-import-propost.dat-fim-segassist.
     1404       
     1405       else if b-import-propost.log-segassist 
     1406            then assign b-import-propost.pc-desconto         = 100
     1407                        b-import-propost.dat-lim-desc-mensal = b-import-propost.dat-fim-segassist
     1408                        b-import-propost.pc-desconto-inscr   = 100
     1409                        b-import-propost.dat-lim-desc-inscr  = b-import-propost.dat-fim-segassist.
     1410       
     1411       if b-import-propost.log-fatur-segassist and
     1412          b-import-propost.log-segassist   
     1413       then do:
     1414              if b-import-propost.ind-cobr = "0"
     1415              then propost.in-mensalidade-migracao = 0.
     1416              else propost.in-mensalidade-migracao = 2.
     1417            end.
     1418       
     1419       if   propost.lg-mascara
     1420       then assign propost.ds-mascara = caps(b-import-propost.des-mascar).
     1421       
     1422       assign propost.dt-proposta           = b-import-propost.dat-propost
     1423              propost.nr-proposta-anterior  = nr-proposta-anterior-aux
     1424              propost.cd-tab-preco          = b-import-propost.cd-tab-preco
     1425              propost.cd-tab-preco-proc     = b-import-propost.cd-tab-preco-proc
     1426              propost.cd-tab-preco-proc-cob = b-import-propost.cd-tab-preco-proc-cob
     1427              propost.cd-convenio           = b-import-propost.cd-convenio
     1428              propost.cd-tipo-participacao  = b-import-propost.cd-tipo-participacao
     1429              propost.pc-desconto           = b-import-propost.pc-desconto
     1430              propost.pc-acrescimo          = b-import-propost.pc-acrescimo
     1431              propost.pc-desconto-inscr     = b-import-propost.pc-desconto-inscr
     1432              propost.pc-acrescimo-inscr    = b-import-propost.pc-acrescimo-inscr
     1433              propost.dt-lim-acres-mens     = b-import-propost.dt-lim-acres-mens
     1434              propost.dt-lim-acres-inscr    = b-import-propost.dat-lim-acresc-inscr
     1435              propost.dt-lim-desc-mens      = b-import-propost.dat-lim-desc-mensal
     1436              propost.dt-lim-desc-inscr     = b-import-propost.dat-lim-desc-inscr
     1437              propost.pc-desc-prom-taxa     = b-import-propost.pc-desc-prom-taxa
     1438              propost.dt-val-prom-tax       = b-import-propost.dat-valid-prom-tax
     1439              propost.pc-desc-prom-pl       = b-import-propost.pc-desc-prom-pl
     1440              propost.dt-val-prom-pl        = b-import-propost.dat-valid-prom-plano
     1441              propost.dt-libera-doc         = b-import-propost.dat-fim-propost
     1442              propost.qt-validade-cartao    = b-import-propost.qt-validade-cartao
     1443              propost.um-validade-cartao    = b-import-propost.um-validade-cartao
     1444              propost.qt-validade-cart      = b-import-propost.qt-validade-cart
     1445              propost.um-validade-cart      = b-import-propost.um-validade-cart
     1446              propost.qt-validade-termo     = b-import-propost.qt-validade-termo
     1447              propost.um-validade-termo     = b-import-propost.um-validade-termo
     1448              propost.in-tipo-contratacao   = b-import-propost.in-tipo-contratacao
     1449              propost.in-tipo-natureza      = b-import-propost.in-tipo-natureza
     1450              propost.in-validade-doc-ident = b-import-propost.in-validade-doc-ident
     1451              propost.in-registro-plano     = b-import-propost.in-registro-plano
     1452              propost.nr-oficio-reajuste    = b-import-propost.nr-oficio-reajuste
     1453              propost.int-12                = b-import-propost.cdn-tip-idx  
     1454              propost.int-13                = b-import-propost.cdn-niv-reaj
     1455              propost.cd-sit-proposta       = 1
     1456              propost.nr-contrato-antigo    = b-import-propost.nr-contrato-antigo
     1457              propost.dt-digitacao          = today
     1458              propost.cd-userid-digitacao   = v_cod_usuar_corren
     1459              propost.dt-atualizacao        = today
     1460              propost.cd-userid             = v_cod_usuar_corren
     1461              propost.mm-aa-ult-fat-mig     = substr(string(b-import-propost.num-mes-ult-faturam,"99"),1,2)
     1462                                            + substr(string(b-import-propost.aa-ult-fat,"9999"),1,4)
     1463              /* inicializa PROXIMO AJUSTE PARTICIPACAO com proximo ano a partir do inicio do termo, mas pode ser 
     1464                 sobreposto na procedure unicoogps.p_associa_agrupador_contrato (PL/SQL) caso encontre informacao mais atual no UNICOO*/
     1465              propost.char-11 = string(year(b-import-propost.dat-propost) + 1,"9999") + STRING(MONTH(b-import-propost.dat-propost),"99")
     1466              propost.log-12 = YES. /*novas regras faturamento*/
     1467   
     1468       /* --- Validade do termo e cartão -------------------------------------- */
     1469       /*
     1470       FIND FIRST ti-pl-sa 
     1471            WHERE ti-pl-sa.cd-modalidade = propost.cd-modalidade
     1472              AND ti-pl-sa.cd-plano      = propost.cd-plano
     1473              AND ti-pl-sa.cd-tipo-plano = propost.cd-tipo-plano 
     1474                  NO-LOCK NO-ERROR.
     1475   
     1476       IF AVAIL ti-pl-sa
     1477       THEN DO:
     1478              IF  ti-pl-sa.um-validade-termo = b-import-propost.um-validade-termo
     1479              AND ti-pl-sa.qt-validade-termo = b-import-propost.qt-validade-termo
     1480              THEN ASSIGN propost.qt-validade-termo = 0
     1481                          propost.um-validade-termo = "".
     1482              ELSE ASSIGN propost.qt-validade-termo = b-import-propost.qt-validade-termo
     1483                          propost.um-validade-termo = b-import-propost.um-validade-termo.
     1484   
     1485              IF  ti-pl-sa.qt-validade-cart = b-import-propost.qt-validade-cart
     1486              AND ti-pl-sa.um-validade-cart = b-import-propost.um-validade-cart
     1487              THEN ASSIGN propost.qt-validade-cart = 0
     1488                          propost.um-validade-cart = "".
     1489              ELSE ASSIGN propost.qt-validade-cart = b-import-propost.qt-validade-cart
     1490                          propost.um-validade-cart = b-import-propost.um-validade-cart.
     1491   
     1492              IF  ti-pl-sa.qt-validade-cartao = b-import-propost.qt-validade-cartao
     1493              AND ti-pl-sa.um-validade-cartao = b-import-propost.um-validade-cartao
     1494              THEN ASSIGN propost.qt-validade-cartao = 0
     1495                          propost.um-validade-cartao = "".
     1496              ELSE ASSIGN propost.qt-validade-cartao = b-import-propost.qt-validade-cartao
     1497                          propost.um-validade-cartao = b-import-propost.um-validade-cartao.
     1498            END.
     1499       */
     1500       
     1501       /* --------------------------------------------------------------------- */
     1502       IF lg-gerar-termo-aux
     1503       THEN DO:
     1504              if   modalid.in-geracao-termo = 1 /* numero do termo sequencial */
     1505              then do:
     1506                     FOR last b-ter-ade FIELDS (nr-ter-adesao)
     1507                        where b-ter-ade.cd-modalidade = propost.cd-modalidade EXCLUSIVE-LOCK:
     1508                     END.
     1509                     if   not avail b-ter-ade
     1510                     then assign propost.nr-ter-adesao = 1.
     1511                     else assign propost.nr-ter-adesao = b-ter-ade.nr-ter-adesao + 1.
     1512                   end.
     1513              else do: /* numero do termo igual ao numero da proposta */
     1514                     if   propost.nr-proposta > 999999
     1515                     then do:
     1516                            run pi-grava-erro ("Nao sera possivel gerar numero do termo. " +  
     1517                                               "Proposta com numero maior que 999999."     + 
     1518                                               " Mod: " + string(propost.cd-modalidade)).
     1519                            lg-relat-erro-aux = YES.
     1520                            assign propost.nr-ter-adesao = 0.
     1521                            next.
     1522                          end.
     1523                     else assign propost.nr-ter-adesao = propost.nr-proposta.
     1524                   end.
     1525   
     1526              /*
     1527              if   today > propost.dt-lim-acres-mens
     1528              or   today > propost.dt-lim-acres-inscr
     1529              then do: 
     1530                     assign ds-mensagem-err-aux = "Proposta com data limite " +
     1531                                                  "de acrescimo da mensalidade/" +
     1532                                                  "inscricao vencida".
     1533                     run gera-erro(input "A").
     1534                   end.
     1535              
     1536              if   today > propost.dt-lim-desc-mens
     1537              or   today > propost.dt-lim-desc-inscr
     1538              then do: 
     1539                      assign ds-mensagem-err-aux = "Proposta com data limite " +
     1540                                                   "de desconto da mensalidade/"  +
     1541                                                   "inscricao vencida".
     1542                      run gera-erro(input "A").
     1543                    end.
     1544              */
     1545   
     1546              assign propost.dt-confirmacao        = today
     1547                     propost.cd-userid-confirmacao = v_cod_usuar_corren
     1548                     propost.dt-atualizacao        = today
     1549                     propost.cd-userid             = v_cod_usuar_corren
     1550                     propost.dt-parecer            = propost.dt-proposta
     1551                     propost.cd-usuario-diretor    = v_cod_usuar_corren
     1552                     propost.dt-aprovacao          = today.
     1553              
     1554              FOR FIRST b-contrat EXCLUSIVE-LOCK WHERE rowid(b-contrat) = ROWID(contrat):
     1555                        assign b-contrat.dt-analise-credito = today
     1556                               b-contrat.cd-userid-analise  = v_cod_usuar_corren
     1557                               b-contrat.cd-sit-cred        = 1.
     1558              END.
     1559              
     1560              if   paramecp.cd-mediocupa = modalid.cd-tipo-medicina
     1561              THEN lg-medocup-aux = YES.
     1562              ELSE lg-medocup-aux = NO.
     1563   
     1564              run liberar-documentos.
     1565              IF lg-relat-erro-aux
     1566              THEN NEXT.
     1567              
     1568            END.
     1569       
     1570       create sit-aprov-proposta.    
     1571       assign sit-aprov-proposta.id-sit-aprov-proposta = next-value(seq-sit-aprov-proposta)
     1572              sit-aprov-proposta.cd-modalidade         = propost.cd-modalidade
     1573              sit-aprov-proposta.nr-proposta           = propost.nr-proposta
     1574              sit-aprov-proposta.cd-userid             = v_cod_usuar_corren
     1575              sit-aprov-proposta.dt-atualizacao        = today.
     1576   
     1577       CASE propost.cd-sit-proposta:
     1578           WHEN 1 or /* DIGITACAO */
     1579           WHEN 2 or /* CONFIRMADA */
     1580           WHEN 85   /* SUSPENSA */ 
     1581           THEN assign sit-aprov-proposta.in-situacao              = 2 /* EM CADASTRAMENTO */
     1582                       sit-aprov-proposta.nm-aprovador             = ""
     1583                       sit-aprov-proposta.nm-cadastrador           = propost.cd-userid-digitacao
     1584                       sit-aprov-proposta.dt-movimento-aprovador   = ?
     1585                       sit-aprov-proposta.dt-movimento-cadastrador = propost.dt-digitacao
     1586                       sit-aprov-proposta.cd-motivo-reprovacao     = 0.
     1587   
     1588           WHEN 3 /* PENDENTE ANALISE DE CREDITO */
     1589           then assign sit-aprov-proposta.in-situacao              = 9 /* PENDENTE ANALISE DE CREDITO */
     1590                       sit-aprov-proposta.nm-aprovador             = ""
     1591                       sit-aprov-proposta.nm-cadastrador           = propost.cd-userid-digitacao
     1592                       sit-aprov-proposta.dt-movimento-aprovador   = ?
     1593                       sit-aprov-proposta.dt-movimento-cadastrador = propost.dt-digitacao
     1594                       sit-aprov-proposta.cd-motivo-reprovacao     = 0.
     1595   
     1596           WHEN 4 /* AGUARDANDO LIBERACAO */
     1597           then assign sit-aprov-proposta.in-situacao              = 4 /* PENDENTE DE APROVACAO */
     1598                       sit-aprov-proposta.nm-aprovador             = ""
     1599                       sit-aprov-proposta.nm-cadastrador           = propost.cd-userid-digitacao
     1600                       sit-aprov-proposta.dt-movimento-aprovador   = ?
     1601                       sit-aprov-proposta.dt-movimento-cadastrador = propost.dt-digitacao
     1602                       sit-aprov-proposta.cd-motivo-reprovacao     = 0.
     1603   
     1604           WHEN 5 or /* LIBERADA */
     1605           WHEN 6 or /* TAXA INSCRICAO FATURADA  */
     1606           WHEN 7    /* FATURAMENTO NORMAL */
     1607           then assign sit-aprov-proposta.in-situacao              = 5 /* APROVADA */
     1608                       sit-aprov-proposta.nm-aprovador             = propost.cd-userid-libera
     1609                       sit-aprov-proposta.nm-cadastrador           = propost.cd-userid-digitacao
     1610                       sit-aprov-proposta.dt-movimento-aprovador   = propost.dt-libera-doc
     1611                       sit-aprov-proposta.dt-movimento-cadastrador = propost.dt-digitacao
     1612                       sit-aprov-proposta.cd-motivo-reprovacao     = 0.
     1613   
     1614           WHEN 90   /* EXCLUIDA */ 
     1615           then assign sit-aprov-proposta.in-situacao              = 90 /* Excluida */
     1616                       sit-aprov-proposta.nm-aprovador             = propost.cd-userid-libera   
     1617                       sit-aprov-proposta.nm-cadastrador           = propost.cd-userid-digitacao
     1618                       sit-aprov-proposta.dt-movimento-aprovador   = propost.dt-libera-doc      
     1619                       sit-aprov-proposta.dt-movimento-cadastrador = propost.dt-digitacao       
     1620                       sit-aprov-proposta.cd-motivo-reprovacao     = 0. 
     1621   
     1622           WHEN 8 or /* REPROVADA */
     1623           WHEN 95   /* CANCELADA */ 
     1624           then assign sit-aprov-proposta.in-situacao              = 6 /* NEGADA */
     1625                       sit-aprov-proposta.nm-aprovador             = propost.cd-userid-libera
     1626                       sit-aprov-proposta.nm-cadastrador           = propost.cd-userid-digitacao
     1627                       sit-aprov-proposta.dt-movimento-aprovador   = propost.dt-libera-doc
     1628                       sit-aprov-proposta.dt-movimento-cadastrador = propost.dt-digitacao
     1629                       sit-aprov-proposta.cd-motivo-reprovacao     = 0.
     1630   
     1631           WHEN  0 /* --- SE NAO ENTROU EM NENHUMA DAS SITUACOES ANTERIORES, SETA COMO "EM CADASTRAMENTO" --- */
     1632           then assign sit-aprov-proposta.in-situacao              = 2
     1633                       sit-aprov-proposta.nm-aprovador             = ""
     1634                       sit-aprov-proposta.nm-cadastrador           = propost.cd-userid-digitacao
     1635                       sit-aprov-proposta.dt-movimento-aprovador   = ?
     1636                       sit-aprov-proposta.dt-movimento-cadastrador = propost.dt-digitacao
     1637                       sit-aprov-proposta.cd-motivo-reprovacao     = 0.
     1638       END CASE.
     1639   
     1640       assign propost.lg-proc-prestador = b-import-propost.log-proced-prestdor.
     1641       
     1642       if b-import-propost.log-segassist 
     1643       then propost.dt-libera-doc = b-import-propost.dat-fim-segassist.
     1644       
     1645       /* REGRAS DE MENSALIDADE 
     1646       
     1647       DESCONTINUADO. SUBSTITUIDO PELO PROCESSO P_MIGRA_REGRA_PROPOSTA, NO PL/SQL
     1648       IF  b-import-propost.num-livre-7 <> ? 
     1649       AND b-import-propost.num-livre-7 <> 0
     1650       THEN DO:
     1651              FIND FIRST regra-menslid-propost
     1652                   WHERE regra-menslid-propost.cd-modalidade   = propost.cd-modalidade
     1653                     AND regra-menslid-propost.nr-proposta     = propost.nr-proposta
     1654                     AND regra-menslid-propost.cd-usuario      = 0
     1655                     AND regra-menslid-propost.dt-ini-validade = b-import-propost.dat-propost
     1656                     AND regra-menslid-propost.dt-fim-validade = 12/31/9999
     1657                         NO-LOCK NO-ERROR.
     1658             
     1659              IF NOT AVAIL regra-menslid-propost        
     1660              THEN DO:
     1661                     CREATE regra-menslid-propost.
     1662                     ASSIGN regra-menslid-propost.cdd-seq         = proximaseqregra()
     1663                            regra-menslid-propost.cdd-regra       = b-import-propost.num-livre-7
     1664                            regra-menslid-propost.cd-modalidade   = propost.cd-modalidade   
     1665                            regra-menslid-propost.nr-proposta     = propost.nr-proposta 
     1666                            regra-menslid-propost.cd-usuario      = 0
     1667                            regra-menslid-propost.dt-ini-validade = b-import-propost.dat-propost 
     1668                            regra-menslid-propost.dt-fim-validade = 12/31/9999
     1669                            regra-menslid-propost.cod-usuar-ult-atualiz = v_cod_usuar_corren
     1670                            regra-menslid-propost.dat-ult-atualiz = TODAY. 
     1671   
     1672                     ASSIGN propost.log-12 = YES. /*novas regras faturamento*/
     1673                   END.
     1674            END.
     1675       */
     1676   
     1677       /* --- USUARIO EVENTUAL ---------------------------------------------------- */
     1678       if propost.log-11 
     1679       AND propost.cd-sit-proposta >= 5
     1680       AND propost.cd-sit-proposta <= 7
     1681       then do:
     1682              /************************************************************************************************
     1683               *      Programa .....: hdrunpersis.i                                                            *
     1684               *      Data .........: 12 de Junho de 2009                                                      *
     1685               *      Sistema ......: HD - INCLUDES PADRAO                                                     *
     1686               *      Empresa ......: Datasul Saude                                                            *  
     1687               *      Programador ..: Alex Boeira                                                              *
     1688               *      Objetivo .....: Persistir um programa, caso ainda nao possua instancia persistida        *
     1689               ************************************************************************************************/
     1690               
     1691               /***
     1692                O PROGRAMA CHAMADOR SEMPRE DEVERA POSSUIR:
     1693                  VARIAVEL "H-HANDLE-AUX" DO TIPO HANDLE;
     1694                  UMA VARIAVEL "H-" + NOME_PROGRAMA + "-AUX" PARA CADA PROGRAMA A SER PERSISTIDO;
     1695                  
     1696                A DECLARACAO DESTE INCLUDE NOS FONTES DEVE SEGUIR O PADRAO:
     1697                  {HDP/HDRUNPERSIS.I "PROGRAMA.P" "HANDLE" "PARAMETROS"}
     1698                  
     1699                  onde:
     1700                  
     1701                  {1} = NOME DO PROGRAMA A SER PERSISTIDO;
     1702                  
     1703                  {2} = NOME DO HANDLE PARA CONTROLAR A PERSISTENCIA;
     1704                  
     1705                  {3} (OPCIONAL) = PARAMETROS A SEREM ENVIADOS PARA O PROGRAMA A SER PERSISTIDO;
     1706                  
     1707                EXEMPLOS:
     1708                  {HDP/HDRUNPERSIS.I "API/API-USUARIO.P" "H-API-USUARIO-AUX"}
     1709                  {HDP/HDRUNPERSIS.I "BOSAU/BOSAUDEMOGRAPHIC.P" "H-BOSAUDEMOGRAPHIC-AUX"}
     1710                  {HDP/HDRUNPERSIS.I "PRGINT/UTB/UTB765ZL.PY" "H-UTB765ZL-AUX" "(INPUT 1, INPUT '', INPUT '')"}
     1711               ***/
     1712               
     1713               h-handle-aux = session:last-procedure.
     1714               do while valid-handle(h-handle-aux):
     1715                   
     1716                  if  h-handle-aux:type = "procedure"
     1717                  and h-handle-aux:name = "bosau/bosaueventualuser.p"
     1718                  then do:
     1719               
     1720                         if  id-requisicao-handle-aux  <> ""
     1721                         and h-handle-aux:private-data  = id-requisicao-handle-aux
     1722                         then do:
     1723                                assign h-bosaueventualuser-aux = h-handle-aux.
     1724                                leave.
     1725                              end.
     1726                       end.
     1727                          
     1728                  assign h-handle-aux = h-handle-aux:prev-sibling.
     1729               end.
     1730               
     1731               if not valid-handle(h-handle-aux) 
     1732               then do:
     1733                      run bosau/bosaueventualuser.p persistent set h-bosaueventualuser-aux .
     1734               
     1735                      /* --- SE ID-REQUISICAO-HANDLE-AUX ESTIVER EM BRANCOS, SIGNIFICA QUE Eh A PRIMEIRA PERSISTENCIA DA REQUISICAO.
     1736                             O ID GERADO NESTE MOMENTO SERA UTILIZADO NAS DEMAIS PERSISTENCIAS, E SERA USADO AO FINAL
     1737                             DO PROCESSO PARA ELIMINACAO DAS PERSISTENCIAS CARREGADAS, ATRAVES DA INCLUDE HDDELPERSIS.I --- */
     1738                      
     1739                          /** 
     1740                                 ALTERADO LËGICA PARA GERAR O NMERO ALEATËRIO QUE IDENTIFICA A SEÃO, J QUE PODE GERAR ERRO CASO O 
     1741                             A SEÃO DO USURIO ESTEJA ABERTA A MUITO TEMPO 
     1742                                 FABRICIO CASALI
     1743                           */
     1744                          
     1745                          if length (string (etime)) > 10
     1746                                 then etime (yes).        
     1747                          
     1748                          if id-requisicao-handle-aux = ""
     1749                      then id-requisicao-handle-aux = string (etime) + string (random (1, 9999)).
     1750               
     1751                      h-bosaueventualuser-aux:private-data = id-requisicao-handle-aux.
     1752               
     1753               
     1754               
     1755               
     1756               
     1757                      /* --- LOG DE ACOMPANHAMENTO --- */
     1758                      if search(session:temp-dir + "acompanhar_persistencias.txt") <> ?
     1759                      then do:
     1760                             run hdp/hdlogpersis.p(input "PERSISTINDO",
     1761                                                   input if program-name(20) <> ? then program-name(20) else "" + " | " +
     1762                                                         if program-name(19) <> ? then program-name(19) else "" + " | " +
     1763                                                         if program-name(18) <> ? then program-name(18) else "" + " | " +
     1764                                                         if program-name(17) <> ? then program-name(17) else "" + " | " +
     1765                                                         if program-name(16) <> ? then program-name(16) else "" + " | " +
     1766                                                         if program-name(15) <> ? then program-name(15) else "" + " | " +
     1767                                                         if program-name(14) <> ? then program-name(14) else "" + " | " +
     1768                                                         if program-name(13) <> ? then program-name(13) else "" + " | " +
     1769                                                         if program-name(12) <> ? then program-name(12) else "" + " | " +
     1770                                                         if program-name(11) <> ? then program-name(11) else "" + " | " +
     1771                                                         if program-name(10) <> ? then program-name(10) else "" + " | " +
     1772                                                         if program-name(09) <> ? then program-name(09) else "" + " | " +
     1773                                                         if program-name(08) <> ? then program-name(08) else "" + " | " +
     1774                                                         if program-name(07) <> ? then program-name(07) else "" + " | " +
     1775                                                         if program-name(06) <> ? then program-name(06) else "" + " | " +
     1776                                                         if program-name(05) <> ? then program-name(05) else "" + " | " +
     1777                                                         if program-name(04) <> ? then program-name(04) else "" + " | " +
     1778                                                         if program-name(03) <> ? then program-name(03) else "" + " | " +
     1779                                                         if program-name(02) <> ? then program-name(02) else "" + " | " +
     1780                                                         if program-name(01) <> ? then program-name(01) else "" + " | ",
     1781                                                   input h-bosaueventualuser-aux:name,
     1782                                                   input h-bosaueventualuser-aux:private-data).
     1783                           end.
     1784               
     1785                    end.
     1786   
     1787              run syncEventualUser in h-bosaueventualuser-aux(input propost.cd-modalidade,   
     1788                                                              input propost.nr-proposta,     
     1789                                                              input-output table rowErrors) no-error.
     1790              
     1791              if error-status:error 
     1792              then run pi-grava-erro ("Nao foi possivel criar o Usuario Eventual").
     1793   
     1794              /*HDDELPERSIS.I*/
     1795              if id-requisicao-handle-aux <> ""
     1796              then do:
     1797                     h-handle-aux = session:last-procedure.
     1798                     do while valid-handle(h-handle-aux):
     1799   
     1800                        h-handle2-aux = h-handle-aux:prev-sibling.
     1801   
     1802                        if h-handle-aux:private-data = id-requisicao-handle-aux
     1803                        then do:
     1804                               /* --- LOG DE ACOMPANHAMENTO --- */
     1805                               if search(session:temp-dir + "acompanhar_persistencias.txt") <> ?
     1806                               then do:
     1807                                      run hdp/hdlogpersis.p(input "DERRUBANDO",
     1808                                                            input if program-name(20) <> ? then program-name(20) else "" + " | " +
     1809                                                                  if program-name(19) <> ? then program-name(19) else "" + " | " +
     1810                                                                  if program-name(18) <> ? then program-name(18) else "" + " | " +
     1811                                                                  if program-name(17) <> ? then program-name(17) else "" + " | " +
     1812                                                                  if program-name(16) <> ? then program-name(16) else "" + " | " +
     1813                                                                  if program-name(15) <> ? then program-name(15) else "" + " | " +
     1814                                                                  if program-name(14) <> ? then program-name(14) else "" + " | " +
     1815                                                                  if program-name(13) <> ? then program-name(13) else "" + " | " +
     1816                                                                  if program-name(12) <> ? then program-name(12) else "" + " | " +
     1817                                                                  if program-name(11) <> ? then program-name(11) else "" + " | " +
     1818                                                                  if program-name(10) <> ? then program-name(10) else "" + " | " +
     1819                                                                  if program-name(09) <> ? then program-name(09) else "" + " | " +
     1820                                                                  if program-name(08) <> ? then program-name(08) else "" + " | " +
     1821                                                                  if program-name(07) <> ? then program-name(07) else "" + " | " +
     1822                                                                  if program-name(06) <> ? then program-name(06) else "" + " | " +
     1823                                                                  if program-name(05) <> ? then program-name(05) else "" + " | " +
     1824                                                                  if program-name(04) <> ? then program-name(04) else "" + " | " +
     1825                                                                  if program-name(03) <> ? then program-name(03) else "" + " | " +
     1826                                                                  if program-name(02) <> ? then program-name(02) else "" + " | " +
     1827                                                                  if program-name(01) <> ? then program-name(01) else "" + " | ",
     1828                                                            input h-handle-aux:name,
     1829                                                            input h-handle-aux:private-data).
     1830                                    end.
     1831   
     1832                               delete procedure h-handle-aux.
     1833   
     1834                             end.
     1835   
     1836                        assign h-handle-aux = h-handle2-aux.
     1837   
     1838                     end.
     1839                   end.
     1840   
     1841              assign id-requisicao-handle-aux = "".
     1842   
     1843              /*FIM DE HDDELPERSIS.I*/
     1844   
     1845            end.
     1846   
     1847       assign b-import-propost.cod-livre-6 = string(propost.nr-proposta).
     1848   
     1849       VALIDATE propost.
     1850       
     1851   END PROCEDURE.
     1852   
     1853   procedure liberar-documentos:
     1854      DEF VAR dt-inicio-aux        AS DATE NO-UNDO.
     1855      DEF VAR lg-erro-rtclvenc-aux AS LOG NO-UNDO.
     1856      DEF VAR ds-erro-rtclvenc-aux AS CHAR NO-UNDO.
     1857      DEF VAR dt-fim-aux           AS DATE NO-UNDO.
     1858      DEF VAR dt-validade-aux      AS DATE NO-UNDO.
     1859   
     1860      def var lg-erro-gera-aux  AS LOG NO-UNDO.
     1861      def var ds-erro-gera-aux  AS CHAR NO-UNDO.
     1862      def var ds-chave-gera-aux AS CHAR NO-UNDO.
     1863      DEF VAR qt-executada-aux  AS INT NO-UNDO.
     1864   
     1865      create ter-ade.
     1866      ASSIGN ter-ade.cd-modalidade         = propost.cd-modalidade
     1867             ter-ade.nr-ter-adesao         = propost.nr-ter-adesao.
     1868    
     1869      if   propost.dt-libera-doc <> ?
     1870      then do:
     1871              if   propost.dt-libera-doc < today
     1872              then do:
     1873                     assign propost.cd-sit-proposta  = 90   
     1874                            ter-ade.cd-sit-adesao    = 90
     1875                            ter-ade.cd-motivo-cancel = 90.
     1876                   end.
     1877              else do:
     1878                     run verifica-sit-prop.
     1879                     ter-ade.cd-sit-adesao    = 1.
     1880                   end.
     1881    
     1882              assign ter-ade.dt-mov-exclusao       =  today
     1883                     ter-ade.cd-userid-exclusao    =  v_cod_usuar_corren
     1884                     ter-ade.dt-cancelamento       =  propost.dt-libera-doc.
     1885           end.
     1886      else do:
     1887             run verifica-sit-prop.
     1888             assign  ter-ade.cd-sit-adesao    = 1.
     1889           end.
     1890    
     1891      assign propost.cd-userid-libera      = v_cod_usuar_corren.
     1892    
     1893      /*&&&& checar unicidade de nr-ter-adesao, se precisar trocar, ajustar tb na proposta!*/
     1894      
     1895      assign ter-ade.cd-userid             = v_cod_usuar_corren
     1896             ter-ade.dt-aprovacao          = today
     1897             ter-ade.dt-atualizacao        = today
     1898             ter-ade.dt-mov-inclusao       = today
     1899             ter-ade.cd-userid-inclusao    = v_cod_usuar_corren
     1900             ter-ade.cd-classe-mens        = for-pag.cd-classe-mens
     1901             ter-ade.aa-ult-fat            = int(substring(propost.mm-aa-ult-fat-mig,03,04))
     1902             ter-ade.mm-ult-fat            = int(substring(propost.mm-aa-ult-fat-mig,01,02))
     1903             ter-ade.dt-inicio             = propost.dt-parecer
     1904             ter-ade.lg-mantem-senha-benef = YES /*&&&& checar se precisa virar parametro */
     1905             ter-ade.in-gera-senha         = 0   /*&&&& checar se precisa virar parametro */.
     1906   
     1907      /* faturamento proporcional */
     1908      IF AVAIL ti-pl-sa
     1909      THEN ASSIGN ter-ade.log-2          = ti-pl-sa.log-2.
     1910      ELSE ASSIGN ter-ade.log-2          = NO /* faturamento proporcional */.
     1911    
     1912      if   propost.cd-sit-proposta = 5 
     1913      or   ter-ade.dt-inicio       = ter-ade.dt-cancelamento
     1914      then assign ter-ade.aa-pri-fat = 0
     1915                  ter-ade.mm-pri-fat = 0.
     1916      else assign ter-ade.aa-pri-fat = year(ter-ade.dt-inicio)
     1917                  ter-ade.mm-pri-fat = month(ter-ade.dt-inicio).
     1918   
     1919      if propost.cd-contrat-origem <> 0
     1920      then assign ter-ade.in-contratante-mensalidade  = 1
     1921                  ter-ade.in-contratante-participacao = 1
     1922                  ter-ade.in-contratante-custo-op     = 1
     1923                  ter-ade.in-contratante-inadim       = 1.
     1924      else assign ter-ade.in-contratante-mensalidade  = 0
     1925                  ter-ade.in-contratante-participacao = 0
     1926                  ter-ade.in-contratante-custo-op     = 0
     1927                  ter-ade.in-contratante-inadim       = 0.
     1928   
     1929      /* se nivel de reajuste da proposta for por contrato, cria historico */
     1930   
     1931      if propost.int-13 = 0
     1932      then do:
     1933             /* Historico de tabelas de preco da proposta */
     1934             RUN escrever-log("@@@@@VERIFICAR SE HISTABPRECO JA EXISTE - MODALIDADE: " + STRING(propost.cd-modalidade) 
     1935                              + " PROPOSTA: " + string(propost.nr-proposta) + " ANO: " + STRING(year(ter-ade.dt-inicio))
     1936                              + " MES: " + STRING(month(ter-ade.dt-inicio))).
     1937             FIND FIRST histabpreco EXCLUSIVE-LOCK
     1938                  WHERE histabpreco.cd-modalidade = propost.cd-modalidade   
     1939                    AND histabpreco.nr-proposta   = propost.nr-proposta     
     1940                    AND histabpreco.aa-reajuste   = year(ter-ade.dt-inicio) 
     1941                    AND histabpreco.mm-reajuste   = month(ter-ade.dt-inicio) NO-ERROR.
     1942   
     1943             RUN escrever-log("@@@@@ACHOU HISTABPRECO COM A MESMA CHAVE?: " + STRING(AVAIL histabpreco)).
     1944   
     1945             IF NOT AVAIL histabpreco
     1946             THEN do:
     1947                    create histabpreco.
     1948                    ASSIGN histabpreco.cd-modalidade = propost.cd-modalidade   
     1949                           histabpreco.nr-proposta   = propost.nr-proposta     
     1950                           histabpreco.aa-reajuste   = year(ter-ade.dt-inicio) 
     1951                           histabpreco.mm-reajuste   = month(ter-ade.dt-inicio).
     1952                  END.
     1953   
     1954             assign histabpreco.cd-tab-preco         = propost.cd-tab-preco
     1955                    histabpreco.log-1                = YES /*parafatu.log-12 - Utilizar Historico da Tab.Preco para Reajustar a Mensalidade - forcando sim para habilitar processo reajuste*/ 
     1956                    histabpreco.cd-userid            = v_cod_usuar_corren    
     1957                    histabpreco.dt-atualizacao       = today.
     1958            
     1959             /**
     1960              * 23/11/16 - Alex Boeira - logica comentada, pois o historico completo de reajuste eh 
     1961              * carregado na procedure P_POS_CARGA (PL/SQL), que eh executada apos concluir a criacao de propostas e beneficiarios.
     1962              
     1963             if (    year(ter-ade.dt-inicio)  = propost.aa-ult-reajuste
     1964                 and month(ter-ade.dt-inicio) = propost.mm-ult-reajuste)
     1965             or (    propost.aa-ult-reajuste = 0
     1966                 and propost.mm-ult-reajuste = 0)
     1967             then assign histabpreco.pc-reajuste        = propost.pc-ult-reajuste        
     1968                         histabpreco.nr-oficio-reajuste = propost.nr-oficio-reajuste
     1969                         histabpreco.int-1              = propost.aa-ult-reajuste
     1970                         histabpreco.int-2              = propost.mm-ult-reajuste.
     1971             else do:
     1972                    create histabpreco.
     1973                    assign histabpreco.cd-modalidade      = propost.cd-modalidade 
     1974                           histabpreco.nr-proposta        = propost.nr-proposta 
     1975                           histabpreco.aa-reajuste        = propost.aa-ult-reajuste
     1976                           histabpreco.mm-reajuste        = propost.mm-ult-reajuste
     1977                           histabpreco.cd-tab-preco       = propost.cd-tab-preco
     1978                           histabpreco.pc-reajuste        = propost.pc-ult-reajuste        
     1979                           histabpreco.nr-oficio-reajuste = propost.nr-oficio-reajuste
     1980                           histabpreco.int-1              = propost.aa-ult-reajuste
     1981                           histabpreco.int-2              = propost.mm-ult-reajuste
     1982                           histabpreco.log-1              = YES /*parafatu.log-12*/
     1983                           histabpreco.cd-userid          = v_cod_usuar_corren
     1984                           histabpreco.dt-atualizacao     = today.
     1985                  end.*/
     1986           end.
     1987    
     1988      /* ---------------------------------------------------------------------- */
     1989      if   contrat.lg-mantem-senha-termo
     1990      then assign ter-ade.cd-senha = contrat.cd-senha.
     1991      else do:
     1992             run rtp/rtrandom.p (input 6,
     1993                                 output cd-senha-aux,
     1994                                 output lg-erro-rtsenha-aux,
     1995                                 output ds-erro-rtsenha-aux).
     1996             if lg-erro-rtsenha-aux 
     1997             then do:
     1998                    run pi-grava-erro (ds-erro-rtsenha-aux).
     1999                    lg-relat-erro-aux = YES.
     2000                  end.
     2001             
     2002             assign ter-ade.cd-senha = cd-senha-aux.    
     2003           end.
     2004   
     2005      /* ---------------------------------------------------------------------- */
     2006      assign propost.dt-comercializacao = ter-ade.dt-inicio
     2007             ter-ade.dt-fim             = ter-ade.dt-inicio
     2008             dt-inicio-aux              = ter-ade.dt-inicio.
     2009    
     2010      /* ---- Inicializa Quantidade de vezes que o Laco vai ser Executado. ---- */
     2011      assign qt-executada-aux = 0.
     2012   
     2013      /**
     2014       * Este validate eh necessario para que a proposta esteja visivel dentro de rtclvenc.p qdo
     2015       * executando em ambiente Oracle.
     2016       */
     2017      VALIDATE propost.
     2018   
     2019      /* ---------------------------------------------------------------------- */
     2020      do while ter-ade.dt-fim < dt-minima-termo-aux:
     2021    
     2022         /* ---------------------------------- CALCULA DATA DE FIM DO TERMO --- */
     2023         run rtp/rtclvenc.p (input "termo",
     2024                             input dt-inicio-aux,
     2025                             input propost.cd-modalidade,
     2026                             input propost.nr-proposta,
     2027                             input no,                       
     2028                             output ter-ade.dt-fim,
     2029                             output lg-erro-rtclvenc-aux,
     2030                             output ds-erro-rtclvenc-aux).
     2031         if   lg-erro-rtclvenc-aux
     2032         then do:
     2033                run pi-grava-erro (ds-erro-rtclvenc-aux).
     2034                lg-relat-erro-aux = YES.
     2035             end.
     2036   
     2037         assign dt-inicio-aux    = ter-ade.dt-fim
     2038                qt-executada-aux = qt-executada-aux + 1.
     2039      end.
     2040    
     2041      /* ---------------------- Atualiza a data fim do termo de adesÆo -------- */
     2042      if   qt-executada-aux <> 0
     2043      then assign ter-ade.dt-fim = ter-ade.dt-fim + qt-executada-aux - 1.
     2044   
     2045      /* ---------------------------------------------------------------------- */
     2046      assign dt-fim-aux = ter-ade.dt-fim.
     2047   
     2048      /* --------------------------------- TESTAR PROPOSTA CANCELADA OU PEA --- */
     2049      if   propost.dt-libera-doc <> ?
     2050      then assign ter-ade.dt-fim  = propost.dt-libera-doc.
     2051      else assign ter-ade.dt-fim  = dt-fim-aux.
     2052    
     2053      /* ---------------------------------------------------------------------- */
     2054      assign dt-inicio-aux            = ter-ade.dt-inicio
     2055             ter-ade.dt-validade-cart = ter-ade.dt-inicio.
     2056    
     2057      /* ---- Inicializa Quantidade de vezes que o Laco vai ser Executado. ---- */
     2058      assign qt-executada-aux = 0.
     2059   
     2060      /* ---------------------------------------------------------------------- */
     2061      do while ter-ade.dt-validade-cart < dt-minima-termo-aux:
     2062    
     2063         /* --------------------------------- CALCULA DATA DE FIM DO CARTAO --- */
     2064         if   propost.lg-cartao
     2065         then do:
     2066                 run rtp/rtclvenc.p (input "cartao",
     2067                                     input dt-inicio-aux,
     2068                                     input propost.cd-modalidade,
     2069                                     input propost.nr-proposta,
     2070                                     input no,                       
     2071                                     output ter-ade.dt-validade-cart,
     2072                                     output lg-erro-rtclvenc-aux,
     2073                                     output ds-erro-rtclvenc-aux).
     2074                 if   lg-erro-rtclvenc-aux
     2075                 then do:
     2076                        run pi-grava-erro (ds-erro-rtclvenc-aux).
     2077                        lg-relat-erro-aux = YES.
     2078                      end.
     2079              end.
     2080         /* ------------------------------------------ CALCULA DATA DE FIM DA CARTEIRA --- */
     2081         else do:
     2082                 run rtp/rtclvenc.p (input "carteira",
     2083                                     input dt-inicio-aux,
     2084                                     input propost.cd-modalidade,
     2085                                     input propost.nr-proposta,
     2086                                     input no,                       
     2087                                     output ter-ade.dt-validade-cart,
     2088                                     output lg-erro-rtclvenc-aux,
     2089                                     output ds-erro-rtclvenc-aux).
     2090   
     2091                 if lg-erro-rtclvenc-aux
     2092                 then do:
     2093                        run pi-grava-erro (ds-erro-rtclvenc-aux).
     2094                        lg-relat-erro-aux = YES.
     2095                      end.
     2096              end.
     2097       
     2098         assign dt-inicio-aux    = ter-ade.dt-validade-cart
     2099                qt-executada-aux = qt-executada-aux + 1.
     2100      end.
     2101    
     2102      /* ---------------------- Atualiza a data fim do termo de adesÆo -------- */
     2103      if   qt-executada-aux <> 0
     2104      then assign ter-ade.dt-validade-cart = ter-ade.dt-validade-cart
     2105                                           + qt-executada-aux - 1.
     2106   
     2107      assign dt-fim-aux = ter-ade.dt-validade-cart.
     2108    
     2109      /* --------------------------------- TESTAR PROPOSTA CANCELADA OU PEA --- */
     2110      if   propost.dt-libera-doc <> ?
     2111      then assign ter-ade.dt-validade-cart = propost.dt-libera-doc.
     2112      else assign ter-ade.dt-validade-cart = dt-fim-aux.
     2113   
     2114      /* -------------- RETORNA A DATA DE FIM DE VALIDADE DO CARTAO/CARTEIRA ---*/
     2115      if   paravpmc.in-validade-cart = "2"
     2116      then do:
     2117             run rtp/rtultdia.p (input  year (ter-ade.dt-validade-cart),
     2118                                 input  month(ter-ade.dt-validade-cart),
     2119                                 output dt-validade-aux).
     2120   
     2121             assign ter-ade.dt-validade-cart = dt-validade-aux.
     2122           end.      
     2123   
     2124      assign propost.mm-aa-ult-fat-mig  = "".
     2125             /*propost.dt-libera-doc      = today.*/
     2126   
     2127      /* Se PROPOST.DATE-1 estiver preenchido, indica que deve utilizar data de validade do CONTRATO_DA_PESSOA*/
     2128      IF propost.date-1 <> ?
     2129      THEN ter-ade.dt-validade-cart = propost.date-1.
     2130      
     2131      /* -------------------------------------------------------- AFERICAO --- */
     2132      if   modalid.pc-afericao = 0
     2133      then do:
     2134             if   propost.nr-pessoas-titulares   <> 0 
     2135             or   propost.nr-pessoas-dependentes <> 0
     2136             then do:
     2137                    assign propost.nr-pessoas-titulares   = 0
     2138                           propost.nr-pessoas-dependentes = 0.
     2139                    
     2140                    for each pr-id-us where 
     2141                             pr-id-us.cd-modalidade = propost.cd-modalidade
     2142                         and pr-id-us.nr-proposta   = propost.nr-proposta
     2143                             exclusive-lock:
     2144   
     2145                        delete pr-id-us.
     2146                    end.                
     2147                  end.
     2148           end.
     2149      else do:    
     2150             if   propost.nr-pessoas-titulares   = 0
     2151             and  propost.nr-pessoas-dependentes = 0 
     2152             then do:
     2153                    /* ---------------- GERAR A INFORMACAO --- */
     2154                    run vpp/vp0311k.p (input  propost.cd-modalidade,
     2155                                       input  propost.nr-proposta,
     2156                                       input  propost.cd-plano,
     2157                                       input  propost.cd-tipo-plano,
     2158                                       input  propost.lg-faixa-etaria-esp,
     2159                                       input  no,   
     2160                                       output propost.nr-pessoas-titulares,
     2161                                       output propost.nr-pessoas-dependentes,
     2162                                       output lg-erro-gera-aux,
     2163                                       output ds-erro-gera-aux,
     2164                                       output ds-chave-gera-aux).
     2165   
     2166                    if   lg-erro-gera-aux
     2167                    then do:
     2168                           run pi-grava-erro (ds-erro-gera-aux + " " + ds-chave-gera-aux).
     2169                           lg-relat-erro-aux = YES.
     2170                         end.
     2171                  end.
     2172           end.
     2173   
     2174      return "".
     2175      
     2176   end procedure.
     2177   
     2178   procedure verifica-sit-prop:
     2179    
     2180      if  int(substring( propost.mm-aa-ult-fat-mig,03,04)) = 0 and
     2181          int(substring( propost.mm-aa-ult-fat-mig,01,02)) = 0
     2182      then propost.cd-sit-proposta = 5.    
     2183      else do:
     2184             if  int(substring( propost.mm-aa-ult-fat-mig,03,04)) =
     2185                 year(propost.dt-parecer) and
     2186                 int(substring( propost.mm-aa-ult-fat-mig,01,02)) =
     2187                 month(propost.dt-parecer)
     2188             then propost.cd-sit-proposta = 6.
     2189             else propost.cd-sit-proposta = 7.
     2190           end.
     2191    
     2192   end procedure.
     2193   
     2194   PROCEDURE cria-modulos:
     2195   
     2196       def var cd-sit-modulo-aux AS INT NO-UNDO.
     2197       def var dt-fim-aux        as date no-undo.
     2198       def var dt-inicio-aux     as date no-undo.
     2199   
     2200       RUN escrever-log("@@@@@CRIA-MODULOS P1 - MODALIDADE: " + STRING(b-import-propost.cd-modalidade) + " PROPOSTA: " + string(nr-proposta-aux)).
     2201   
     2202       FOR EACH pro-pla EXCLUSIVE-LOCK
     2203          WHERE pro-pla.cd-modalidade = b-import-propost.cd-modalidade
     2204            AND pro-pla.nr-proposta   = nr-proposta-aux 
     2205            AND NOT CAN-FIND (FIRST import-modul-propost
     2206                            where import-modul-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost
     2207                                AND import-modul-propost.cd-modulo           = pro-pla.cd-modulo NO-LOCK):
     2208   
     2209                  RUN escrever-log("@@@@@CRIA-MODULOS P2 - APAGANDO PRO-PLA").
     2210                  DELETE pro-pla.
     2211       END.
     2212   
     2213       ASSIGN lg-relat-erro = NO.
     2214   
     2215       RUN escrever-log("@@@@@CRIA-MODULOS P3 - ANTES DE LER IMPORT-MODUL-PROPOST").
     2216   
     2217       FOR EACH import-modul-propost FIELDS (cd-modulo 
     2218                                             cd-forma-pagto 
     2219                                             in-cobra-participacao 
     2220                                             ind-respons-autoriz 
     2221                                             nr-dias 
     2222                                             log-bonif-penalid 
     2223                                             in-ctrl-carencia-proced 
     2224                                             qt-caren-eletiva 
     2225                                             qt-caren-urgencia 
     2226                                             log-carenc 
     2227                                             dat-inicial 
     2228                                             dat-cancel 
     2229                                             cd-motivo-cancel 
     2230                                             ind-respons-autoriz 
     2231                                             in-cobra-participacao 
     2232                                             in-ctrl-carencia-insumo)
     2233          WHERE import-modul-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost NO-LOCK QUERY-TUNING (NO-INDEX-HINT):
     2234   
     2235           /*------------------------------------------------------------------------*/
     2236           for first pla-mod fields (cd-modulo 
     2237                                     lg-obrigatorio 
     2238                                     in-cobra-participacao 
     2239                                     in-responsavel-autorizacao 
     2240                                     qt-caren-eletiva 
     2241                                     qt-caren-urgencia)
     2242               where pla-mod.cd-modalidade = b-import-propost.cd-modalidade
     2243                 and pla-mod.cd-plano      = b-import-propost.cd-plano
     2244                 and pla-mod.cd-tipo-plano = b-import-propost.cd-tipo-plano
     2245                 and pla-mod.cd-modulo     = import-modul-propost.cd-modulo NO-LOCK QUERY-TUNING (NO-INDEX-HINT):
     2246           end.
     2247           IF NOT AVAIL pla-mod
     2248           THEN do:
     2249                  RUN escrever-log("@@@@@CRIA-MODULOS - ERRO NAO ACHOU PLA-MOD").
     2250                  assign lg-relat-erro = yes.
     2251                  run pi-grava-erro ("Modulo " + string(import-modul-propost.cd-modulo,"999") 
     2252                                     + " nao encontrado para Modalidade " + string(b-import-propost.cd-modalidade)
     2253                                     + ", Plano " + STRING(b-import-propost.cd-plano)
     2254                                     + ", Tipo Plano " + STRING(b-import-propost.cd-tipo-plano)).
     2255                  NEXT.
     2256                END.
     2257           RUN escrever-log("@@@@@CRIA-MODULOS P4 - ACHOU PLA-MOD " + STRING(import-modul-propost.cd-modulo) + ": " + STRING(AVAIL pla-mod)).
     2258   
     2259           for each pro-pla FIELDS (dt-cancelamento 
     2260                                    dt-inicio) use-index pro-pla3
     2261              where pro-pla.cd-modalidade = b-import-propost.cd-modalidade
     2262                and pro-pla.nr-proposta   = nr-proposta-aux
     2263                and pro-pla.cd-modulo     = import-modul-propost.cd-modulo
     2264                    no-lock:
     2265   
     2266               if  pro-pla.dt-cancelamento = ? 
     2267               then do:
     2268                      if import-modul-propost.dat-cancel = ?
     2269                      then do:
     2270                             RUN escrever-log("@@@@@CRIA-MODULOS P5").
     2271                             assign lg-relat-erro = yes.
     2272                             run pi-grava-erro ("Modulo ja cadastrado para a proposta: " + string(import-modul-propost.cd-modulo,"999")).
     2273                           END.
     2274                      ELSE if import-modul-propost.dat-cancel >= pro-pla.dt-inicio
     2275                           then do:
     2276                                  RUN escrever-log("@@@@@CRIA-MODULOS P6").
     2277                                  assign lg-relat-erro = yes.
     2278                                  run pi-grava-erro ("Data de cancel. nao pode ser superior a data de inicio do mod. ja cadast. Mod:" + string(import-modul-propost.cd-modulo,"999")).
     2279                                END.
     2280                               
     2281                      if import-modul-propost.dat-inicial >= pro-pla.dt-inicio
     2282                      then do:
     2283                             RUN escrever-log("@@@@@CRIA-MODULOS P7").
     2284                             assign lg-relat-erro = yes.
     2285                             run pi-grava-erro ("Data de inicio nao pode ser superior a data de inicio do mod. ja cadast. Mod:" + string(import-modul-propost.cd-modulo,"999")).
     2286                           END.
     2287                    end.
     2288               else do:
     2289                      RUN escrever-log("@@@@@CRIA-MODULOS P8").
     2290                      if  import-modul-propost.dat-inicial >= pro-pla.dt-inicio             
     2291                      and import-modul-propost.dat-inicial <= pro-pla.dt-cancelamento
     2292                      then DO:
     2293                             RUN escrever-log("@@@@@CRIA-MODULOS P9").
     2294                             assign lg-relat-erro = yes.
     2295                             run pi-grava-erro ("Data de vigencia do modulo nao pode sobrepor a de um mesmo modulo cadastrado. Mod:" + string(import-modul-propost.cd-modulo,"999")).
     2296                           END.
     2297   
     2298                      if  import-modul-propost.dat-cancel >= pro-pla.dt-inicio             
     2299                      and import-modul-propost.dat-cancel <= pro-pla.dt-cancelamento
     2300                      then do:
     2301                             RUN escrever-log("@@@@@CRIA-MODULOS P10").
     2302                             assign lg-relat-erro = yes. 
     2303                             run pi-grava-erro ("Data de vigencia do modulo nao pode sobrepor a de um mesmo modulo cadastrado. Mod:" + string(import-modul-propost.cd-modulo,"999")).
     2304                           END.
     2305                    end. 
     2306           end.
     2307   
     2308           RUN escrever-log("@@@@@CRIA-MODULOS P11").
     2309   
     2310           IF lg-relat-erro 
     2311           THEN do:
     2312                  RUN escrever-log("@@@@@CRIA-MODULOS P12 - SAINDO COM ERRO").
     2313                  ASSIGN lg-relat-erro-aux = YES.
     2314                  NEXT.
     2315                END.
     2316   
     2317           find mod-cob where mod-cob.cd-modulo = import-modul-propost.cd-modulo no-lock no-error.
     2318           
     2319           RUN escrever-log("@@@@@CRIA-MODULOS P13 - ACHOU MOD-COB " + STRING(import-modul-propost.cd-modulo) + " " + STRING(AVAIL mod-cob)).
     2320   
     2321           IF lg-gerar-termo-aux
     2322           AND AVAIL ter-ade
     2323           THEN DO:
     2324                  /* -------- TESTAR PROPOSTA CANCELADA OU PEA ---------- */
     2325                  if   propost.dt-libera-doc <> ?
     2326                  then do:
     2327                          if   propost.dt-libera-doc < today
     2328                          then assign cd-sit-modulo-aux = 90.
     2329                          else assign cd-sit-modulo-aux = 7.
     2330                  
     2331                          RUN escrever-log("@@@@@CRIA-MODULOS P14").
     2332                          assign dt-fim-aux = propost.dt-libera-doc.
     2333                       end.
     2334                  else do:
     2335                         if   import-modul-propost.dat-cancel = ?
     2336                         then assign cd-sit-modulo-aux = 7
     2337                                     dt-fim-aux        = ter-ade.dt-fim.
     2338                         else do:
     2339                                if   import-modul-propost.dat-cancel < today
     2340                                then assign cd-sit-modulo-aux = 90.
     2341                                else assign cd-sit-modulo-aux = 7.
     2342                  
     2343                                RUN escrever-log("@@@@@CRIA-MODULOS P15").
     2344                                assign dt-fim-aux = ter-ade.dt-fim.
     2345                              end.
     2346                       end.
     2347                  
     2348                  if   import-modul-propost.dat-inicial <> ?
     2349                  THEN assign dt-inicio-aux = import-modul-propost.dat-inicial.
     2350                  ELSE assign dt-inicio-aux = ter-ade.dt-inicio.
     2351                END.
     2352           ELSE DO:
     2353                  ASSIGN cd-sit-modulo-aux = 1
     2354                         dt-fim-aux        = b-import-propost.dat-fim-propost
     2355                         dt-inicio-aux     = import-modul-propost.dat-inicial.
     2356                  RUN escrever-log("@@@@@CRIA-MODULOS P16").
     2357                END.
     2358   
     2359           RUN escrever-log("@@@@@CRIA-MODULOS P17").
     2360   
     2361           if   not pla-mod.lg-obrigatorio
     2362           THEN DO:
     2363                  if in-classif = 2
     2364                  OR in-classif = 3
     2365                  then do:
     2366                         RUN escrever-log("@@@@@CRIA-MODULOS P18 - CRIANDO PRO-PLA - PLA-MOD OPCIONAL").
     2367   
     2368                         create pro-pla.
     2369                         assign pro-pla.cd-modalidade              = b-import-propost.cd-modalidade
     2370                                pro-pla.cd-plano                   = b-import-propost.cd-plano
     2371                                pro-pla.cd-tipo-plano              = b-import-propost.cd-tipo-plano
     2372                                pro-pla.cd-modulo                  = import-modul-propost.cd-modulo
     2373                                pro-pla.nr-proposta                = nr-proposta-aux
     2374                                pro-pla.cd-forma-pagto             = import-modul-propost.cd-forma-pagto                         
     2375                                pro-pla.in-cobra-participacao      = import-modul-propost.in-cobra-participacao 
     2376                                pro-pla.in-responsavel-autorizacao = import-modul-propost.ind-respons-autoriz 
     2377                                              
     2378                                pro-pla.dt-atualizacao             = today
     2379                                pro-pla.cd-userid                  = v_cod_usuar_corren
     2380                                                              
     2381                                pro-pla.dt-mov-inclusao            = today
     2382                                pro-pla.cd-userid-inclusao         = v_cod_usuar_corren
     2383                                pro-pla.nr-dias                    = import-modul-propost.nr-dias
     2384                                pro-pla.lg-bonifica-penaliza       = import-modul-propost.log-bonif-penalid.
     2385                         
     2386                         case import-modul-propost.in-ctrl-carencia-proced:
     2387                              when 0 /* Sem carencia por procedimento */
     2388                              then assign pro-pla.in-ctrl-carencia-proced = import-modul-propost.in-ctrl-carencia-proced.
     2389           
     2390                              when 1 /* Carencia de procedimento por modulo */
     2391                              then assign pro-pla.in-ctrl-carencia-proced = import-modul-propost.in-ctrl-carencia-proced
     2392                                          pro-pla.qt-caren-eletiva        = import-modul-propost.qt-caren-eletiva       
     2393                                          pro-pla.qt-caren-urgencia       = import-modul-propost.qt-caren-urgencia.
     2394           
     2395                              when 2 /* Carencia de procedimento por procedimento */
     2396                              then assign pro-pla.in-ctrl-carencia-proced = import-modul-propost.in-ctrl-carencia-proced.
     2397                         end case.
     2398           
     2399                         assign pro-pla.lg-carencia              = import-modul-propost.log-carenc
     2400                                pro-pla.lg-cobertura-obrigatoria = /*import-modul-propost.log-cobert-obrig*/ pla-mod.lg-obrigatorio
     2401                                pro-pla.dt-inicio                = dt-inicio-aux
     2402                                pro-pla.dt-cancelamento          = import-modul-propost.dat-cancel
     2403                                pro-pla.cd-motivo-cancel         = import-modul-propost.cd-motivo-cancel
     2404                                pro-pla.dt-fim                   = dt-fim-aux
     2405                                pro-pla.cd-sit-modulo            = cd-sit-modulo-aux.
     2406                         
     2407                         if   import-modul-propost.dat-cancel <> ?
     2408                         then assign pro-pla.dt-mov-exclusao    = today
     2409                                     pro-pla.cd-userid-exclusao = v_cod_usuar_corren.
     2410   
     2411                         RUN escrever-log("@@@@@CRIA-MODULOS P19 - FIM DA CRIACAO PRO-PLA").
     2412                       end. 
     2413                END.
     2414           ELSE IF in-classif = 1
     2415                or in-classif = 3 
     2416                THEN DO:
     2417                       if   b-import-propost.cd-forma-pagto = 1
     2418                       or   b-import-propost.cd-forma-pagto = 2
     2419                       then do: 
     2420   
     2421                              RUN escrever-log("@@@@@CRIA-MODULOS P20 - CREATE PRO-PLA - PLA-MOD OBRIGATORIO").
     2422   
     2423                              create pro-pla.
     2424                              assign pro-pla.cd-modalidade           = b-import-propost.cd-modalidade
     2425                                     pro-pla.cd-plano                = b-import-propost.cd-plano
     2426                                     pro-pla.cd-tipo-plano           = b-import-propost.cd-tipo-plano
     2427                                     pro-pla.cd-modulo               = pla-mod.cd-modulo
     2428                                     pro-pla.nr-proposta             = nr-proposta-aux
     2429                                     pro-pla.cd-forma-pagto          = b-import-propost.cd-forma-pagto
     2430                                     pro-pla.lg-carencia             = yes
     2431                                     pro-pla.lg-cobertura-obrigato   = yes
     2432                                     pro-pla.in-ctrl-carencia-proced = import-modul-propost.in-ctrl-carencia-proced
     2433                                     pro-pla.in-ctrl-carencia-insumo = import-modul-propost.in-ctrl-carencia-insumo
     2434                                     pro-pla.dt-inicio               = dt-inicio-aux
     2435                                     pro-pla.dt-cancelamento         = import-modul-propost.dat-cancel
     2436                                     pro-pla.dt-fim                  = dt-fim-aux
     2437                                     pro-pla.in-cobra-participacao   = import-modul-propost.in-cobra-participacao
     2438                                     pro-pla.in-responsavel-autori   = import-modul-propost.ind-respons-autoriz
     2439                                     pro-pla.dt-atualizacao          = today
     2440                                     pro-pla.cd-userid               = v_cod_usuar_corren
     2441                                     pro-pla.dt-mov-inclusao         = today
     2442                                     pro-pla.cd-userid-inclusao      = v_cod_usuar_corren
     2443                                     pro-pla.cd-sit-modulo            = cd-sit-modulo-aux.
     2444                              
     2445                              if mod-cob.in-ctrl-carencia-proced = 1
     2446                              or mod-cob.in-ctrl-carencia-insumo = 1
     2447                              then assign pro-pla.qt-caren-eletiva  = import-modul-propost.qt-caren-eletiva 
     2448                                          pro-pla.qt-caren-urgencia = import-modul-propost.qt-caren-urgencia.
     2449                              else assign pro-pla.qt-caren-eletiva  = 0 
     2450                                          pro-pla.qt-caren-urgencia = 0.
     2451                              
     2452                              if   b-import-propost.dat-fim-propost = ?
     2453                              then.
     2454                              else assign pro-pla.dt-mov-exclusao    = today
     2455                                          pro-pla.cd-userid-exclusao = v_cod_usuar_corren.
     2456   
     2457                              RUN escrever-log("@@@@@CRIA-MODULOS P21 - FIM DE CREATE PRO-PLA").
     2458                            END.
     2459   
     2460                       if   b-import-propost.cd-forma-pagto = 3
     2461                       then do:
     2462                              RUN escrever-log("@@@@@CRIA-MODULOS P22 - FIND PLAMOFOR").
     2463                              find plamofor where plamofor.cd-modalidade = b-import-propost.cd-modalidade
     2464                                              and plamofor.cd-plano      = b-import-propost.cd-plano
     2465                                              and plamofor.cd-tipo-plano = b-import-propost.cd-tipo-plano
     2466                                              and plamofor.cd-modulo     = pla-mod.cd-modulo
     2467                                                  no-lock no-error.
     2468                              if avail plamofor
     2469                              THEN DO:
     2470                                     RUN escrever-log("@@@@@CRIA-MODULOS P23 - PLAMOFOR").
     2471                                     create pro-pla.
     2472                                     assign pro-pla.cd-modalidade            = b-import-propost.cd-modalidade
     2473                                            pro-pla.cd-plano                 = b-import-propost.cd-plano
     2474                                            pro-pla.cd-tipo-plano            = b-import-propost.cd-tipo-plano
     2475                                            pro-pla.cd-modulo                = plamofor.cd-modulo
     2476                                            pro-pla.nr-proposta              = nr-proposta-aux
     2477                                            pro-pla.cd-forma-pagto           = plamofor.cd-forma-pagto
     2478                                            pro-pla.lg-carencia              = yes
     2479                                            pro-pla.lg-cobertura-obrigatoria = yes
     2480                                            pro-pla.in-ctrl-carencia-proced  = import-modul-propost.in-ctrl-carencia-proced
     2481                                            pro-pla.in-ctrl-carencia-insumo  = import-modul-propost.in-ctrl-carencia-insumo
     2482                                            pro-pla.qt-caren-eletiva         = import-modul-propost.qt-caren-eletiva 
     2483                                            pro-pla.qt-caren-urgencia        = import-modul-propost.qt-caren-urgencia
     2484                                            pro-pla.in-cobra-participacao    = import-modul-propost.in-cobra-participacao
     2485                                            pro-pla.in-responsavel-autori    = import-modul-propost.ind-respons-autoriz  
     2486                                            pro-pla.dt-inicio                = dt-inicio-aux
     2487                                            pro-pla.dt-cancelamento          = import-modul-propost.dat-cancel
     2488                                            pro-pla.dt-fim                   = dt-fim-aux
     2489                                            pro-pla.dt-atualizacao           = today
     2490                                            pro-pla.cd-userid                = v_cod_usuar_corren
     2491                                            pro-pla.dt-mov-inclusao          = today
     2492                                            pro-pla.cd-userid-inclusao       = v_cod_usuar_corren
     2493                                            pro-pla.cd-sit-modulo            = cd-sit-modulo-aux.
     2494                                     
     2495                                      if   b-import-propost.dat-fim-propost = ?
     2496                                      then.
     2497                                      else assign pro-pla.dt-mov-exclusao    = today
     2498                                                  pro-pla.cd-userid-exclusao = v_cod_usuar_corren. 
     2499                                      RUN escrever-log("@@@@@CRIA-MODULOS P24 - FIM CREATE PRO-PLA DA PLAMOFOR").
     2500                                   END.
     2501                            END.
     2502                END.          
     2503       END. /*import-modul-propost*/
     2504   
     2505       /**
     2506        * GARANTIR QUE CRIOU TODOS OS PRO-PLA NECESSARIOS.
     2507        */
     2508       FOR FIRST import-modul-propost NO-LOCK
     2509           where import-modul-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost
     2510             AND NOT CAN-FIND(FIRST pro-pla
     2511                              WHERE pro-pla.cd-modalidade = b-import-propost.cd-modalidade
     2512                                AND pro-pla.nr-proposta   = nr-proposta-aux 
     2513                                AND pro-pla.cd-modulo     = import-modul-propost.cd-modulo):
     2514   
     2515                 RUN escrever-log("@@@@@CRIA-MODULOS P26 - NAO CRIOU PRO-PLA!!!").
     2516                 assign lg-relat-erro = yes. 
     2517                 run pi-grava-erro ("Nao conseguiu criar PRO-PLA: " + string(import-modul-propost.cd-modulo,"999") 
     2518                                    + " Modalidade: " + STRING(b-import-propost.cd-modalidade)
     2519                                    + " Proposta: "   + STRING(nr-proposta-aux)).
     2520       END.
     2521   
     2522       /**
     2523        * GARANTIR QUE A PROPOSTA TEM TODOS OS MODULOS DOS BENEFICIARIOS.
     2524        
     2525       FOR FIRST import-modul-bnfciar
     2526           WHERE import-modul-bnfciar.
     2527           
     2528           
     2529           
     2530           import-modul-propost NO-LOCK
     2531           where import-modul-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost
     2532             AND NOT CAN-FIND(FIRST pro-pla
     2533                              WHERE pro-pla.cd-modalidade = b-import-propost.cd-modalidade
     2534                                AND pro-pla.nr-proposta   = nr-proposta-aux 
     2535                                AND pro-pla.cd-modulo     = import-modul-propost.cd-modulo):
     2536   
     2537                 RUN escrever-log("@@@@@CRIA-MODULOS P26 - NAO CRIOU PRO-PLA!!!").
     2538                 assign lg-relat-erro = yes. 
     2539                 run pi-grava-erro ("Nao conseguiu criar PRO-PLA: " + string(import-modul-propost.cd-modulo,"999") 
     2540                                    + " Modalidade: " + STRING(b-import-propost.cd-modalidade)
     2541                                    + " Proposta: "   + STRING(nr-proposta-aux)).
     2542       END.
     2543       */
     2544   
     2545       RUN escrever-log("@@@@@CRIA-MODULOS P25 - SAINDO DE CRIA-MODULOS").
     2546   
     2547       IF lg-relat-erro 
     2548       THEN do:
     2549              RUN escrever-log("@@@@@CRIA-MODULOS P30 - SAINDO COM ERRO").
     2550              ASSIGN lg-relat-erro-aux = YES.
     2551              NEXT.
     2552            END.
     2553   
     2554   END PROCEDURE.
     2555   
     2556   PROCEDURE cria-lotacao:
     2557   
     2558       IF b-import-propost.in-tipo-natureza = 3 /* EMPRESARIAL */
     2559       THEN 
     2560               FOR EACH import-lotac-propost FIELDS (cdn-lotac
     2561                                                     cdn-respons-financ
     2562                                                     num-livre-3
     2563                                                     dat-livre-1
     2564                                                     dat-livre-2
     2565                                                     log-livre-1
     2566                                                     log-livre-2)
     2567                  WHERE import-lotac-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost 
     2568                    AND import-lotac-propost.cdn-lotac <> 0 NO-LOCK QUERY-TUNING (NO-INDEX-HINT):
     2569   
     2570                   CREATE lotac-propost.
     2571                   ASSIGN lotac-propost.cdn-modalid        = b-import-propost.cd-modalidade
     2572                          lotac-propost.num-propost        = nr-proposta-aux
     2573                          lotac-propost.cdn-lotac          = import-lotac-propost.cdn-lotac
     2574                          lotac-propost.cdn-respons-financ = import-lotac-propost.cdn-respons-financ
     2575                          lotac-propost.num-livre-1        = import-lotac-propost.num-livre-3 /*NRDIA_DE_VENCIMENTO*/
     2576                          lotac-propost.dat-livre-1        = import-lotac-propost.dat-livre-1 /*INICIO LOTACAO NA PROPOSTA*/
     2577                          lotac-propost.dat-livre-2        = import-lotac-propost.dat-livre-2 /*FIM LOTACAO NA PROPOSTA*/
     2578                          lotac-propost.log-livre-1        = import-lotac-propost.log-livre-1 /*UTILIZA NOME DA LOTACAO NO DOCUMENTO DE IDENTIFICACAO?*/
     2579                          .
     2580                          
     2581                   IF  lotac-propost.cdn-respons-financ <> ?
     2582                   AND lotac-propost.cdn-respons-financ <> 0
     2583                   THEN lotac-propost.log-livre-2 = YES. /* fatura lotacao?*/
     2584                   ELSE lotac-propost.log-livre-2 = NO.
     2585               END.
     2586   
     2587   END PROCEDURE.
     2588   
     2589   PROCEDURE cria-faixas:
     2590   
     2591       ASSIGN lg-relat-erro-aux = NO.
     2592   
     2593       FOR EACH import-faixa-propost FIELDS (cd-grau-parentesco nr-faixa-etaria num-idade-min num-idade-max qtd-fator-multiplic qtd-fator-multiplic-inscr)
     2594          WHERE import-faixa-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost NO-LOCK QUERY-TUNING (NO-INDEX-HINT):
     2595   
     2596           IF lg-relat-erro
     2597           THEN LEAVE.
     2598   
     2599           FOR FIRST teadgrpa FIELDS (nr-faixa-etaria)
     2600               where teadgrpa.cd-modalidade      = b-import-propost.cd-modalidade
     2601                 and teadgrpa.nr-proposta        = nr-proposta-aux
     2602                 and teadgrpa.cd-grau-parentesco = import-faixa-propost.cd-grau-parentesco
     2603                 and teadgrpa.nr-faixa-etaria   <> import-faixa-propost.nr-faixa-etaria 
     2604                 AND teadgrpa.nr-idade-minima   <= import-faixa-propost.num-idade-max 
     2605                 AND teadgrpa.nr-idade-maxima   >= import-faixa-propost.num-idade-min NO-LOCK:
     2606   
     2607               run pi-grava-erro ("Faixa Etaria Sobreposta - Tabela Importação Grau: " + string(import-faixa-propost.cd-grau-parentesco,"99") + 
     2608                                  " Faixa: "       + string(import-faixa-propost.nr-faixa-etaria,"99")      + 
     2609                                  " Base - Grau: " + string(import-faixa-propost.cd-grau-parentesco,"99")   + 
     2610                                  " Faixa: "       + string(teadgrpa.nr-faixa-etaria,"99")).
     2611               assign lg-relat-erro = yes.
     2612           END.
     2613   
     2614           IF lg-relat-erro 
     2615           THEN do:
     2616                  ASSIGN lg-relat-erro-aux = YES.
     2617                  LEAVE.
     2618                END.
     2619   
     2620           IF NOT CAN-FIND (first teadgrpa 
     2621                            where teadgrpa.cd-modalidade      = b-import-propost.cd-modalidade
     2622                              and teadgrpa.nr-proposta        = nr-proposta-aux
     2623                              and teadgrpa.cd-grau-parentesco = import-faixa-propost.cd-grau-parentesco
     2624                              and teadgrpa.nr-faixa-etaria    = import-faixa-propost.nr-faixa-etaria)
     2625           THEN do:
     2626                  create teadgrpa.
     2627                  assign teadgrpa.cd-modalidade          = b-import-propost.cd-modalidade
     2628                         teadgrpa.nr-proposta            = nr-proposta-aux
     2629                         teadgrpa.cd-grau-parentesco     = import-faixa-propost.cd-grau-parentesco
     2630                         teadgrpa.nr-faixa-etaria        = import-faixa-propost.nr-faixa-etaria
     2631                         teadgrpa.nr-idade-minima        = import-faixa-propost.num-idade-min
     2632                         teadgrpa.nr-idade-maxima        = import-faixa-propost.num-idade-max
     2633                         teadgrpa.qt-fator-multiplicador = import-faixa-propost.qtd-fator-multiplic
     2634                         teadgrpa.qt-fat-mult-inscr      = import-faixa-propost.qtd-fator-multiplic-inscr
     2635                         teadgrpa.lg-inclusao            = yes
     2636                         teadgrpa.dt-atualizacao         = today
     2637                         teadgrpa.cd-userid              = v_cod_usuar_corren.  
     2638           END.
     2639       END.
     2640   
     2641   END PROCEDURE.
     2642   
     2643   PROCEDURE cria-negoc-repas:
     2644   
     2645       FOR EACH import-negociac-propost 
     2646          where import-negociac-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost no-lock :
     2647   
     2648           /* ------------------------------------------------------------------------- */
     2649           FOR FIRST propunim EXCLUSIVE-LOCK
     2650               where propunim.cd-modalidade = b-import-propost.cd-modalidade
     2651                 and propunim.nr-proposta   = nr-proposta-aux
     2652                 and propunim.cd-unimed     = import-negociac-propost.cd-unimed:
     2653           END.
     2654           IF NOT AVAIL propunim
     2655           then do:
     2656                  create propunim.
     2657                  assign propunim.cd-modalidade  = b-import-propost.cd-modalidade
     2658                         propunim.nr-proposta    = nr-proposta-aux
     2659                         propunim.cd-unimed      = import-negociac-propost.cd-unimed.
     2660                END.
     2661   
     2662           ASSIGN propunim.cd-plano              = import-negociac-propost.cd-plano
     2663                  propunim.cd-tipo-plano         = import-negociac-propost.cd-tipo-plano
     2664                  propunim.cd-forma-pagto        = import-negociac-propost.cd-forma-pagto
     2665                  propunim.um-carencia           = import-negociac-propost.um-carencia
     2666                  propunim.qt-carencia           = import-negociac-propost.qt-carencia
     2667                  propunim.cd-tab-preco          = import-negociac-propost.cd-tab-preco
     2668                  propunim.cd-tab-preco-proc     = import-negociac-propost.cd-tab-preco-proc
     2669                  propunim.cd-tipo-vencimento    = import-negociac-propost.cdn-tip-vencto
     2670                  propunim.dd-vencimento         = import-negociac-propost.num-dia-vencto
     2671                  propunim.pc-insc-acrescimo     = import-negociac-propost.pc-acrescimo-inscr
     2672                  propunim.pc-insc-desconto      = import-negociac-propost.pc-desconto-inscr
     2673                  propunim.pc-desconto           = import-negociac-propost.pc-desconto
     2674                  propunim.pc-acrescimo          = import-negociac-propost.pc-acrescimo
     2675                  propunim.dt-inicio-rep         = import-negociac-propost.dat-inic-repas
     2676                  propunim.dt-cancelamento       = import-negociac-propost.dat-fim-repas
     2677                  propunim.mm-ult-rep            = import-negociac-propost.num-mes-ult-repas
     2678                  propunim.aa-ult-rep            = import-negociac-propost.aa-ult-repasse
     2679                  propunim.dt-atualizacao        = today
     2680                  propunim.cd-userid             = v_cod_usuar_corren
     2681                  propunim.lg-impressao-carteira = import-negociac-propost.log-impres-cart
     2682                  propunim.lg-calc-valor         = import-negociac-propost.log-calc-val             
     2683                  propunim.lg-repassar           = import-negociac-propost.log-repas
     2684                  propunim.in-exporta-repasse    = 1 /* Exportar A100 */ .  
     2685                 
     2686           if import-negociac-propost.in-tipo-valorizacao = 1
     2687           then assign propunim.lg-tipo-valorizacao-co = yes.
     2688           else assign propunim.lg-tipo-valorizacao-co = no.
     2689   
     2690           IF lg-gerar-termo-aux
     2691           THEN DO:
     2692                  FOR FIRST ter-ade FIELDS (dt-fim) NO-LOCK
     2693                      WHERE ter-ade.cd-modalidade = propost.cd-modalidade
     2694                        AND ter-ade.nr-ter-adesao = propost.nr-ter-adesao:
     2695   
     2696                            /* --------- TESTAR PROPOSTA CANCELADA OU PEA --------- */
     2697                            if   propost.dt-libera-doc <> ?
     2698                            then assign propunim.dt-fim-rep = propost.dt-libera-doc.
     2699                            else assign propunim.dt-fim-rep = ter-ade.dt-fim.
     2700                            
     2701                            assign propunim.cd-userid      = v_cod_usuar_corren
     2702                                   propunim.dt-atualizacao = today.
     2703                  END.
     2704                END.
     2705       END.
     2706   
     2707   END PROCEDURE.
     2708   
     2709   PROCEDURE cria-cobertura:
     2710   
     2711       RUN escrever-log("@@@@@@@@@@entrando em CRIA-COBERTURA. b-import-propost.num-seqcial-propost: " + string(b-import-propost.num-seqcial-propost)).
     2712   
     2713       FOR EACH import-padr-cobert-propost where import-padr-cobert-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost no-lock :
     2714   
     2715           RUN escrever-log("@@@@@@@@@@import-padr-cobert-propost.num-seqcial-propost: " + string(import-padr-cobert-propost.num-seqcial-propost)).
     2716   
     2717           IF NOT CAN-FIND (first pro-pla use-index pro-pla3
     2718                            where pro-pla.cd-modalidade   = b-import-propost.cd-modalidade
     2719                              and pro-pla.nr-proposta     = nr-proposta-aux
     2720                              and pro-pla.cd-modulo       = import-padr-cobert-propost.cd-modulo)
     2721           then do:
     2722                  RUN escrever-log("@@@@@@@@@@import-padr-cobert-propost.num-seqcial-propost(NAO ACHOU PRO-PLA. NEXT): " + string(import-padr-cobert-propost.num-seqcial-propost)).
     2723                  NEXT.
     2724                END.
     2725   
     2726           RUN escrever-log("@@@@@@@@@@ P2 import-padr-cobert-propost.num-seqcial-propost: " + string(import-padr-cobert-propost.num-seqcial-propost)).
     2727   
     2728           IF NOT CAN-FIND (FIRST propcopa 
     2729                            where propcopa.cd-modalidade       = b-import-propost.cd-modalidade
     2730                              and propcopa.nr-proposta         = nr-proposta-aux
     2731                              and propcopa.cd-padrao-cobertura = import-padr-cobert-propost.cd-padrao-cobertura
     2732                              and propcopa.cd-modulo           = import-padr-cobert-propost.cd-modulo)
     2733           then DO:
     2734   
     2735                  RUN escrever-log("@@@@@@@@@@ create PROPCOPA. modalidade: " + string(b-import-propost.cd-modalidade) 
     2736                                   + " proposta: " + STRING(nr-proposta-aux)  + "padrao: " + STRING(import-padr-cobert-propost.cd-padrao-cobertura)
     2737                                   + " modulo: " + STRING(import-padr-cobert-propost.cd-modulo)).
     2738   
     2739                  create propcopa.
     2740                  assign propcopa.cd-modalidade        = b-import-propost.cd-modalidade
     2741                         propcopa.nr-proposta          = nr-proposta-aux
     2742                         propcopa.cd-padrao-cobertura  = import-padr-cobert-propost.cd-padrao-cobertura
     2743                         propcopa.cd-modulo            = import-padr-cobert-propost.cd-modulo
     2744                         propcopa.pc-acrescimo-inscr   = import-padr-cobert-propost.pc-acrescimo-inscr
     2745                         propcopa.pc-desconto-inscr    = import-padr-cobert-propost.pc-desconto-inscr
     2746                         propcopa.pc-acresc-taxa       = import-padr-cobert-propost.pc-acresc-taxa
     2747                         propcopa.pc-desconto-taxa     = import-padr-cobert-propost.pc-desconto-taxa
     2748                         propcopa.nr-dias-bonificacao  = import-padr-cobert-propost.num-dias-bonifi
     2749                         propcopa.lg-inclusao          = yes
     2750                         propcopa.dt-atualizacao       = today
     2751                         propcopa.cd-userid            = v_cod_usuar_corren.
     2752                END.
     2753   
     2754           /*find modalid where modalid.cd-modalidade = b-import-propost.cd-modalidade no-lock no-error.
     2755           
     2756           IF AVAIL modalid
     2757           AND modalid.in-geracao-termo = 2
     2758           AND NOT CAN-FIND (first tegrpaco 
     2759                             where tegrpaco.cd-modalidade       = b-import-propost.cd-modalidade
     2760                               and tegrpaco.nr-ter-adesao       = nr-proposta-aux
     2761                               and tegrpaco.cd-padrao-cobertura = import-padr-cobert-propost.cd-padrao-cobertura
     2762                               and tegrpaco.cd-grau-parentesco  = import-padr-cobert-propost.cd-grau-parentesco
     2763                               and tegrpaco.nr-faixa-etaria     = import-padr-cobert-propost.nr-faixa-etaria)
     2764           then do:
     2765                  create tegrpaco.                                                                       
     2766                  assign tegrpaco.cd-modalidade       = b-import-propost.cd-modalidade                  
     2767                         tegrpaco.nr-ter-adesao       = nr-proposta-aux                                 
     2768                         tegrpaco.cd-padrao-cobertura = import-padr-cobert-propost.cd-padrao-cobertura
     2769                         tegrpaco.cd-grau-parentesco  = import-padr-cobert-propost.cd-grau-parentesco 
     2770                         tegrpaco.nr-faixa-etaria     = import-padr-cobert-propost.nr-faixa-etaria 
     2771                         tegrpaco.lg-inclusao         = yes
     2772                         tegrpaco.qt-fator-mult-mens  = import-padr-cobert-propost.qt-fator-mensalidade
     2773                         tegrpaco.qt-fator-mult-inscr = import-padr-cobert-propost.qt-fator-inscricao
     2774                         tegrpaco.int-1               = import-padr-cobert-propost.nr-faixa-etaria-ini
     2775                         tegrpaco.int-2               = import-padr-cobert-propost.nr-faixa-etaria-fim
     2776                         tegrpaco.dt-atualizacao      = today              
     2777                         tegrpaco.cd-userid           = v_cod_usuar_corren. 
     2778                END.*/
     2779   
     2780       END.
     2781   
     2782       RUN escrever-log("@@@@@@@@@@saindo de CRIA-COBERTURA").
     2783   END PROCEDURE.
     2784   
     2785   PROCEDURE cria-campos-espec:
     2786   
     2787       FOR EACH import-campos-propost where import-campos-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost no-lock :
     2788   
     2789           IF NOT CAN-FIND (FIRST campprop
     2790                            where campprop.cd-modalidade = b-import-propost.cd-modalidade
     2791                              and campprop.nr-proposta   = nr-proposta-aux)
     2792           then do:
     2793                  create campprop.
     2794                  assign campprop.nr-insc-contratante     = tt-import-propost.nr-insc-contrat
     2795                         campprop.cd-modalidade           = b-import-propost.cd-modalidade
     2796                         campprop.nr-proposta             = nr-proposta-aux
     2797                         campprop.ds-campo[1]             = import-campos-propost.des-campo-1
     2798                         campprop.ds-mascara[1]           = import-campos-propost.des-mascar-1
     2799                         campprop.ds-campo[2]             = import-campos-propost.des-campo-2
     2800                         campprop.ds-mascara[2]           = import-campos-propost.des-mascar-2
     2801                         campprop.ds-campo[3]             = import-campos-propost.des-campo-3
     2802                         campprop.ds-mascara[3]           = import-campos-propost.des-mascar-3
     2803                         campprop.ds-campo[4]             = import-campos-propost.des-campo-4
     2804                         campprop.ds-mascara[4]           = import-campos-propost.des-mascar-4
     2805                         campprop.cd-userid               = v_cod_usuar_corren
     2806                         campprop.dt-atualizacao          = today
     2807                         campprop.lg-obriga-digitacao[1]  = import-campos-propost.log-obrig-digitac-1
     2808                         campprop.lg-obriga-digitacao[2]  = import-campos-propost.log-obrig-digitac-2
     2809                         campprop.lg-obriga-digitacao[3]  = import-campos-propost.log-obrig-digitac-3
     2810                         campprop.lg-obriga-digitacao[4]  = import-campos-propost.log-obrig-digitac-4
     2811                         campprop.lg-consiste-dados[1]    = import-campos-propost.log-consist-dados-1
     2812                         campprop.lg-consiste-dados[2]    = import-campos-propost.log-consist-dados-2
     2813                         campprop.lg-consiste-dados[3]    = import-campos-propost.log-consist-dados-3
     2814                         campprop.lg-consiste-dados[4]    = import-campos-propost.log-consist-dados-4.
     2815   
     2816                END.
     2817       END.
     2818   
     2819   END PROCEDURE.
     2820   
     2821   PROCEDURE cria-proced-propost:
     2822   
     2823       FOR EACH import-proced-propost where import-proced-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost no-lock :
     2824   
     2825           FOR FIRST pro-pla FIELDS (cd-forma-pagto dt-inicio) use-index pro-pla3
     2826               where pro-pla.cd-modalidade   = b-import-propost.cd-modalidade
     2827                 and pro-pla.nr-proposta     = nr-proposta-aux
     2828                 and pro-pla.cd-modulo       = import-proced-propost.cd-modulo NO-LOCK:
     2829           END.
     2830   
     2831           if   not avail pro-pla
     2832           then NEXT.
     2833   
     2834           IF import-proced-propost.dt-inicial < pro-pla.dt-inicio
     2835           then do:
     2836                  ASSIGN lg-relat-erro = YES.
     2837                  RUN pi-grava-erro("Data de inicio do procedimento menor que a data de inicio do modulo na proposta").
     2838                END.
     2839           
     2840           /* ---------------------- VERIFICA TABELA DE MOEDAS/CARENCIA ATIVA --- */
     2841           if   import-proced-propost.dt-cancela = ?                              
     2842           then do:
     2843                  IF NOT CAN-FIND (first precproc 
     2844                                   where precproc.cd-tab-preco   = import-proced-propost.cd-tab-preco
     2845                                     and precproc.cd-forma-pagto = pro-pla.cd-forma-pagto
     2846                                     and precproc.dt-limite     >= import-proced-propost.dt-inicial)
     2847           
     2848                  THEN IF NOT CAN-FIND (first precproc 
     2849                                        where precproc.cd-tab-preco   = import-proced-propost.cd-tab-preco
     2850                                          and precproc.cd-forma-pagto = pro-pla.cd-forma-pagto
     2851                                          and precproc.dt-limite     >= import-proced-propost.dt-cancela)
     2852                       then DO:
     2853                              ASSIGN lg-relat-erro = YES.
     2854                              RUN pi-grava-erro("Data de inicio do procedimento menor que a data de inicio do modulo na proposta").  
     2855                            END.
     2856                END.
     2857   
     2858           IF lg-relat-erro
     2859           THEN DO:
     2860                  ASSIGN lg-relat-erro-aux = YES.
     2861                  NEXT.
     2862                END.
     2863   
     2864           FOR FIRST pr-mo-am 
     2865               where pr-mo-am.cd-modalidade    = b-import-propost.cd-modalidade
     2866                 and pr-mo-am.nr-proposta      = nr-proposta-aux
     2867                 and pr-mo-am.cd-modulo        = import-proced-propost.cd-modulo
     2868                 and pr-mo-am.cd-amb           = import-proced-propost.cd-amb
     2869                 and (pr-mo-am.dt-cancelamento > today
     2870                  or pr-mo-am.dt-cancelamento  = ?) EXCLUSIVE-LOCK:
     2871           END.
     2872           IF NOT AVAIL pr-mo-am
     2873           then do:
     2874                  create pr-mo-am.
     2875                  assign pr-mo-am.cd-modalidade           = b-import-propost.cd-modalidade
     2876                         pr-mo-am.nr-proposta             = nr-proposta-aux
     2877                         pr-mo-am.cd-modulo               = import-proced-propost.cd-modulo
     2878                         pr-mo-am.cd-amb                  = import-proced-propost.cd-amb
     2879                         pr-mo-am.dt-cancelamento         = import-proced-propost.dt-cancela.
     2880                END.
     2881   
     2882           ASSIGN pr-mo-am.cd-tab-preco            = import-proced-propost.cd-tab-preco
     2883                  pr-mo-am.dt-inicio               = import-proced-propost.dt-inicial
     2884                  pr-mo-am.nr-dias-validade        = import-proced-propost.nr-dias-validade
     2885                  pr-mo-am.int-2                   = import-proced-propost.qt-procedimento
     2886                  pr-mo-am.cd-userid               = v_cod_usuar_corren
     2887                  pr-mo-am.dt-atualizacao          = today
     2888                  pr-mo-am.lg-acrescimo-cobertura  = import-proced-propost.log-acresc-cobert.
     2889   
     2890           IF lg-gerar-termo-aux
     2891           AND AVAIL ter-ade
     2892           THEN DO:
     2893                 /* ------ TESTAR PROPOSTA CANCELADA OU PEA ---------- */
     2894                 if   propost.dt-libera-doc <> ?
     2895                 then assign pr-mo-am.dt-fim = propost.dt-libera-doc.
     2896                 else do:
     2897                        if   pr-mo-am.dt-cancelamento <> ?
     2898                        then assign pr-mo-am.dt-fim = propost.dt-libera-doc.
     2899                        else assign pr-mo-am.dt-fim = ter-ade.dt-fim.
     2900                      end.
     2901                END.
     2902           ELSE pr-mo-am.dt-fim = ?.
     2903       END.
     2904   
     2905   END PROCEDURE.
     2906   
     2907   PROCEDURE cria-mo:
     2908   
     2909       FOR EACH import-mo-propost where import-mo-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost no-lock :
     2910   
     2911           IF NOT CAN-FIND (FIRST depsetse 
     2912                            where depsetse.cd-modalidade   = b-import-propost.cd-modalidade
     2913                              and depsetse.nr-proposta     = nr-proposta-aux
     2914                              and depsetse.cd-departamento = import-mo-propost.cd-departamento
     2915                              and depsetse.cd-secao        = import-mo-propost.cd-secao
     2916                              and depsetse.cd-setor        = import-mo-propost.cd-setor)
     2917           then do:
     2918                  /*----- CRIA DEPSETSE ------------------------------------------------*/
     2919                  create depsetse.
     2920                  assign depsetse.cd-modalidade    = b-import-propost.cd-modalidade
     2921                         depsetse.nr-proposta      = nr-proposta-aux
     2922                         depsetse.nr-ter-adesao    = propost.nr-ter-adesao
     2923                         depsetse.cd-departamento  = import-mo-propost.cd-departamento
     2924                         depsetse.cd-secao         = import-mo-propost.cd-secao
     2925                         depsetse.cd-setor         = import-mo-propost.cd-setor
     2926                         depsetse.char-1           = "A"
     2927                         depsetse.cd-userid        = v_cod_usuar_corren
     2928                         depsetse.dt-atualizacao   = TODAY.
     2929                end.
     2930       END.
     2931   
     2932   END PROCEDURE.
     2933   
     2934   PROCEDURE cria-mo-funcao:
     2935   
     2936       FOR EACH import-funcao-propost FIELDS (cd-funcao des-funcao)
     2937          where import-funcao-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost NO-LOCK,
     2938   
     2939          FIRST import-mo-propost where import-mo-propost.num-seqcial-propost = b-import-propost.num-seqcial-propost NO-LOCK:
     2940   
     2941           IF NOT can-find (first funcprop 
     2942                            where funcprop.cd-modalidade = import-propost.cd-modalidade
     2943                              and funcprop.nr-proposta   = nr-proposta-aux
     2944                              and (funcprop.cd-setor     = import-mo-propost.cd-setor
     2945                                or funcprop.cd-setor     = 0)
     2946                              and funcprop.cd-funcao     = import-funcao-propost.cd-funcao)
     2947           then do:
     2948                  /**************** CRIA FUNCPROP *************************************/
     2949                  create funcprop.
     2950                  assign funcprop.cd-modalidade  = b-import-propost.cd-modalidade 
     2951                         funcprop.nr-proposta    = nr-proposta-aux   
     2952                         funcprop.cd-funcao      = import-funcao-propost.cd-funcao
     2953                         funcprop.ds-detalhada   = import-funcao-propost.des-funcao
     2954                         funcprop.cd-userid      = v_cod_usuar_corren
     2955                         funcprop.dt-atualizacao = today.
     2956                  
     2957                  if import-mo-propost.cd-setor = ? 
     2958                  or import-mo-propost.cd-setor = 0
     2959                  then assign funcprop.cd-setor = 0.
     2960                  else assign funcprop.cd-setor = import-mo-propost.cd-setor.
     2961                END.
     2962       END.
     2963   
     2964   END PROCEDURE.
     2965   
     2966   /* ------------------------------------------------------------------------- */ 
     2967   procedure remover.
     2968   
     2969       DEF BUFFER b-propost  FOR propost.
     2970       DEF BUFFER bb-propost FOR propost.
     2971   
     2972       find first paramecp no-lock no-error.
     2973       if   avail paramecp
     2974       then do:
     2975              find b-propost where b-propost.ep-codigo     = paramecp.ep-codigo
     2976                               and b-propost.cod-estabel   = paramecp.cod-estabel
     2977                               and b-propost.cd-modalidade = propost.cd-modalidade
     2978                               and b-propost.nr-proposta   = propost.nr-proposta
     2979                                   exclusive-lock no-error.
     2980              if   avail b-propost
     2981              then do:
     2982                     /*-- Include de eliminacao da proposta nas tabelas com referencia. ---*/
     2983                     /* Eliminacao de todas as tabelas de referencia da proposta */
     2984   
     2985   for each comisaux                                 
     2986            where comisaux.cd-modalidade = b-propost.cd-modalidade       
     2987              and comisaux.nr-proposta   = b-propost.nr-proposta       
     2988            exclusive-lock:                          
     2989       delete comisaux.
     2990   end.                                              
     2991   
     2992   for each valprodu                                 
     2993            where valprodu.cd-modalidade = b-propost.cd-modalidade       
     2994              and valprodu.nr-proposta   = b-propost.nr-proposta       
     2995            exclusive-lock:                          
     2996       delete valprodu.                              
     2997   end.                                              
     2998                                                     
     2999   for each depsetse                                 
     3000            where depsetse.cd-modalidade = b-propost.cd-modalidade       
     3001              and depsetse.nr-proposta   = b-propost.nr-proposta       
     3002            exclusive-lock:                          
     3003       delete depsetse.
     3004                                
     3005   end.                                              
     3006                                                     
     3007   for each funcprop
     3008            where funcprop.cd-modalidade = b-propost.cd-modalidade
     3009              and funcprop.nr-proposta   = b-propost.nr-proposta
     3010            exclusive-lock:
     3011       delete funcprop.
     3012   end.
     3013   
     3014   for each usumodu                                  
     3015            where usumodu.cd-modalidade = b-propost.cd-modalidade        
     3016              and usumodu.nr-proposta   = b-propost.nr-proposta        
     3017            exclusive-lock:                          
     3018       delete usumodu.
     3019                                 
     3020   end.                                              
     3021                                                     
     3022   for each usucaren                                 
     3023            where usucaren.cd-modalidade = b-propost.cd-modalidade       
     3024              and usucaren.nr-proposta   = b-propost.nr-proposta       
     3025            exclusive-lock:                          
     3026       delete usucaren.
     3027                                
     3028   end.                  
     3029   
     3030   for each usucarproc                                 
     3031            where usucarproc.cd-modalidade = b-propost.cd-modalidade       
     3032              and usucarproc.nr-proposta   = b-propost.nr-proposta       
     3033            exclusive-lock:                          
     3034       delete usucarproc.                              
     3035   end.                  
     3036                                                     
     3037   for each qtmcopre                                 
     3038            where qtmcopre.cd-modalidade = b-propost.cd-modalidade       
     3039              and qtmcopre.nr-proposta   = b-propost.nr-proposta       
     3040            exclusive-lock:                          
     3041       delete qtmcopre.                              
     3042   end.                                              
     3043                                                     
     3044   for each qtmpgpre                                 
     3045            where qtmpgpre.cd-modalidade = b-propost.cd-modalidade       
     3046              and qtmpgpre.nr-proposta   = b-propost.nr-proposta       
     3047            exclusive-lock:                          
     3048       delete qtmpgpre.                              
     3049   end.                                              
     3050                                                     
     3051   for each campprop                                 
     3052            where campprop.cd-modalidade = b-propost.cd-modalidade       
     3053              and campprop.nr-proposta   = b-propost.nr-proposta       
     3054            exclusive-lock:                          
     3055       delete campprop.                              
     3056   end.                                              
     3057                                                     
     3058   for each decprest                                 
     3059            where decprest.cd-modalidade = b-propost.cd-modalidade       
     3060              and decprest.nr-proposta   = b-propost.nr-proposta       
     3061            exclusive-lock:                          
     3062       delete decprest.                              
     3063   end.                                              
     3064                                                     
     3065   for each dzdeccid                                 
     3066            where dzdeccid.cd-modalidade = b-propost.cd-modalidade       
     3067              and dzdeccid.nr-proposta   = b-propost.nr-proposta       
     3068            exclusive-lock:                          
     3069       delete dzdeccid.                              
     3070   end.                                              
     3071                                                     
     3072   for each fxpalovp                                 
     3073            where fxpalovp.cd-modalidade = b-propost.cd-modalidade       
     3074              and fxpalovp.nr-proposta   = b-propost.nr-proposta       
     3075            exclusive-lock:                          
     3076       delete fxpalovp.                              
     3077   end.                                              
     3078                                                     
     3079   for each fxparpro                                 
     3080            where fxparpro.cd-modalidade = b-propost.cd-modalidade       
     3081              and fxparpro.nr-proposta   = b-propost.nr-proposta       
     3082            exclusive-lock:                          
     3083       delete fxparpro.                              
     3084   end.                                              
     3085                                                     
     3086   for each movcarrc                                 
     3087            where movcarrc.cd-modalidade = b-propost.cd-modalidade       
     3088              and movcarrc.nr-proposta   = b-propost.nr-proposta       
     3089            exclusive-lock:                          
     3090       delete movcarrc.
     3091                                
     3092   end.                                              
     3093                                                     
     3094   for each pr-id-us                                 
     3095            where pr-id-us.cd-modalidade = b-propost.cd-modalidade       
     3096              and pr-id-us.nr-proposta   = b-propost.nr-proposta       
     3097            exclusive-lock:                          
     3098       delete pr-id-us.
     3099                                
     3100   end.                                              
     3101                                                     
     3102   for each pr-mo-am                                 
     3103            where pr-mo-am.cd-modalidade = b-propost.cd-modalidade       
     3104              and pr-mo-am.nr-proposta   = b-propost.nr-proposta       
     3105            exclusive-lock:                          
     3106       delete pr-mo-am.
     3107                                
     3108   end.                                              
     3109                                                     
     3110   for each pro-pla use-index pro-pla2                      
     3111            where pro-pla.cd-modalidade = b-propost.cd-modalidade
     3112              and pro-pla.nr-proposta   = b-propost.nr-proposta
     3113            exclusive-lock:                                 
     3114       delete pro-pla validate(true,"").
     3115   end. 
     3116   
     3117   for each procpres                                 
     3118            where procpres.cd-modalidade = b-propost.cd-modalidade       
     3119              and procpres.nr-proposta   = b-propost.nr-proposta       
     3120            exclusive-lock:                          
     3121       delete procpres.
     3122                                
     3123   end.                                              
     3124                                                     
     3125   for each propcart                                 
     3126            where propcart.cd-modalidade = b-propost.cd-modalidade       
     3127              and propcart.nr-proposta   = b-propost.nr-proposta       
     3128            exclusive-lock:                          
     3129       delete propcart.                              
     3130   end.                                              
     3131                                                     
     3132   for each propcopa                                 
     3133            where propcopa.cd-modalidade = b-propost.cd-modalidade       
     3134              and propcopa.nr-proposta   = b-propost.nr-proposta       
     3135            exclusive-lock:                          
     3136       delete propcopa.
     3137                                
     3138   end.                                              
     3139                                                     
     3140   for each usureate                                 
     3141            where usureate.cd-modalidade = b-propost.cd-modalidade       
     3142              and usureate.nr-proposta   = b-propost.nr-proposta       
     3143            exclusive-lock:                          
     3144       delete usureate.                              
     3145   end.                                              
     3146                                                     
     3147   for each proptaxa                                 
     3148            where proptaxa.cd-modalidade = b-propost.cd-modalidade       
     3149              and proptaxa.nr-proposta   = b-propost.nr-proposta       
     3150            exclusive-lock:                          
     3151       delete proptaxa.                              
     3152   end.                                              
     3153                                                     
     3154   for each propunim                                 
     3155            where propunim.cd-modalidade = b-propost.cd-modalidade       
     3156              and propunim.nr-proposta   = b-propost.nr-proposta       
     3157            exclusive-lock:                          
     3158       delete propunim.
     3159                                
     3160   end.                                              
     3161                                                     
     3162   for each prorespr                                 
     3163            where prorespr.cd-modalidade = b-propost.cd-modalidade       
     3164              and prorespr.nr-proposta   = b-propost.nr-proposta       
     3165            exclusive-lock:                          
     3166       delete prorespr.                              
     3167   end.                                              
     3168                                                     
     3169   for each prunineg                                 
     3170            where prunineg.cd-modalidade = b-propost.cd-modalidade       
     3171              and prunineg.nr-proposta   = b-propost.nr-proposta       
     3172            exclusive-lock:                          
     3173       delete prunineg.                              
     3174   end.                                              
     3175                                                     
     3176   for each sobtxpro                                 
     3177            where sobtxpro.cd-modalidade = b-propost.cd-modalidade       
     3178              and sobtxpro.nr-proposta   = b-propost.nr-proposta       
     3179            exclusive-lock:                          
     3180       delete sobtxpro.
     3181                                
     3182   end.                                              
     3183                                                     
     3184   for each teadgrpa                                 
     3185            where teadgrpa.cd-modalidade = b-propost.cd-modalidade       
     3186              and teadgrpa.nr-proposta   = b-propost.nr-proposta       
     3187            exclusive-lock:                          
     3188       delete teadgrpa.
     3189                                
     3190   end.                                              
     3191                                                     
     3192   for each tegrpaco                                 
     3193            where tegrpaco.cd-modalidade = b-propost.cd-modalidade       
     3194              and tegrpaco.nr-proposta   = b-propost.nr-proposta       
     3195            exclusive-lock:                          
     3196       delete tegrpaco.                              
     3197   end.                                              
     3198                                                     
     3199   for each dzdecpro 
     3200            where dzdecpro.cd-modalidade = b-propost.cd-modalidade
     3201              and dzdecpro.nr-proposta   = b-propost.nr-proposta
     3202                  exclusive-lock. 
     3203       delete dzdecpro.                                                 
     3204   end.
     3205   
     3206   for each usuario                                  
     3207            where usuario.cd-modalidade = b-propost.cd-modalidade        
     3208              and usuario.nr-proposta   = b-propost.nr-proposta        
     3209            exclusive-lock:                          
     3210       delete usuario.
     3211                                 
     3212   end.                                              
     3213                                                     
     3214   for each usurepas                                 
     3215            where usurepas.cd-modalidade = b-propost.cd-modalidade       
     3216              and usurepas.nr-proposta   = b-propost.nr-proposta       
     3217            exclusive-lock:                          
     3218       delete usurepas.
     3219                                
     3220   end.
     3221   
     3222   for each proptxtr                                 
     3223            where proptxtr.cd-modalidade = b-propost.cd-modalidade       
     3224              and proptxtr.nr-proposta   = b-propost.nr-proposta       
     3225            exclusive-lock:                          
     3226       delete proptxtr.                              
     3227   end.
     3228        
     3229    
     3230       
     3231                     /* --- TABELA SIT-APROV-PROPOSTA --- */
     3232                     find sit-aprov-proposta where sit-aprov-proposta.cd-modalidade = b-propost.cd-modalidade
     3233                                               and sit-aprov-proposta.nr-proposta   = b-propost.nr-proposta exclusive-lock no-error.
     3234                     if avail sit-aprov-proposta
     3235                     then delete sit-aprov-proposta.
     3236       
     3237                     find first contrat where contrat.nr-insc-contratante = b-propost.nr-insc-contratante exclusive-lock no-error.
     3238                     if avail contrat
     3239                     THEN DO:
     3240                            find first bb-propost where bb-propost.nr-insc-contratante = contrat.nr-insc-contratante no-lock no-error.
     3241                            if not avail bb-propost
     3242                            then assign contrat.lg-tem-proposta = no.
     3243                                 
     3244                            assign lg-tem-proposta-aux = no.
     3245                            for each modalid fields (cd-modalidade) no-lock:
     3246                                if can-find (first propost use-index propo20 
     3247                                             where propost.cd-modalidade          = modalid.cd-modalidade
     3248                                               and propost.nr-insc-contrat-origem = contrat.nr-insc-contratante)
     3249                                then do:
     3250                                       assign lg-tem-proposta-aux = yes.  
     3251                                       leave.
     3252                                     end.
     3253                            end.
     3254                           
     3255                            if lg-tem-proposta-aux = no
     3256                            then assign contrat.lg-tem-proposta-contr-orig = no.
     3257                          END.
     3258   
     3259                     FOR EACH ter-ade EXCLUSIVE-LOCK
     3260                        WHERE ter-ade.cd-modalidade = b-propost.cd-modalidade
     3261                          AND ter-ade.nr-ter-adesao = b-propost.nr-ter-adesao:
     3262                              DELETE ter-ade.
     3263                     END.
     3264   
     3265                     delete b-propost.
     3266   
     3267                     RELEASE b-propost.
     3268                     
     3269                   end.
     3270            end.
     3271   end procedure.
     3272   
     3273   /* ------------------------------------------------------------------------------------------- */
     3274   procedure pi-grava-erro:
     3275   
     3276       DEF INPUT PARAM ds-erro-par AS CHAR NO-UNDO.
     3277   
     3278       IF nro-seq-aux = 0
     3279       THEN do:
     3280              IF CAN-FIND (FIRST erro-process-import WHERE erro-process-import.num-seqcial-control = b-import-propost.num-seqcial-control)
     3281              THEN RUN pi-consulta-prox-seq (INPUT b-import-propost.num-seqcial-control, OUTPUT nro-seq-aux).
     3282              ELSE ASSIGN nro-seq-aux = nro-seq-aux + 1.
     3283            END.
     3284       ELSE ASSIGN nro-seq-aux = nro-seq-aux + 1.
     3285       
     3286       /**
     3287        * Garantir unicidade da chave.
     3288        */
     3289       create erro-process-import.
     3290       REPEAT:
     3291           assign erro-process-import.num-seqcial         = nro-seq-aux
     3292                  erro-process-import.num-seqcial-control = b-import-propost.num-seqcial-control NO-ERROR.
     3293           VALIDATE erro-process-import NO-ERROR.
     3294           IF ERROR-STATUS:ERROR
     3295           OR ERROR-STATUS:NUM-MESSAGES > 0
     3296           THEN do:
     3297                  ASSIGN nro-seq-aux = nro-seq-aux + 1.
     3298                  PAUSE(1). /* aguarda 1seg e busca novamente o proximo nr livre.*/
     3299                END.
     3300           else leave.    /* o nr gerado eh valido. continua o processo.*/
     3301       END.
     3302   
     3303       ASSIGN erro-process-import.nom-tab-orig-erro   = "BE - import-propost"
     3304              erro-process-import.des-erro            = ds-erro-par
     3305              erro-process-import.dat-erro            = today. 
     3306   
     3307       FOR FIRST control-migrac FIELDS (ind-sit-import)
     3308           WHERE control-migrac.num-seqcial = b-import-propost.num-seqcial-control EXCLUSIVE-LOCK:
     3309       END.
     3310       if avail control-migrac
     3311       then assign control-migrac.ind-sit-import = "PE".
     3312   
     3313       FOR FIRST bb-import-propost FIELDS (ind-sit-import) 
     3314           WHERE bb-import-propost.num-seqcial-control = erro-process-import.num-seqcial-control EXCLUSIVE-LOCK:
     3315       END.
     3316       IF AVAIL bb-import-propost
     3317       THEN DO:        
     3318              ASSIGN bb-import-propost.ind-sit-import = "PE".
     3319   
     3320              VALIDATE bb-import-propost.
     3321              RELEASE  bb-import-propost.
     3322            END.
     3323   
     3324   end procedure.
     3325   
     3326   procedure pi-consulta-prox-seq:
     3327   
     3328       def input  parameter nr-seq-contr-p like erro-process-import.num-seqcial-control no-undo.
     3329       def output parameter nro-seq-par    as int initial 0                             no-undo.
     3330   
     3331       def buffer b-erro-process-import for erro-process-import.
     3332   
     3333       select max(erro-process-import.num-seqcial) into nro-seq-par 
     3334              from erro-process-import 
     3335              where erro-process-import.num-seqcial-control = nr-seq-contr-p.
     3336   
     3337       if nro-seq-par = ?
     3338       then assign nro-seq-par = 1.
     3339       else assign nro-seq-par = nro-seq-par + 1.
     3340   
     3341   end procedure.
     3342   
     3343   PROCEDURE escrever-log:
     3344       DEF INPUT PARAMETER ds-mens-aux AS CHAR NO-UNDO.
     3345   END.
